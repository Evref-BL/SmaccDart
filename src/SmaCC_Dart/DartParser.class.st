Class {
	#name : #DartParser,
	#superclass : #SmaCCGLRParser,
	#category : #'SmaCC_Dart'
}

{ #category : #generated }
DartParser class >> ambiguousTransitions [
^#(
#[ 0 6 0 10] 
#[ 0 10 0 14] 
#[ 0 10 0 22] 
#[ 0 90 0 94] 
#[ 0 70 0 198] 
#[ 0 150 0 202] 
#[ 0 154 0 206] 
#[ 0 158 0 210] 
#[ 0 162 0 214] 
#[ 0 166 0 218] 
#[ 0 170 0 222] 
#[ 0 174 0 226] 
#[ 0 178 0 230] 
#[ 0 182 0 234] 
#[ 1 2 1 189] 
#[ 0 78 4 121] 
#[ 0 94 4 161] 
#[ 0 94 4 121] 
#[ 1 2 5 9] 
#[ 0 141 1 138] 
#[ 0 145 1 138] 
#[ 0 149 1 138] 
#[ 0 153 1 138] 
#[ 0 157 1 138] 
#[ 0 161 1 138] 
#[ 0 165 1 138] 
#[ 0 169 1 138] 
#[ 0 173 1 138] 
#[ 1 138 5 13] 
#[ 1 138 5 17] 
#[ 0 185 1 138] 
#[ 0 189 1 138] 
#[ 0 193 1 138] 
#[ 0 197 1 138] 
#[ 0 201 1 138] 
#[ 0 205 1 138] 
#[ 0 209 1 138] 
#[ 0 213 1 138] 
#[ 0 217 1 138] 
#[ 1 138 5 21] 
#[ 0 225 1 138] 
#[ 0 229 1 138] 
#[ 0 233 1 138] 
#[ 0 237 1 138] 
#[ 0 241 1 138] 
#[ 0 245 1 138] 
#[ 0 249 1 138] 
#[ 0 253 1 138] 
#[ 1 1 1 138] 
#[ 1 5 1 138] 
#[ 1 9 1 138] 
#[ 1 142 5 29] 
#[ 1 150 1 193] 
#[ 1 150 5 37] 
#[ 1 158 5 45] 
#[ 1 158 5 29] 
#[ 1 190 5 101] 
#[ 1 102 4 161] 
#[ 1 102 4 121] 
#[ 1 102 4 165] 
#[ 0 10 3 9] 
#[ 0 10 3 29] 
#[ 0 10 0 141] 
#[ 0 10 0 145] 
#[ 0 10 0 149] 
#[ 0 10 0 153] 
#[ 0 10 1 29] 
#[ 0 10 0 161] 
#[ 0 10 0 165] 
#[ 0 10 0 169] 
#[ 0 10 0 173] 
#[ 0 10 0 177] 
#[ 0 10 0 181] 
#[ 0 10 0 185] 
#[ 0 10 0 189] 
#[ 0 10 0 193] 
#[ 0 10 0 197] 
#[ 0 10 0 201] 
#[ 0 10 0 205] 
#[ 0 10 0 209] 
#[ 0 10 0 213] 
#[ 0 10 0 217] 
#[ 0 10 0 221] 
#[ 0 10 0 225] 
#[ 0 10 0 229] 
#[ 0 10 3 41] 
#[ 0 10 1 37] 
#[ 0 10 1 41] 
#[ 0 10 1 45] 
#[ 0 10 1 49] 
#[ 0 10 1 53] 
#[ 0 10 1 57] 
#[ 0 10 1 61] 
#[ 0 10 1 65] 
#[ 0 10 2 169] 
#[ 0 10 2 177] 
#[ 0 10 2 181] 
#[ 0 10 2 185] 
#[ 0 10 2 189] 
#[ 0 10 2 193] 
#[ 0 10 2 197] 
#[ 0 10 2 201] 
#[ 0 10 2 205] 
#[ 0 10 2 209] 
#[ 0 150 2 225] 
#[ 0 150 0 202 2 233] 
#[ 0 150 2 241] 
#[ 0 150 2 245] 
#[ 0 150 2 249] 
#[ 0 150 0 202 2 253] 
#[ 0 150 3 1] 
#[ 0 145 0 150] 
#[ 0 150 1 41] 
#[ 0 150 1 61] 
#[ 0 150 3 93] 
#[ 2 30 2 34] 
#[ 2 106 7 9] 
#[ 2 110 7 13] 
#[ 2 110 7 17] 
#[ 2 114 7 21] 
#[ 2 118 7 25] 
#[ 2 122 7 37] 
#[ 2 126 7 49] 
#[ 2 130 6 93] 
#[ 2 130 6 109] 
#[ 2 134 5 145] 
#[ 2 134 5 153] 
#[ 2 134 7 73] 
#[ 2 134 7 77] 
#[ 2 134 7 81] 
#[ 2 138 7 113] 
#[ 2 142 7 125] 
#[ 2 146 7 137] 
#[ 2 150 5 149] 
#[ 2 150 7 149] 
#[ 2 154 5 133] 
#[ 2 154 5 137] 
#[ 2 158 5 121] 
#[ 2 158 5 129] 
#[ 2 158 5 141] 
#[ 2 158 5 181] 
#[ 2 162 7 193] 
#[ 2 170 7 197] 
#[ 2 182 2 186] 
#[ 0 90 0 94 4 161] 
#[ 0 90 0 94 4 121] 
#[ 0 170 2 197] 
#[ 2 169 2 218] 
#[ 2 173 2 218] 
#[ 2 177 2 218] 
#[ 2 181 2 218] 
#[ 2 185 2 218] 
#[ 2 189 2 218] 
#[ 2 193 2 218] 
#[ 2 197 2 218] 
#[ 2 201 2 218] 
#[ 2 205 2 218] 
#[ 2 209 2 218] 
#[ 1 2 4 121] 
#[ 3 26 9 81] 
#[ 3 118 9 129] 
#[ 0 10 6 37] 
#[ 0 10 9 149] 
#[ 2 169 3 102] 
#[ 2 173 3 102] 
#[ 2 177 3 102] 
#[ 2 181 3 102] 
#[ 2 185 3 102] 
#[ 2 189 3 102] 
#[ 2 193 3 102] 
#[ 2 197 3 102] 
#[ 2 201 3 102] 
#[ 2 205 3 102] 
#[ 2 209 3 102] 
#[ 3 238 3 242] 
#[ 4 26 10 165] 
#[ 4 30 10 173] 
#[ 4 34 10 181] 
#[ 1 201 4 34] 
#[ 4 34 6 101] 
#[ 1 193 4 34] 
#[ 4 34 10 185] 
#[ 4 34 10 189] 
#[ 4 34 6 113] 
#[ 4 50 10 173] 
#[ 4 58 7 25] 
#[ 4 66 7 37] 
#[ 4 74 7 49] 
#[ 4 82 6 93] 
#[ 4 82 6 109] 
#[ 4 98 5 145] 
#[ 4 98 5 153] 
#[ 4 98 7 73] 
#[ 4 98 7 77] 
#[ 4 98 7 81] 
#[ 4 114 7 113] 
#[ 4 122 7 125] 
#[ 4 130 7 137] 
#[ 4 138 5 149] 
#[ 4 138 7 149] 
#[ 4 146 5 133] 
#[ 4 146 5 137] 
#[ 4 154 5 121] 
#[ 4 154 5 129] 
#[ 4 154 5 141] 
#[ 4 154 5 181] 
#[ 0 10 12 245] 
#[ 0 10 12 249] 
#[ 0 10 13 89] 
#[ 5 126 13 117] 
#[ 2 149 5 134] 
#[ 0 10 0 134] 
#[ 5 162 13 157] 
#[ 2 169 5 166] 
#[ 2 173 5 166] 
#[ 2 177 5 166] 
#[ 2 181 5 166] 
#[ 2 185 5 166] 
#[ 2 189 5 166] 
#[ 2 193 5 166] 
#[ 2 197 5 166] 
#[ 2 201 5 166] 
#[ 2 205 5 166] 
#[ 2 209 5 166] 
#[ 2 169 5 170] 
#[ 2 173 5 170] 
#[ 2 177 5 170] 
#[ 2 181 5 170] 
#[ 2 185 5 170] 
#[ 2 189 5 170] 
#[ 2 193 5 170] 
#[ 2 197 5 170] 
#[ 2 201 5 170] 
#[ 2 205 5 170] 
#[ 2 209 5 170] 
#[ 0 181 1 138] 
#[ 0 221 1 138] 
#[ 6 58 6 62] 
#[ 1 201 6 66] 
#[ 2 34 7 241] 
#[ 6 162 14 157] 
#[ 1 201 6 222] 
#[ 7 42 15 109] 
#[ 0 154 2 225] 
#[ 0 154 0 206 2 233] 
#[ 0 154 16 1] 
#[ 0 154 2 241] 
#[ 0 154 2 245] 
#[ 0 154 2 249] 
#[ 0 154 0 206 2 253] 
#[ 0 154 3 1] 
#[ 0 145 0 154] 
#[ 2 225 2 250] 
#[ 2 229 2 250] 
#[ 2 233 2 250] 
#[ 2 241 2 250] 
#[ 2 245 2 250] 
#[ 2 249 2 250] 
#[ 2 250 2 253] 
#[ 2 250 3 1] 
#[ 2 250 3 5] 
#[ 2 250 3 9] 
#[ 2 250 3 13] 
#[ 2 250 6 29] 
#[ 2 250 6 33] 
#[ 2 250 3 17] 
#[ 2 250 3 21] 
#[ 2 250 3 25] 
#[ 2 250 3 29] 
#[ 2 250 3 33] 
#[ 2 250 3 37] 
#[ 0 141 2 250] 
#[ 0 145 2 250] 
#[ 0 149 2 250] 
#[ 0 153 2 250] 
#[ 1 29 2 250] 
#[ 0 161 2 250] 
#[ 0 165 2 250] 
#[ 0 169 2 250] 
#[ 0 173 2 250] 
#[ 0 177 2 250] 
#[ 0 181 2 250] 
#[ 0 185 2 250] 
#[ 0 189 2 250] 
#[ 0 193 2 250] 
#[ 0 197 2 250] 
#[ 0 201 2 250] 
#[ 0 205 2 250] 
#[ 0 209 2 250] 
#[ 0 213 2 250] 
#[ 0 217 2 250] 
#[ 0 221 2 250] 
#[ 0 225 2 250] 
#[ 0 229 2 250] 
#[ 2 250 6 37] 
#[ 1 37 2 250] 
#[ 1 41 2 250] 
#[ 1 45 2 250] 
#[ 1 49 2 250] 
#[ 1 53 2 250] 
#[ 1 57 2 250] 
#[ 1 61 2 250] 
#[ 2 250 3 45] 
#[ 2 250 3 49] 
#[ 2 250 3 53] 
#[ 2 250 3 57] 
#[ 2 250 3 61] 
#[ 2 250 3 65] 
#[ 2 250 3 69] 
#[ 2 250 3 73] 
#[ 2 250 3 77] 
#[ 2 250 3 81] 
#[ 2 250 3 85] 
#[ 2 250 3 89] 
#[ 2 250 3 93] 
#[ 1 65 2 250] 
#[ 2 169 7 218] 
#[ 2 173 7 218] 
#[ 2 177 7 218] 
#[ 2 181 7 218] 
#[ 2 185 7 218] 
#[ 2 189 7 218] 
#[ 2 193 7 218] 
#[ 2 197 7 218] 
#[ 2 201 7 218] 
#[ 2 205 7 218] 
#[ 2 209 7 218] 
#[ 8 78 10 181] 
#[ 1 201 8 78] 
#[ 6 101 8 78] 
#[ 1 193 8 78] 
#[ 8 78 10 185] 
#[ 8 78 10 189] 
#[ 6 113 8 78] 
#[ 1 201 3 70 8 106] 
#[ 4 6 5 78] 
#[ 6 58 7 241] 
#[ 2 110 6 106] 
#[ 2 110 6 106 7 13] 
#[ 2 110 6 106 7 17] 
#[ 0 122 5 145] 
#[ 1 138 19 185] 
#[ 10 26 18 117] 
#[ 10 118 20 181] 
#[ 2 250 11 222] 
#[ 2 250 11 226] 
#[ 11 226 22 157] 
#[ 2 250 11 238] 
#[ 2 250 12 110] 
#[ 2 250 12 222] 
#[ 2 250 12 230]
	).
]

{ #category : #'generated-accessing' }
DartParser class >> cacheId [
	^'2023-09-06T13:11:19.476342+02:00'
]

{ #category : #generated }
DartParser class >> definitionComment [
"/* Configuration */


/*

Notes: 
    When there is a rule ending with a NotSomething (e.g. ParameterNotMetadata), it is usually that a previous rule declared the same thing but including the metadata definition. We tend to simplify these rules if seen.


*/


%glr;
%prefix Dart ;
%suffix Node ;
%root Program ;
 

/* Hierarchy */
/* Use to create the class heritage hierarchy inside Pharo 
(e.g. ImportDeclaration will be a subClass of ImportExportDeclaration)

%annotate_tokens ;




%hierarchy LibraryDefinition (ImportDeclaration)
%hierarchy Literal (NullLiteral NumericLiteral BooleanLiteral StringLiteral SetOrMapLiteral ListLiteral);
%hierarchy NonLabelledStatement (Block LocalVariableDeclaration ForStatement WhileStatement DoStatement
                                SwitchStatement IfStatement RethrowStatement TryStatement BreakStatement
                                ContinueStatement ReturnStatement LocalFunctionDeclaration AssertStatement
                                YieldStatement YieldEachStatement ExpressionStatement);

%hierarchy Expression (ConditionalExpression AssignableExpressionWithOperator
                    Casade ThrowExpression AssignableExpression InitializerExpression
                    FunctionExpression ThisExpression NewExpression ConstObjectExpression
                    UnaryExpression AdditiveExpression MultiplicativeExpression ShiftExpression
                    AwaitExpression PostfixExpression AssignableExpression);

%hierarchy ConditionalExpression (IfNullExpression LogicalOrExpression LogicalAndExpression                                                     EqualityExpression RelationalExpression BitwiseOrExpression
                                    BitwiseXorExpression BitwiseAndExpression );

  */
/*grammar Dart;*/



libraryDefinition
    :    <FEFF> 'feff'?  <SCRIPT_TAG> 'scriptTag'?
         libraryName 'libraryName'? 
         importOrExport* 
         partDirective* 
         (metadata 'metadata' topLevelDefinition 'topLevelDefinition')*  {{LibraryDefinition}}
    ;

topLevelDefinition
    :    classDeclaration 'classDeclaration'
    |    mixinDeclaration 'mixinDeclaration'
    |    extensionDeclaration 'extensionDeclaration' 
    |    enumType 'enumType'
    |    typeAlias 'typeAlias'
    |    topLevelExternalDeclaration 'externalDeclaration'
    |   functionDeclaration 'functionDeclaration'   
    |    topLevelListDeclaration 'liststDeclaration'
    
    ;

/*
 (<final> | <const>) type? staticFinalDeclarationList "";""
    |    <late> <final> type? initializedIdentifierList "";""
    |    <late>? varOrType identifier (""="" expression)?  ("","" initializedIdentifier)* "";""
*/

topLevelListDeclaration
     :   (<final> | <const>) type 'type'?  staticFinalDeclarationList 'list' "";"" {{TopLevelListDeclaration}}
    |    <late> <final> type 'type'? initializedIdentifierList 'list' "";""  {{TopLevelListDeclaration}}
    |    <late>? varOrType 'type' identifier 'identifier' (""="" expression 'expression')?   ("","" initializedIdentifier 'initializedIdentifier')*  "";""  {{TopLevelListDeclaration}}
    ;


topLevelExternalDeclaration
   :     <external> functionSignature 'signature' "";"" {{ExternalFunctionSignature}}
    |    <external> getterSignature 'signature' "";"" {{ExternalFunctionSignature}}
    |    <external> setterSignature 'signature' "";""  {{ExternalFunctionSignature}}
    |    <external> finalVarOrType 'type' identifierList 'identifierList' "";"" {{ExternalVariablesDeclaration}}
;

functionDeclaration
   :     getterSignature 'signature' functionBody 'body'   {{FunctionDeclaration}}
    |    setterSignature 'signature' functionBody  'body'  {{FunctionDeclaration}}
    |    functionSignature 'signature' functionBody 'body' {{FunctionDeclaration}}
  ;

declaredIdentifier
    :    <covariant>? finalConstVarOrType 'finalConstVarOrType' identifier 'declaredIdentifier' {{DeclaredIdentifier}}
    ;

finalConstVarOrType
    :    <late>? <final> type?
    |    <const> type?
    |    <late>? varOrType
    ;

finalVarOrType
    :    <final> type?
    |    varOrType
    ;

varOrType
    :    <var>
    |    type
    ;

initializedIdentifier
    :    identifier 'identifier' (""="" expression 'expression')? {{InitializedIdentifier}}
    ;

initializedIdentifierList
    :    initializedIdentifier 'initializedIdentifier' ("","" initializedIdentifier 'nextInitializedIdentifier')* {{InitializedIdentifierList}}
    ;

functionSignature
    :    type 'type'? identifierNotFUNCTION 'identifierNotFUNCTION' formalParameterPart 'formalParameterPart' {{FunctionSignature}}
    ;

functionBodyPrefix
    :    <async>? ""=>""
    |    (<async> | <async> ""*"" | <sync> ""*"")? <lbrace>
    ;

functionBody
    :    ""=>""  expression 'expression' "";"" {{FunctionBody}}
    |     block 'block'  {{FunctionBody}}
    |    <async> ""=>"" expression 'expression' "";"" {{AsyncFunctionBody}}
    |    (<async> | <async> ""*"" | <sync> ""*"") block 'block' {{AsyncFunctionBody}}
    ;

block
    :    <lbrace> statements 'statements'? <rbrace> {{Block}}
    ;

formalParameterPart
    :    typeParameters 'typeParameters'? formalParameterList 'formalParameterList' {{FormalParameterPart}}
    ;

formalParameterList
    :    emptyFormalParameterList
    |    ""("" normalFormalParameters 'normalParameter' "",""? "")""
    |    ""("" normalFormalParameters 'normalParameter' "","" optionalOrNamedFormalParameters 'optionalOrNamedParameter' "")""
    |    ""("" optionalOrNamedFormalParameters 'optionalOrNamedParameter' "")""
    ;

emptyFormalParameterList
    :    ""("" "")"" {{EmptyFormalParameterList}}
    ;

normalFormalParameters
    :    normalFormalParameter 'parameter' ("","" normalFormalParameter 'nextParameter')* {{NormalFormalParameters}}
    ;

optionalOrNamedFormalParameters
    :    optionalPositionalFormalParameters
    |    namedFormalParameters
    ;

optionalPositionalFormalParameters
    :    ""["" defaultFormalParameter 'parameter' ("","" defaultFormalParameter 'nextParameter')* "",""? ""]"" {{OptionalPositionalFormalParameters}}
    ;

namedFormalParameters
    :    <lbrace> defaultNamedParameter 'parameter' ("","" defaultNamedParameter 'nextParameter')* "",""? <rbrace> {{NamedFormalParameters}}
    ;


normalFormalParameter
    :   metadata 'metadata' functionFormalParameter 'parameter' {{NormalFormalParameter}}
    |   metadata 'metadata' fieldFormalParameter 'parameter' {{NormalFormalParameter}}
    |   metadata 'metadata' simpleFormalParameter 'parameter' {{NormalFormalParameter}}
    ;


/* removed for simplification purpose

normalFormalParameter
    :    metadata 'metadata' normalFormalParameterNoMetadata 'normalFormalParameterNoMetadata' {{NormalFormalParameter}}
    ;


normalFormalParameterNoMetadata
    :    functionFormalParameter
    |    fieldFormalParameter
    |    simpleFormalParameter
    ;
*/

functionFormalParameter
    :    <covariant>? type 'Type'? identifierNotFUNCTION 'identifierNotFUNCTION' formalParameterPart 'formalParameterPart' ""?""? {{FunctionFormalParameter}}
    ;

simpleFormalParameter
    :    declaredIdentifier 'declaredIdentifier' {{SimpleFormalParameter}}
    |    <covariant>? identifier 'identifier'  {{SimpleFormalParameter}}
    ;


fieldFormalParameter
    :    finalConstVarOrType 'finalConstVarOrType'? <this> ""."" identifier 'identifier' (formalParameterPart 'formalParameterPart' ""?""?)? {{FieldFormalParameter}}
    ;

defaultFormalParameter
    :    normalFormalParameter (""="" expression)?
    ;

defaultNamedParameter
    :    <required>? normalFormalParameter (("":"" | ""="") expression)?
    ;

typeWithParameters
    :    typeIdentifier 'typeIdentifier' typeParameters? {{Type}}
    ;

classDeclaration
    :   <abstract>? <clazz> typeWithParameters 'typeWithParameters' superclass 'superclass'? mixins 'mixins'? interfaces 'interfaces'? 
        <lbrace> (metadata 'metadata' classMemberDefinition 'classMemberDefinition')* <rbrace> {{ClassDeclaration}}
    |    <abstract>? <clazz> mixinApplicationClass 'mixinApplicationClass' {{ClassDeclaration}}
    ;

superclass
    :    <extends> typeNotVoidNotFunction
    ;

mixins
    :    <with> typeNotVoidNotFunctionList
    ;

interfaces
    :    <implements> typeNotVoidNotFunctionList
    ;

classMemberDefinition
    :    methodSignature 'signature' functionBody 'functionBody' {{ClassMemberDefinition}}
    |    declaration 'declaration' "";"" {{ClassMemberDefinition}}
    ;

mixinApplicationClass
    :    typeWithParameters 'typeWithParameters' ""="" mixinApplication 'mixinApplication' "";"" {{MixinApplicationClass}}
    ;

mixinDeclaration
    :    <mixin> typeIdentifier typeParameters?
         (<on> typeNotVoidNotFunctionList)? interfaces?
         <lbrace> (metadata mixinMemberDefinition)* <rbrace>
    ;


mixinMemberDefinition
    :    classMemberDefinition
    ;

extensionDeclaration
    :    <extension> identifier? typeParameters? <on> type
         <lbrace> (metadata extensionMemberDefinition)* <rbrace>
    ;


extensionMemberDefinition
    :    classMemberDefinition
    ;

methodSignature
    :    constructorSignature 'constructorSignature' initializers 'initializers' {{MethodSignature}}
    |    factoryConstructorSignature
    |    <static>? functionSignature 'signature' {{MethodSignature}}
    |    <static>? getterSignature 'getterSignature' {{MethodSignature}}
    |    <static>? setterSignature 'setterSignature' {{MethodSignature}}
    |    operatorSignature
    |    constructorSignature 
    ;

declaration
    :    <external> factoryConstructorSignature
    |    <external> constantConstructorSignature
    |    <external> constructorSignature
    |    (<external> <static>?)? getterSignature
    |    (<external> <static>?)? setterSignature
    |    (<external> <static>?)? functionSignature
    |    <external> (<static>? finalVarOrType 'finalVarOrType' | <covariant> varOrType 'varOrType') identifierList 'identifierList' {{Declaration}}
    |    <abstract> (finalVarOrType | <covariant> varOrType) identifierList {{Declaration}}
    |    <external>? operatorSignature
    |    <static> (<final> | <const>) type? staticFinalDeclarationList 'staticFinalDeclarationList' {{Declaration}}
    |    <static> <late> <final> type? initializedIdentifierList 'initializedIdentifierList' {{Declaration}}
    |    <static> <late>? varOrType 'varOrType' initializedIdentifierList 'initializedIdentifierList' {{Declaration}}
    |    <covariant> <late> <final> type 'type'? identifierList 'identifierList' {{Declaration}}
    |    <covariant> <late>? varOrType 'varOrType' initializedIdentifierList 'initializedIdentifierList' {{Declaration}}
    |    <late>? (<final> 'finalToken' type 'type'? | varOrType 'varOrType') initializedIdentifierList 'initializedIdentifierList' {{Declaration}}
    |    redirectingFactoryConstructorSignature
    |    constantConstructorSignature 'constantConstructorSignature' (redirection 'redirection' | initializers 'initializers')? {{Declaration}}
    |    constructorSignature 'constructorSignature' (redirection 'redirection' | initializers 'initializers')? {{Declaration}}
    ;

staticFinalDeclarationList
    :    staticFinalDeclaration 'staticFinalDeclaration' ("","" staticFinalDeclaration 'nextStaticFinalDeclaration')* {{StaticFinalDeclarationList}}
    ;

staticFinalDeclaration
    :    identifier 'identifier' ""="" expression 'expression' {{StaticFinalDeclaration}}
    ;

operatorSignature
    :    type 'type'? <operator> operator 'operator' formalParameterList 'formalParameterList' {{OperatorSignature}}
    ;

operator
    :    ""~""
    |    binaryOperator
    |    ""["" ""]""
    |    ""["" ""]"" ""=""
    ;

binaryOperator
    :    multiplicativeOperator
    |    additiveOperator
    |    shiftOperator
    |    relationalOperator
    |    ""==""
    |    bitwiseOperator
    ;

getterSignature
    :    type 'type'? <get> identifier 'identifier' {{GetterSignature}}
    ;

setterSignature
    :    type 'type'? <set> identifier 'identifier' formalParameterList 'formalParameterList' {{SetterSignature}}
    ;

constructorSignature
    :    constructorName 'constructorName' formalParameterList 'formalParameterList' {{ConstructorSignature}}
    ;

constructorName
    :    typeIdentifier 'typeIdentifier' (""."" (identifier 'typeIdentifier' | <new>))? {{ConstructorName}}
    ;

redirection
    :    "":"" <this> (""."" (identifier 'identifier' | <new>))? arguments 'arguments' {{Redirection}}
    ;

initializers
    :    "":"" initializerListEntry 'initializerListEntry' ("","" initializerListEntry 'InitializerListEntry')* {{Initializers}}
    ;

initializerListEntry
    :    <super> arguments
    |    <super> ""."" (identifier | <new>) arguments
    |    fieldInitializer
    |    assertion
    ;

fieldInitializer
    :    (<this> ""."")? identifier 'identifier' ""="" initializerExpression 'initializerExpression' {{FieldInitializer}}
    ;

initializerExpression
    :    conditionalExpression 'conditionalExpression' {{InitializerExpression}}
    |    cascade 'cascade' {{InitializerExpression}}
    ;

factoryConstructorSignature
    :    <const>? <factory> constructorName 'constructorName' formalParameterList 'formalParameterList' {{FactoryConstructorSignature}}
    ;

redirectingFactoryConstructorSignature
    :    <const>? <factory> constructorName 'constructorName' formalParameterList 'formalParameterList' ""="" 
         constructorDesignation {{RedirectingFactoryConstructorSignature}}
    ;

constantConstructorSignature
    :    <const> constructorName 'constructorName' formalParameterList 'formalParameterList' {{ConstantConstructorSignature}}
    ;

mixinApplication
    :    typeNotVoidNotFunction 'typeNotVoidNotFunction' mixins 'mixins' interfaces 'interfaces'? {{MixinApplication}}
    ;

enumType
    :    <enum> typeIdentifier typeParameters? mixins? interfaces? <lbrace>
         enumEntry ("","" enumEntry)* ("","")?
         ("";"" (metadata classMemberDefinition)*)?
         <rbrace>
    ;

enumEntry
    :    metadata 'metadata' identifier 'identifier' argumentPart 'argumentPart'? {{EnumEntry}}
    |    metadata 'metadata' identifier 'identifier' typeArguments 'typeArguments'? ""."" identifier 'identifier' arguments 'arguments' {{EnumEntry}}
    ;

typeParameter
    :    metadata 'metadata' typeIdentifier 'typeIdentifier' (<extends> typeNotVoid 'typeNotVoid')? {{TypeParameter}}
    ;

typeParameters
    :    ""<"" typeParameter 'typeParameter' ("","" typeParameter 'nextTypeParameter')* "">"" {{TypeParameters}}
    ;

metadata
    :    (""@"" metadatum)*
    ;

metadatum
    :    constructorDesignation 'constructorDesignation' arguments 'arguments' {{Metadatum}}
    |    identifier
    |    qualifiedName
    ;


expression 
    :    assignableExpression 'assignableExpression' assignmentOperator 'assignmentOperator' expression 'assignedExpression' 
    |    conditionalExpression 'conditionalExpression' 
    |    cascade 'cascade'
    |    throwExpression 'throwExpression' 
    ;

/*
expression 
    :    assignableExpression 'assignableExpression' assignmentOperator 'assignmentOperator' expression 'assignedExpression' {{Expression}}
    |    conditionalExpression 'conditionalExpression' {{Expression}}
    |    cascade 'cascade' {{Expression}}
    |    throwExpression 'throwExpression' {{Expression}}
    ;





expression
    :   assignableExpressionWithOperator 'assignableExpressionWithOperator' {{Expression}}
    |   cascade 'cascade' {{Expression}}
    |   primary 'primary' {{Expression}}
    |   unaryExpression 'unaryExpression' {{Expression}}
    |   initializerExpression 'initializerExpression' {{Expression}}
    |   ifNullExpression 'ifNullExpression' {{Expression}}
    |   logicalOrExpression 'logicalOrExpression' {{Expression}}
    |   logicalAndExpression  'logicalAndExpression' {{Expression}}
    |   equalityExpression 'equalityExpression' {{Expression}}
    |   relationalExpression 'relationalExpression' {{Expression}}
    |   bitwiseOrExpression 'bitwiseOrExpression' {{Expression}}
    |   bitwiseXorExpression 'bitwiseXorExpression' {{Expression}}
    |   bitwiseAndExpression 'bitwiseAndExpression' {{Expression}}
    |   shiftExpression 'shiftExpression' {{Expression}}
    |   additiveExpression 'additiveExpression' {{Expression}}
    |   multiplicativeExpression 'multiplicativeExpression' {{Expression}}
    |   throwExpression 'throwExpression' {{Expression}}
    |   functionExpression 'functionExpression' {{Expression}}
    |   thisExpression 'thisExpression' {{Expression}}
    |   newExpression 'newExpression' {{Expression}}
    |   constObjectExpression 'constObjectExpression' {{Expression}}
    |   awaitExpression 'awaitExpression' {{Expression}}
    |   postfixExpression 'postfixExpression' {{Expression}}
    ;

 */



assignableExpressionWithOperator
    :   assignableExpression 'assignableExpression' assignmentOperator 'assignmentOperator' expression 'assigmnentExpression' {{AssignableExpressionWithOperator}}
    ;

expressionWithoutCascade
    :    assignableExpressionWithoutCascadeWithOperator 
    |    functionExpressionWithoutCascade
    |    conditionalExpression
    |    throwExpressionWithoutCascade
    ;

assignableExpressionWithoutCascadeWithOperator
    :   assignableExpression 'assignableExpression' assignmentOperator 'assignmentOperator' expressionWithoutCascade 'expressionWithoutCascade' {{AssignableExpressionWithoutCascadeWithOperator}}
    ;

expressionList
    :    expression 'firstExpression' ("","" expression 'nextExpression')* {{ExpressionList}}
    ;

/*
primary
    :    thisExpression 'thisExpression' {{Primary}}
    |    <super> unconditionalAssignableSelector 'unconditionalAssignableSelector' {{Primary}}
    |    <super> argumentPart 'argumentPart' {{Primary}}
    |    functionExpression 'functionExpression' {{Primary}}
    |    literal 'literal' {{Primary}}
    |    identifier 'identifier' {{Primary}}
    |    newExpression 'newExpression' {{Primary}}
    |    constObjectExpression 'constObjectExpression' {{Primary}}
    |    constructorInvocation 'constructorInvocation' {{Primary}}
    |    functionPrimary 'functionPrimary' {{Primary}}
    |    ""("" expression 'parenthesisExpression' "")"" {{Primary}}
    |    constructorTearoff 'constructorTearoff' {{Primary}}
    ;
 */

primary
    :    thisExpression 
    |    <super> unconditionalAssignableSelector 'unconditionalAssignableSelector' {{Primary}}
    |    <super> argumentPart 'argumentPart' {{Primary}}
    |    functionExpression 
    |    literal 
    |    identifier
    |    newExpression 
    |    constObjectExpression 
    |    constructorInvocation
    |    functionPrimary 
    |    ""("" expression 'parenthesisExpression' "")"" {{Primary}}
    |    constructorTearoff
    ;

constructorInvocation
    :    typeName 'typeName' typeArguments 'typeArguments' ""."" <new> arguments 'arguments' {{ConstructorInvocation}}
    |    typeName 'typeName' ""."" <new> arguments 'arguments' {{ConstructorInvocation}}
    ;

/*
literal
    :    nullLiteral 'nullLiteral' {{Literal}}
    |    booleanLiteral 'booleanLiteral' {{Literal}}
    |    numericLiteral 'numericLiteral' {{Literal}}
    |    stringLiteral 'stringLiteral' {{Literal}}
    |    symbolLiteral 'symbolLiteral' {{Literal}}
    |    setOrMapLiteral 'setOrMapLiteral' {{Literal}}
    |    listLiteral 'listLiteral' {{Literal}}
    ;
 */

literal
    :    nullLiteral
    |    booleanLiteral 
    |    numericLiteral
    |    stringLiteral 
    |    symbolLiteral 
    |    setOrMapLiteral 
    |    listLiteral 
    ;

nullLiteral
    :    <null> {{NullLiteral}}
    ;

numericLiteral
    :    <number> 'number' {{NumericLiteral}}
    |    <HEX_NUMBER> 'hexNumber'  {{NumericLiteral}}
    ;

booleanLiteral
    :    <true> 'true' {{BooleanLiteral}}
    |    <false> 'false' {{BooleanLiteral}}
    ;

stringLiteral
    :    (multiLineString 'multiLineString' | singleLineString 'singleLineString')+ {{StringLiteral}}
    ;


stringLiteralWithoutInterpolation
    :    singleStringWithoutInterpolation+
    ;

setOrMapLiteral
    : <const>? typeArguments 'typeArguments'? <lbrace> elements 'elements'? <rbrace> {{SetOrMapLiteral}}
    ;

listLiteral
    : <const>? typeArguments 'typeArguments'? ""["" elements 'elements'? ""]"" {{ListLiteral}}
    ;

elements
    : element 'element' ("","" element 'nextElements')* "",""? {{Elements}}
    ;

element
    : expressionElement 'expressionElement' {{Element}}
    | mapElement 'mapElement' {{Element}}
    | spreadElement 'spreadElement' {{Element}}
    | ifElement 'ifElement' {{Element}}
    | forElement 'forElement' {{Element}}
    ;

expressionElement
    : expression 'expression' {{ExpressionElement}}
    ;

mapElement
    : expression "":"" expression
    ;

spreadElement
    : (""..."" | ""...?"") expression
    ;

ifElement
    : <if> ""("" expression "")"" element (<else> element)?
    ;

forElement
    : <await>? <for> ""("" forLoopParts "")"" element
    ;

constructorTearoff
    :    typeName typeArguments? ""."" <new>
    ;

throwExpression
    :    <throw> expression 'throwExpression' {{ThrowExpression}}
    ;

throwExpressionWithoutCascade
    :    <throw> expressionWithoutCascade
    ;

functionExpression
    :    formalParameterPart 'formalParameterPart' functionExpressionBody 'functionExpressionBody' {{FunctionExpression}}
    ;

functionExpressionBody
    :    ""=>"" /* TODO: { startNonAsyncFunction(); }*/ expression /* TODO: { endFunction(); }*/
    |    <async> ""=>"" /* TODO: { startAsyncFunction(); }*/ expression /* TODO: { endFunction(); }*/
    ;

functionExpressionBodyPrefix
    :    <async>? ""=>""
    ;

functionExpressionWithoutCascade
    :    formalParameterPart functionExpressionWithoutCascadeBody
    ;

functionExpressionWithoutCascadeBody
    :    ""=>"" /* TODO: { startNonAsyncFunction(); }*/
         expressionWithoutCascade /* TODO: { endFunction(); }*/
    |    <async> ""=>"" /* TODO: { startAsyncFunction(); }*/
         expressionWithoutCascade /* TODO: { endFunction(); }*/
    ;

functionPrimary
    :    formalParameterPart functionPrimaryBody
    ;

functionPrimaryBody
    :    /* TODO: { startNonAsyncFunction(); }*/ block /* TODO: { endFunction(); }*/
    |    (<async> | <async> ""*"" | <sync> ""*"")
         /* TODO: { startAsyncFunction(); }*/ block /* TODO: { endFunction(); }*/
    ;

functionPrimaryBodyPrefix
    : (<async> | <async> ""*"" | <sync> ""*"")? <lbrace>
    ;

thisExpression
    :    <this> {{ThisExpression}}
    ;

newExpression
    :    <new>? constructorDesignation 'constructorDesignation' arguments 'constructorArguments' {{NewExpression}}
    ;

constObjectExpression
    :    <const> constructorDesignation 'constructorDesignation' arguments 'arguments' {{ConstObjectExpression}}
    ;

arguments
    :    ""("" (argumentList "",""?)? "")""
    ;

argumentList
    :    namedArgument 'namedArgument' ("","" namedArgument 'namedArgument')* {{ArgumentList}}
    |    expressionList 'expressionList' ("","" namedArgument 'namedArgument')* {{ArgumentList}}
    ;

namedArgument
    :    label 'label' expression 'expression' {{NamedArgument}}
    ;

cascade
    :     cascade 'cascade' "".."" cascadeSection 'cascadeSection' {{Cascade}}
    |     conditionalExpression 'conditionalExpression' (""?.."" | "".."") cascadeSection 'cascadeSection' {{Cascade}}
    ;

cascadeSection
    :    cascadeSelector cascadeSectionTail
    ;

cascadeSelector
    :    ""["" expression ""]""
    |    identifier
    ;

cascadeSectionTail
    :    cascadeAssignment
    |    selector* (assignableSelector cascadeAssignment)?
    ;

cascadeAssignment
    :    assignmentOperator expressionWithoutCascade
    ;

assignmentOperator
    :    ""="" 'equalsSymbol' {{AssignmentOperator}}
    |    compoundAssignmentOperator 'compoundAssignmentOperator' {{AssignmentOperator}}
    ;

compoundAssignmentOperator
    :    ""*=""
    |    ""/=""
    |    ""~/=""
    |    ""%=""
    |    ""+=""
    |    ""-=""
    |    ""<<=""
    |    "">"" "">"" "">"" ""=""
    |    "">"" "">"" ""=""
    |    ""&=""
    |    ""^=""
    |    ""|=""
    |    ""??=""
    ;

/* original 
conditionalExpression
    :    ifNullExpression 'ifNullExpression' 
    ( ""?"" expressionWithoutCascade 'firstExpressionWithoutCascade' "":"" 
    expressionWithoutCascade 'secondExpressionWithoutCascade' )? {{ConditionalExpression}}
    ;
*/

conditionalExpression
    :   ifNullExpression   
    |   ifNullExpression 'testExpression' 
    ""?"" expressionWithoutCascade 'trueExpression' "":"" 
    expressionWithoutCascade 'falseExpression' {{ConditionalExpression}}
    ;

/* original
ifNullExpression
    : logicalOrExpression 'testNullExpression' (""??"" logicalOrExpression 'logicalOrExpression')* {{IfNullExpression}}
    ;
 */


ifNullExpression
    :   logicalOrExpression
    |   logicalOrExpression 'testNullExpression' (""??"" logicalOrExpression 'logicalOrExpression')+ {{IfNullExpression}}
    ;


/* original
logicalOrExpression
    :    logicalAndExpression 'logicalAndExpression' (""||"" logicalAndExpression 'logicalAndExpression')* {{LogicalOrExpression}}
    ;
 */

logicalOrExpression
    :   logicalAndExpression
    |   logicalAndExpression 'logicalAndExpression' (""||"" logicalAndExpression 'logicalAndExpression')+ {{BinaryExpression}}
    ;

/* original
logicalAndExpression
    :    equalityExpression 'equalityExpression' (""&&"" equalityExpression 'equalityExpression')* {{LogicalAndExpression}}
    ;
 */
logicalAndExpression
    :   equalityExpression
    |   equalityExpression 'equalityExpression' (""&&"" equalityExpression 'equalityExpression')+ {{BinaryExpression}}
    ;

/* original
equalityExpression
    :   relationalExpression 'relationalExpression' (equalityOperator 'equalityOperator' relationalExpression 'relationalExpression')? {{EqualityExpression}}
    |   <super> equalityOperator 'equalityOperator' relationalExpression 'relationalExpression' {{EqualityExpression}}
    ;
*/

equalityExpression
    :   relationalExpression 
    |   relationalExpression 'relationalExpression' (equalityOperator 'equalityOperator' relationalExpression 'relationalExpression')+ {{BinaryExpression}}
    |   <super> equalityOperator 'equalityOperator' relationalExpression 'relationalExpression' {{BinaryExpression}}
    ;

equalityOperator
    :    ""==""
    |    ""!=""
    ;

/*
relationalExpression
    :   bitwiseOrExpression 'bitwiseOrExpression'
        (typeTest 'typeTest' | typeCast 'typeCast' | relationalOperator 'relationalOperator' bitwiseOrExpression 'bitwiseOrExpression' )? {{RelationalExpression}}
    |    <super> relationalOperator 'relationalOperator' bitwiseOrExpression 'bitwiseOrExpression' {{RelationalExpression}}
    ;
 */

relationalExpression
    :   bitwiseOrExpression
    |   bitwiseOrExpression 'bitwiseOrExpression'
        (typeTest 'typeTest' | typeCast 'typeCast' | relationalOperator 'relationalOperator' bitwiseOrExpression 'bitwiseOrExpression')+ {{BinaryExpression}}
    |    <super> relationalOperator 'relationalOperator' bitwiseOrExpression 'bitwiseOrExpression' {{BinaryExpression}}
    ;

relationalOperator
    :    "">"" ""=""
    |    "">""
    |    ""<=""
    |    ""<""
    ;

/* original 
bitwiseOrExpression
    :    bitwiseXorExpression 'bitwiseXorExpression' (""|"" bitwiseXorExpression 'bitwiseXorExpression')* {{BitwiseOrExpression}}
    |    <super> (""|"" bitwiseXorExpression 'bitwiseXorExpression')+ {{BitwiseOrExpression}}
    ;
*/

bitwiseOrExpression
    :   bitwiseXorExpression
    |   bitwiseXorExpression 'bitwiseXorExpression' (""|"" bitwiseXorExpression 'bitwiseXorExpression')+ {{BinaryExpression}}
    |   <super> ""|"" bitwiseXorExpression 'bitwiseXorExpression' {{BinaryExpression}}
    ;

/* original
bitwiseXorExpression
    :    bitwiseAndExpression 'bitwiseAndExpression' (""^"" bitwiseAndExpression 'bitwiseAndExpression')* {{BitwiseXorExpression}}
    |    <super> (""^"" bitwiseAndExpression 'bitwiseAndExpression')+ {{BitwiseXorExpression}}
    ;
 */
bitwiseXorExpression
    :   bitwiseAndExpression
    |   bitwiseAndExpression 'bitwiseAndExpression'( ""^"" bitwiseAndExpression 'bitwiseAndExpression')+ {{BinaryExpression}}
    |   <super> ""^"" bitwiseAndExpression 'bitwiseAndExpression' {{BinaryExpression}}
    ;

/* original 
bitwiseAndExpression
    :    shiftExpression 'shiftExpression' (""&"" shiftExpression 'shiftExpression')* {{BitwiseAndExpression}}
    |    <super> (""&"" shiftExpression 'shiftExpression')+ {{BitwiseAndExpression}}
    ;
 */

bitwiseAndExpression
    :   shiftExpression
    |   shiftExpression 'shiftExpression' (""&"" shiftExpression 'shiftExpression')+ {{BinaryExpression}}
    |   <super> ""&"" shiftExpression 'shiftExpression' {{BinaryExpression}}
    ;

bitwiseOperator
    :    ""&""
    |    ""^""
    |    ""|""
    ;

/* original
shiftExpression
    :    additiveExpression 'additiveExpression' (shiftOperator 'shiftOperator' additiveExpression 'additiveExpression')* {{ShiftExpression}}
    |    <super> (shiftOperator 'shiftOperator' additiveExpression 'additiveExpression')+ {{ShiftExpression}}
    ;
 */

shiftExpression
    :   additiveExpression 
    |   additiveExpression 'additiveExpression'( shiftOperator 'shiftOperator' additiveExpression 'additiveExpression')+ {{BinaryExpression}}
    |   <super> shiftOperator 'shiftOperator' additiveExpression 'additiveExpression' {{BinaryExpression}}
    ;

shiftOperator
    :    ""<<""
    |    "">"" "">"" "">""
    |    "">"" "">""
    ;

/* original
additiveExpression
    :    multiplicativeExpression 'multiplicativeExpression' (additiveOperator 'additiveOperator' multiplicativeExpression 'multiplicativeExpression')* {{AdditiveExpression}}
    |    <super> (additiveOperator 'additiveOperator' multiplicativeExpression 'multiplicativeExpression')+ {{AdditiveExpression}}
    ;
 */

additiveExpression
    :   multiplicativeExpression
    |   multiplicativeExpression 'multiplicativeExpression' (additiveOperator 'additiveOperator' multiplicativeExpression 'multiplicativeExpression')+ {{AdditiveExpression}}
    |   <super> additiveOperator 'additiveOperator' multiplicativeExpression 'multiplicativeExpression' {{AdditiveExpression}}
    ;

additiveOperator
    :    ""+""
    |    ""-""
    ;

/*
multiplicativeExpression
    :    unaryExpression 'unaryExpression' (multiplicativeOperator 'multiplicativeOperator' unaryExpression 'unaryExpression')* {{MultiplicativeExpression}}
    |    <super> (multiplicativeOperator 'multiplicativeOperator' unaryExpression 'unaryExpression')+ {{MultiplicativeExpression}}
    ;
 */

multiplicativeExpression
    :   unaryExpression
    |   unaryExpression 'unaryExpression' (multiplicativeOperator 'multiplicativeOperator' unaryExpression 'unaryExpression')+ {{MultiplicativeExpression}}
    |   <super> multiplicativeOperator 'multiplicativeOperator' unaryExpression 'unaryExpression' {{MultiplicativeExpression}}
    ;

multiplicativeOperator
    :    ""*""
    |    ""/""
    |    ""%""
    |    ""~/""
    ;

/*
unaryExpression
    :    prefixOperator 'prefixOperator' unaryExpression 'unaryExpression' {{UnaryExpression}}
    |    awaitExpression 'awaitExpression' {{UnaryExpression}}
    |    postfixExpression 'postfixExpression' {{UnaryExpression}}
    |    (minusOperator 'minusOperator' | tildeOperator 'tildeOperator') <super> {{UnaryExpression}}
    |    incrementOperator 'incrementOperator' assignableExpression 'assignableExpression' {{UnaryExpression}}
    ;
*/

unaryExpression
    :    prefixOperator 'prefixOperator' unaryExpression 'unaryExpression' {{UnaryExpression}}
    |    awaitExpression 
    |    postfixExpression 
    |    (minusOperator 'minusOperator' | tildeOperator 'tildeOperator') <super> {{UnaryExpression}}
    |    incrementOperator 'incrementOperator' assignableExpression 'assignableExpression' {{UnaryExpression}}
    ;

prefixOperator
    :    minusOperator
    |    negationOperator
    |    tildeOperator
    ;

minusOperator
    :    ""-""
    ;

negationOperator
    :    ""!""
    ;

tildeOperator
    :    ""~""
    ;

awaitExpression
    :    <await> unaryExpression 'unaryExpression' {{AwaitExpression}}
    ;

postfixExpression
    :    assignableExpression 'assignableExpression' postfixOperator 'postfixOperator' {{PostfixExpression}}
    |    primary 'primary' selector 'selector'* {{PostfixExpression}}
    ;

postfixOperator
    :    incrementOperator
    ;

selector
    :    ""!""
    |    assignableSelector
    |    argumentPart
    |    typeArguments
    ;

argumentPart
    :    typeArguments? arguments
    ;

incrementOperator
    :    ""++""
    |    ""--""
    ;

assignableExpression
    :    primary 'primary' assignableSelectorPart 'assignableSelectorPart' {{AssignableExpression}}
    |    <super> unconditionalAssignableSelector 'unconditionalAssignableSelector' {{AssignableExpression}}
    |    identifier 'identifier' {{AssignableExpression}}
    ;

assignableSelectorPart
    :    selector* assignableSelector
    ;

unconditionalAssignableSelector
    :    ""["" expression ""]""
    |    ""."" identifier
    ;

assignableSelector
    :    unconditionalAssignableSelector
    |    ""?."" identifier
    |    ""?"" ""["" expression ""]""
    ;

identifierNotFUNCTION
    :    <IDENTIFIER>
    |    builtInIdentifier
    |    <async> 
    |    <hide> 
    |    <of> 
    |    <on> 
    |    <show> 
    |    <sync> 
    |    (<await>|<yield>)
    ;

identifier
    :    identifierNotFUNCTION 'idNotFunction' {{Identifier}}
    |    <function> 'function' {{Identifier}}
    ;

qualifiedName
    :    typeIdentifier 'typeIdentifier' ""."" (identifier 'identifier' | <new>) {{QualifiedName}}
    |    typeIdentifier 'typeIdentifier' ""."" typeIdentifier 'typeIdentifier' ""."" (identifier 'identifier' | <new>) {{QualifiedName}}
    ;

typeIdentifier
    :    <IDENTIFIER>
    |    <dynamic> 
    |    <async> 
    |    <hide> 
    |    <of> 
    |    <on> 
    |    <show> 
    |    <sync> 
    |    /* TODO: { asyncEtcPredicate(getCurrentToken().getType()) }?*/ (<await>|<yield>)
    ;

typeTest
    :    isOperator typeNotVoid
    ;

isOperator
    :    <is> ""!""?
    ;

typeCast
    :    asOperator typeNotVoid
    ;

asOperator
    :    <as>
    ;

/*
statements
    :    statement 'statementsSet'* {{SequentialStatements}}
    ;
 */
statements
    : statement 'statement' {{Statements}}
    | statements statement 'statement' {{Statements}}
    ;

statement
    :    label 'label'* nonLabelledStatement 'nonLabelledStatement' {{SingleStatement}}
    ;



nonLabelledStatement
    :    block 
    |    localVariableDeclaration 
    |    forStatement 
    |    whileStatement 
    |    doStatement 
    |    switchStatement 
    |    ifStatement 
    |    rethrowStatement 
    |    tryStatement 
    |    breakStatement 
    |    continueStatement 
    |    returnStatement 
    |    localFunctionDeclaration 
    |    assertStatement 
    |    yieldStatement 
    |    yieldEachStatement 
    |    expressionStatement 
    ;

/*
expressionStatement
    :    expression 'expressionStmt'? "";"" {{ExpressionStatement}}
    ;
 */

expressionStatement
    :    expression? "";"" 
    ;

localVariableDeclaration
    :    metadata 'metadata' initializedVariableDeclaration 'initializedVariableDeclaration' "";"" {{LocalVariableDeclaration}}
    ;

initializedVariableDeclaration
    :    declaredIdentifier 'declaredIdentifier' (""="" expression 'initializeExpression')? ("","" initializedIdentifier 'initializedIdentifier')* {{InitializedVariableDeclaration}}
    ;

localFunctionDeclaration
    :    metadata 'metadata' functionSignature 'signature' functionBody 'functionBody' {{LocalFunctionDeclaration}}
    ;

ifStatement
    :    <if> ""("" expression 'ifConditionalExpression' "")"" statements 'ifThenStatement' (<else> statement 'elseStatement')? {{IfStatement}}
    ;

forStatement
    :    <await>? <for> ""("" forLoopParts "")"" statements 'statement' {{ForStatement}}
    ;

forLoopParts
    :    metadata declaredIdentifier <in> expression
    |    metadata identifier <in> expression
    |    forInitializerStatement expression? "";"" expressionList?
    ;



forInitializerStatement
    :    localVariableDeclaration
    |    expression? "";""
    ;

whileStatement
    :    <while> ""("" expression 'whileConditionExpression' "")"" statements 'whileStatement' {{WhileStatement}}
    ;

doStatement
    :    <do> statement 'doStatement' <while> ""("" expression 'doConditionExpression' "")"" "";"" {{DoStatement}}
    ;

switchStatement
    :    <switch> ""("" expression 'switchCaseExpression' "")"" <lbrace> switchCase 'cases'* defaultCase 'defaultCase'? <rbrace> {{SwitchStatement}}
    ;

switchCase
    :    label 'label'* <case> expression 'expression' "":"" statements 'statements'? {{SwitchCase}}
    ;

defaultCase
    :    label 'label'* <default> "":"" statements 'statements'? {{DefaultCase}}
    ;

rethrowStatement
    :    <rethrow> "";"" {{RethrowStatement}}
    ;

tryStatement
    :    <try> block 'block' (onParts 'onParts' finallyPart 'finallyPart'? | finallyPart 'finallyPart') {{TryStatement}}
    ;

onPart
    :    catchPart 'catchPart' block 'block' {{OnPart}}
    |    <on> typeNotVoid 'typeNotVoid' catchPart 'catchPart'? block 'block' {{OnPart}}
    ;

onParts
    :    onPart onParts
    |    onPart
    ;

catchPart
    :    <catch> ""("" identifier 'identifier' ("","" identifier 'identifier')? "")"" {{CatchPart}}
    ;

finallyPart
    :    <finally> block 'block' {{FinallyPart}}
    ;

returnStatement
    :    <return> expression 'returnExpression'? "";"" {{ReturnStatement}}
    ;

label
    :    identifier 'LabelIdentifier' "":"" {{Label}}
    ;

breakStatement
    :    <break> identifier? "";"" {{BreakStatement}}
    ;

continueStatement
    :    <continue> identifier? "";"" {{ContinueStatement}}
    ;

yieldStatement
    :    <yield> expression 'yieldExpression' "";"" {{YieldStatement}}
    ;

yieldEachStatement
    :    <yield> ""*"" expression 'yieldEachExpression' "";"" {{YieldEachStatement}}
    ;

assertStatement
    :    assertion 'assertion' "";"" {{AssertStatement}}
    ;

assertion
    :    <ASSERT> ""("" expression 'expression' ("","" expression 'expression')? "",""? "")"" {{Assertion}}
    ;

libraryName
    :    metadata 'metadata' <library> dottedIdentifierList 'dottedIdentifierList' "";"" {{LibraryName}}
    ;

dottedIdentifierList
    :    identifier 'identifier' (""."" identifier 'identifier')* {{DottedIdentifierList}}
    ;

importOrExport
    :    libraryImport 'libraryImport' 
    |    libraryExport 'libraryExport'
    ;

libraryImport
    :    metadata 'metadata' importSpecification 'importSpecification' {{LibraryImport}}
    ;

/* import 'package:bl_microapp/bl_microapp.dart';*/
importSpecification
    :    <import> configurableUri 'configurableUri' (<deferred>? <as> identifier 'identifier')? combinator* "";"" {{ImportSpecification}}
    ;

combinator
    :    <show> identifierList
    |    <hide> identifierList
    ;

identifierList
    :    identifier 'identifier' ("","" identifier 'nextIdentifier')* {{IdentifierList}}
    ;

libraryExport
    :    metadata <export> uri combinator* "";""  {{ExportDeclaration}}
    ;

partDirective
    :    metadata 'metadata' <part> uri 'uri' "";"" {{PartDirective}}
    ;

partHeader
    :    metadata <part> <of> (dottedIdentifierList | uri)"";"" {{PartHeader}}
    ;

partDeclaration
    :    partHeader topLevelDefinition* {{PartDeclaration}}
    ;



uri
    :    stringLiteralWithoutInterpolation 'stringLiteralWithoutInterpolation' {{Uri}}
    ;

configurableUri
    :    uri 'uri' configurationUri 'configurationUri'* {{ConfigurableUri}}
    ;

configurationUri
    :    <if> ""("" uriTest 'uriTest' "")"" uri 'uriConfigured' {{ConfigurationUri}}
    ;

uriTest
    :    dottedIdentifierList 'dottedIdentifierList' (""=="" stringLiteral 'stringLiteral')? {{UriTest}}
    ;

type
    :    functionType 'functionType' ""?""? {{Type}}
    |    typeNotFunction 'typeNotFunction' {{Type}}
    ;

typeNotVoid
    :    functionType ""?""?
    |    typeNotVoidNotFunction
    ;

typeNotFunction
    :    typeNotVoidNotFunction
    |    <void>
    ;

typeNotVoidNotFunction
    :    typeName typeArguments? ""?""?
    |    <function> ""?""?
    ;

typeName
    :    typeIdentifier 'typeIdentifier' (""."" typeIdentifier 'followingTypeIdentifier')? {{TypeName}}
    ;

typeArguments
    :    ""<"" typeList "">""
    ;

typeList
    :    type 'type' ("","" type 'nextType')* {{TypeList}}
    ;

typeNotVoidNotFunctionList
    :    typeNotVoidNotFunction 'typeNotVoidNotFunction' ("","" typeNotVoidNotFunction 'nextTypeNotVoidNotFunction')* {{TypeNotVoidNotFunctionList}}
    ;

typeAlias
    :    <typedef> typeIdentifier 'typeIdentifier' typeParameters 'typeParameters'? ""="" type 'type' "";"" {{TypeAlias}}
    |    <typedef> functionTypeAlias
    ;

functionTypeAlias
    :    functionPrefix 'functionPrefix' formalParameterPart 'formalParameterPart' "";"" {{FunctionTypeAlias}}
    ;

functionPrefix
    :    type 'type' identifier 'identifier' {{FunctionPrefix}}
    |    identifier
    ;

functionTypeTail
    :    <function> typeParameters 'typeParameters'? parameterTypeList 'parameterTypeList' {{FunctionTypeTail}}
    ;

functionTypeTails
    :    functionTypeTail 'functionTypeTail' ""?""? functionTypeTails 'functionTypeTails' {{FunctionTypeTails}}
    |    functionTypeTail
    ;

functionType
    :    functionTypeTails
    |    typeNotFunction 'typeNotFunction' functionTypeTails 'functionTypeTails' {{FunctionType}}
    ;

parameterTypeList
    :    ""("" "")""
    |    ""("" normalParameterTypes "","" optionalParameterTypes "")""
    |    ""("" normalParameterTypes "",""? "")""
    |    ""("" optionalParameterTypes "")""
    ;

normalParameterTypes
    :    normalParameterType 'normalParameterType' ("","" normalParameterType 'nextNormalParameterType')* {{NormalParameterTypes}}
    ;

normalParameterType
    :    metadata 'metadata' typedIdentifier 'typedIdentifier' {{NormalParameterType}}
    |    metadata 'metadata' type 'type' {{NormalParameterType}}
    ;

optionalParameterTypes
    :    optionalPositionalParameterTypes
    |    namedParameterTypes
    ;

optionalPositionalParameterTypes
    :    ""["" normalParameterTypes "",""? ""]""
    ;

namedParameterTypes
    :    <lbrace> namedParameterType 'namedParameterType' ("","" namedParameterType 'nextNamedParameterType')* "",""? <rbrace> {{NamedParameterTypes}}
    ;

namedParameterType
    :    metadata 'metadata' <required>? typedIdentifier 'typedIdentifier' {{NamedParameterType}}
    ;

typedIdentifier
    :    type 'type' identifier 'identifier' {{TypedIdentifier}}
    ;

constructorDesignation
    :    typeIdentifier
    |    qualifiedName
    |    typeName 'typeName' typeArguments 'typeArguments' (""."" (identifier 'identifier' | <new>))? {{ConstructorDesignation}}
    ;

symbolLiteral
    :    ""#"" (operator 'operator' | (identifier 'identifier' (""."" identifier 'identifier')*) | <void>) {{SymbolLiteral}}
    ;


singleStringWithoutInterpolation
    :    <RAW_SINGLE_LINE_STRING>
    |    <RAW_MULTI_LINE_STRING>
    |    <SINGLE_LINE_STRING_DQ_BEGIN_END>
    |    <SINGLE_LINE_STRING_SQ_BEGIN_END>
    |    <MULTI_LINE_STRING_DQ_BEGIN_END>
    |    <MULTI_LINE_STRING_SQ_BEGIN_END>
    ;

/* SQ : string with single quote
    DQ : double quote
    BEGIN_END : reach the second quote without $ interruption (for string interpolation expresion)
    MID : reach a $*/

singleLineString
    :    <RAW_SINGLE_LINE_STRING> {{SingleLineString}}
    |    <SINGLE_LINE_STRING_SQ_BEGIN_END> {{SingleLineString}}
    |    <SINGLE_LINE_STRING_SQ_BEGIN_MID> expression 'firstExpression' (<SINGLE_LINE_STRING_MID_MID> expression 'nextExpressions')* <SINGLE_LINE_STRING_SQ_MID_END> {{SingleLineString}}
    |    <SINGLE_LINE_STRING_DQ_BEGIN_END> {{SingleLineString}}
    |    <SINGLE_LINE_STRING_DQ_BEGIN_MID> expression 'firstExpression' (<SINGLE_LINE_STRING_MID_MID> expression 'nextExpressions')* <SINGLE_LINE_STRING_DQ_MID_END> {{SingleLineString}}
    ;

multiLineString
    :    <RAW_MULTI_LINE_STRING> {{MultiLineString}}
    |    <MULTI_LINE_STRING_SQ_BEGIN_END> {{MultiLineString}}
    |    <MULTI_LINE_STRING_SQ_BEGIN_MID> expression 'firstExpression' (<MULTI_LINE_STRING_MID_MID> expression 'nextExpressions')* <MULTI_LINE_STRING_SQ_MID_END> {{MultiLineString}}
    |    <MULTI_LINE_STRING_DQ_BEGIN_END> {{MultiLineString}}
    |    <MULTI_LINE_STRING_DQ_BEGIN_MID> expression 'firstExpression' (<MULTI_LINE_STRING_MID_MID> expression 'nextExpressions')* <MULTI_LINE_STRING_DQ_MID_END> {{MultiLineString}}
    ;

reservedWord
    :    <ASSERT>
    |    <break>
    |    <case>
    |    <catch>
    |    <clazz>
    |    <const>
    |    <continue>
    |    <default>
    |    <do>
    |    <else>
    |    <enum>
    |    <extends>
    |    <false>
    |    <final>
    |    <finally>
    |    <for>
    |    <if>
    |    <in>
    |    <is>
    |    <new>
    |    <null>
    |    <rethrow>
    |    <return>
    |    <super>
    |    <switch>
    |    <this>
    |    <throw>
    |    <true>
    |    <try>
    |    <var>
    |    <void>
    |    <while>
    |    <with>
    ;

builtInIdentifier
    :    <abstract>
    |    <as>
    |    <covariant>
    |    <deferred>
    |    <dynamic>
    |    <export>
    |    <extension>
    |    <external>
    |    <factory>
    |    <function>
    |    <get>
    |    <implements>
    |    <import>
    |    <interface>
    |    <late>
    |    <library>
    |    <operator>
    |    <mixin>
    |    <part>
    |    <required>
    |    <set>
    |    <static>
    |    <typedef>
    ;



<LETTER>
    :    [a-z]
    |    [A-Z]
    ;

<DIGIT>
    :    [0-9]
    ;

<EXPONENT>
    :    (e | E) (\+ | \-)? <DIGIT>+
    ;

<HEX_DIGIT>
    :    (a | b | c | d | e | f)
    |    (A | B | C | D | E | F)
    |    <DIGIT>
    ;



<ASSERT>
    :    assert
    ;

<break>
    :    break
    ;

<case>
    :    case
    ;

<catch>
    :    catch
    ;

<clazz>
    :    class
    ;

<const>
    :    const
    ;

<continue>
    :    continue
    ;

<default>
    :    default
    ;

<do>
    :    do
    ;

<else>
    :    else
    ;

<enum>
    :    enum
    ;

<extends>
    :    extends
    ;

<false>
    :    false
    ;

<final>
    :    final
    ;

<finally>
    :    finally
    ;

<for>
    :    for
    ;

<if>
    :    if
    ;

<in>
    :    in
    ;

<is>
    :    is
    ;

<new>
    :    new
    ;

<null>
    :    null
    ;

<rethrow>
    :    rethrow
    ;

<return>
    :    return
    ;

<super>
    :    super
    ;

<switch>
    :    switch
    ;

<this>
    :    this
    ;

<throw>
    :    throw
    ;

<true>
    :    true
    ;

<try>
    :    try
    ;

<var>
    :    var
    ;

<void>
    :    void
    ;

<while>
    :    while
    ;

<with>
    :    with
    ;

<abstract>
    :    abstract
    ;

<as>
    :    as
    ;

<covariant>
    :    covariant
    ;

<deferred>
    :    deferred
    ;

<dynamic>
    :    dynamic
    ;

<export>
    :    export
    ;

<extension>
    :    extension
    ;

<external>
    :    external
    ;

<factory>
    :    factory
    ;

<function>
    :    Function
    ;

<get>
    :    get
    ;

<implements>
    :    implements
    ;

<import>
    :    import
    ;

<interface>
    :    interface
    ;

<late>
    :    late
    ;

<library>
    :    library
    ;

<operator>
    :    operator
    ;

<mixin>
    :    mixin
    ;

<part>
    :    part
    ;

<required>
    :    required
    ;

<set>
    :    set
    ;

<static>
    :    static
    ;

<typedef>
    :    typedef
    ;



<await>
    :    await
    ;

<yield>
    :    yield
    ;



<async>
    :    async
    ;

<hide>
    :    hide
    ;

<of>
    :    of
    ;

<on>
    :    on
    ;

<show>
    :    show
    ;

<sync>
    :    sync
    ;



<number>
    :    <DIGIT>+ \. <DIGIT>+ <EXPONENT>?
    |    <DIGIT>+ <EXPONENT>?
    |    \. <DIGIT>+ <EXPONENT>?
    ;

<HEX_NUMBER>
    :    0x <HEX_DIGIT>+
    |    0X <HEX_DIGIT>+
    ;

<RAW_SINGLE_LINE_STRING>
    :    r \' ([^\'\r\n])* \'
    |    r \"" ([^\""\r\n])* \""
    ;

<RAW_MULTI_LINE_STRING>
    :    r \""\""\"" (.)*/* TODO: ? */ \""\""\""
    |    r \'\'\' (.)*/* TODO: ? */ \'\'\'
    ;

<SIMPLE_STRING_INTERPOLATION>
    :    \$ <IDENTIFIER_NO_DOLLAR>
    ;

<ESCAPE_SEQUENCE>
    :    \\n
    |    \\r
    |    \\b
    |    \\t
    |    \\v
    |    \\x <HEX_DIGIT> <HEX_DIGIT>
    |    \\u <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT>
    |    \\u <lbrace> <HEX_DIGIT_SEQUENCE> <rbrace>
    ;

<HEX_DIGIT_SEQUENCE>
    :    <HEX_DIGIT> <HEX_DIGIT>? <HEX_DIGIT>?
         <HEX_DIGIT>? <HEX_DIGIT>? <HEX_DIGIT>?
    ;

<STRING_CONTENT_COMMON>
    :    [^\\\'\""\$\r\n]
    |    <ESCAPE_SEQUENCE>
    |    \\ [^nrbtvxu\r\n]
    |    <SIMPLE_STRING_INTERPOLATION>
    ;

<STRING_CONTENT_SQ>
    :    <STRING_CONTENT_COMMON>
    |    <DQ> /*case where a string is a single DQ symbol*/
    ;

<SINGLE_LINE_STRING_SQ_BEGIN_END>
    :     <SQ> <STRING_CONTENT_SQ>* <SQ>
    ;

<SINGLE_LINE_STRING_SQ_BEGIN_MID>
    :     <SQ> <STRING_CONTENT_SQ>* \$<lbrace> 
    ;

<SINGLE_LINE_STRING_SQ_MID_MID>
    :   <rbrace> <STRING_CONTENT_SQ> \$<lbrace>  
    ;

<SINGLE_LINE_STRING_SQ_MID_END>
    :    <rbrace> <STRING_CONTENT_SQ>* <SQ>
    ;

<STRING_CONTENT_DQ>
    :    <STRING_CONTENT_COMMON>
    |    <SQ> /*case where a string is a single SQ symbol*/
    ;

<SINGLE_LINE_STRING_DQ_BEGIN_END>
    :    <DQ> <STRING_CONTENT_DQ>* <DQ>
    ;

<SINGLE_LINE_STRING_DQ_BEGIN_MID>
    :    <DQ> <STRING_CONTENT_DQ>* \$<lbrace> 
    ;

<SINGLE_LINE_STRING_DQ_MID_MID>
    :   <rbrace> <STRING_CONTENT_DQ>* \$<lbrace>   
    ;

<SINGLE_LINE_STRING_DQ_MID_END>
    :   <rbrace> <STRING_CONTENT_DQ>* <DQ>
    ;

/*new rule*/
<SINGLE_LINE_STRING_MID_MID>
    :   <rbrace> (<STRING_CONTENT_DQ>|<STRING_CONTENT_SQ>)* \$<lbrace>   
    ;

<SQ>
    : \'
    ;

<DQ>
    : \""
    ;

<TSQ>
    :   \'\'\'
    ;

<TDQ>
    :   \""\""\""
    ;



<QUOTES_SQ>
    :
    |    <SQ>
    |    <SQ><SQ>
    ;

<QUOTES_DQ>
    :
    |    <DQ>
    |    <DQ><DQ>
    ;



<STRING_CONTENT_TSQ>
    :   <QUOTES_SQ> (<STRING_CONTENT_COMMON> | \"" | \r | \n | \\\r | \\\n)
    ;

<MULTI_LINE_STRING_SQ_BEGIN_END>
    :   \'\'\' <STRING_CONTENT_TSQ>* \'\'\'
    ;

<MULTI_LINE_STRING_SQ_BEGIN_MID>
    :    <TSQ> <STRING_CONTENT_TSQ>* <QUOTES_SQ> \$<lbrace> 
    ;

<MULTI_LINE_STRING_SQ_MID_MID>
    :   <rbrace> <STRING_CONTENT_TSQ>* <QUOTES_SQ> \$<lbrace>
         
    ;

<MULTI_LINE_STRING_SQ_MID_END>
    :   <rbrace> <STRING_CONTENT_TSQ>* <TSQ>
    ;



<STRING_CONTENT_TDQ>
    :    <QUOTES_DQ> (<STRING_CONTENT_COMMON> | \' | \r | \n | \\\r | \\\n)
    ;

<MULTI_LINE_STRING_DQ_BEGIN_END>
    :   <TDQ> <STRING_CONTENT_TDQ>* <TDQ>
    ;

<MULTI_LINE_STRING_DQ_BEGIN_MID>
    :   <TDQ> <STRING_CONTENT_TDQ>* <QUOTES_DQ> \$<lbrace>
    ;

<MULTI_LINE_STRING_DQ_MID_MID>
    :   <rbrace> <STRING_CONTENT_TDQ>* <QUOTES_DQ> \$<lbrace>
    ;

<MULTI_LINE_STRING_DQ_MID_END>
    :   <lbrace> <STRING_CONTENT_TDQ>* <TDQ>
    ;

<MULTI_LINE_STRING_MID_MID>
    :   <rbrace> (<STRING_CONTENT_TSQ>|<STRING_CONTENT_TDQ>)* <QUOTES_DQ> \$<lbrace>
    ;

<lbrace>
    :    \{ 
    ;

<rbrace>
    :    \}
    ;

<IDENTIFIER_START_NO_DOLLAR>
    :    <LETTER>
    |    _
    ;

<IDENTIFIER_PART_NO_DOLLAR>
    :    <IDENTIFIER_START_NO_DOLLAR>
    |    <DIGIT>
    ;

<IDENTIFIER_NO_DOLLAR>
    :    <IDENTIFIER_START_NO_DOLLAR> <IDENTIFIER_PART_NO_DOLLAR>*
    ;

<IDENTIFIER_START>
    :    <IDENTIFIER_START_NO_DOLLAR>
    |    \$
    ;

<IDENTIFIER_PART>
    :    <IDENTIFIER_START>
    |    <DIGIT>
    ;

<SCRIPT_TAG>
    :    \#\! ([^\r\n])* <NEWLINE>
    ;

<IDENTIFIER>
    :    <IDENTIFIER_START> <IDENTIFIER_PART>*
    ;


<NEWLINE>
    :    (\r | \n | \r\n)
    ;

<FEFF>
    :    \xFEFF
    ;

<whitespace>
    : \s+
    ;

<comment>
    : \/\/ [^\r\n]* 
    | /\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*+/
    ;"
]

{ #category : #generated }
DartParser class >> reduceTable [
^#(
	#(143 0 #reduceActionForimportOrExport_1: 1948673 false) 
	#(239 0 #nil 14733313 false) 
	#(144 0 #nil 1975297 false) 
	#(237 1 #liftFirstValue: 14714881 false) 
	#(146 0 #reduceActionForimportOrExport_1: 2000897 false) 
	#(143 2 #reduceActionForimportOrExport_2: 1948674 false) 
	#(397 1 #reduceActionForimportOrExport1: 38931457 false) 
	#(397 1 #reduceActionForimportOrExport2: 38931458 false) 
	#(239 2 #liftFirstValue: 14733314 false) 
	#(142 3 #reduceActionForlibraryDefinition1: 1830913 false) 
	#(144 2 #liftFirstValue: 1975298 false) 
	#(398 2 #reduceActionForlibraryImport1: 39034881 false) 
	#(455 1 #liftFirstValue: 45722625 false) 
	#(455 1 #liftFirstValue: 45722626 false) 
	#(455 1 #liftFirstValue: 45722627 false) 
	#(455 1 #liftFirstValue: 45722628 false) 
	#(455 1 #liftFirstValue: 45722629 false) 
	#(455 1 #liftFirstValue: 45722630 false) 
	#(455 1 #liftFirstValue: 45722631 false) 
	#(455 1 #liftFirstValue: 45722632 false) 
	#(455 1 #liftFirstValue: 45722633 false) 
	#(354 1 #reduceActionForidentifier2: 33830914 false) 
	#(455 1 #liftFirstValue: 45722634 false) 
	#(455 1 #liftFirstValue: 45722635 false) 
	#(455 1 #liftFirstValue: 45722636 false) 
	#(455 1 #liftFirstValue: 45722637 false) 
	#(455 1 #liftFirstValue: 45722638 false) 
	#(455 1 #liftFirstValue: 45722639 false) 
	#(455 1 #liftFirstValue: 45722640 false) 
	#(455 1 #liftFirstValue: 45722641 false) 
	#(455 1 #liftFirstValue: 45722642 false) 
	#(455 1 #liftFirstValue: 45722643 false) 
	#(455 1 #liftFirstValue: 45722644 false) 
	#(455 1 #liftFirstValue: 45722645 false) 
	#(455 1 #liftFirstValue: 45722646 false) 
	#(455 1 #liftFirstValue: 45722647 false) 
	#(353 1 #liftFirstValue: 33622025 false) 
	#(353 1 #liftFirstValue: 33622026 false) 
	#(353 1 #liftFirstValue: 33622019 false) 
	#(353 1 #liftFirstValue: 33622020 false) 
	#(353 1 #liftFirstValue: 33622021 false) 
	#(353 1 #liftFirstValue: 33622022 false) 
	#(353 1 #liftFirstValue: 33622023 false) 
	#(353 1 #liftFirstValue: 33622024 false) 
	#(353 1 #liftFirstValue: 33622017 false) 
	#(354 1 #reduceActionForidentifier1: 33830913 false) 
	#(396 0 #reduceActionFor_____identifier__identifier___1: 38866945 false) 
	#(353 1 #liftFirstValue: 33622018 false) 
	#(356 1 #liftFirstValue: 34216962 false) 
	#(356 1 #liftFirstValue: 34216969 false) 
	#(356 1 #liftFirstValue: 34216970 false) 
	#(356 1 #liftFirstValue: 34216963 false) 
	#(356 1 #liftFirstValue: 34216964 false) 
	#(356 1 #liftFirstValue: 34216965 false) 
	#(356 1 #liftFirstValue: 34216966 false) 
	#(356 1 #liftFirstValue: 34216967 false) 
	#(356 1 #liftFirstValue: 34216968 false) 
	#(356 1 #liftFirstValue: 34216961 false) 
	#(238 2 #liftSecondValue: 14733313 false) 
	#(240 1 #liftFirstValue: 14757890 false) 
	#(445 1 #liftFirstValue: 43151362 false) 
	#(240 1 #liftFirstValue: 14757891 false) 
	#(445 1 #liftFirstValue: 43151361 false) 
	#(419 1 #reduceActionFortypeName1: 40725505 false) 
	#(142 4 #reduceActionForlibraryDefinition3: 1830915 false) 
	#(142 4 #reduceActionForlibraryDefinition5: 1830917 false) 
	#(146 2 #reduceActionForimportOrExport_2: 2000898 false) 
	#(447 1 #liftFirstValue: 43506689 false) 
	#(447 1 #liftFirstValue: 43506690 false) 
	#(447 1 #liftFirstValue: 43506692 false) 
	#(447 1 #liftFirstValue: 43506691 false) 
	#(447 1 #liftFirstValue: 43506694 false) 
	#(447 1 #liftFirstValue: 43506693 false) 
	#(410 1 #reduceActionForuri1: 39929857 false) 
	#(257 1 #liftFirstValue: 20270081 false) 
	#(400 0 #nil 39319553 false) 
	#(258 1 #liftFirstValue: 20314113 false) 
	#(412 0 #reduceActionFor_____identifier__identifier___1: 40066049 false) 
	#(394 2 #reduceActionFordottedIdentifierList1: 38811649 false) 
	#(393 4 #reduceActionForlibraryName1: 38686721 false) 
	#(445 2 #reduceActionForconstructorDesignation3: 43151363 false) 
	#(240 2 #reduceActionFormetadatum1: 14757889 false) 
	#(142 4 #reduceActionForlibraryDefinition2: 1830914 false) 
	#(142 5 #reduceActionForlibraryDefinition4: 1830916 false) 
	#(142 5 #reduceActionForlibraryDefinition7: 1830919 false) 
	#(142 5 #reduceActionForlibraryDefinition6: 1830918 false) 
	#(156 1 #liftFirstValue: 4163585 false) 
	#(417 1 #liftFirstValue: 40557570 false) 
	#(418 1 #liftFirstValue: 40630277 false) 
	#(145 2 #reduceActionFor_metadata__metadata__topLevelDefinition__topLevelDefinition__1: 2000897 false) 
	#(147 1 #reduceActionFortopLevelDefinition8: 2096136 false) 
	#(147 1 #reduceActionFortopLevelDefinition6: 2096134 false) 
	#(147 1 #reduceActionFortopLevelDefinition7: 2096135 false) 
	#(147 1 #reduceActionFortopLevelDefinition1: 2096129 false) 
	#(147 1 #reduceActionFortopLevelDefinition2: 2096130 false) 
	#(147 1 #reduceActionFortopLevelDefinition3: 2096131 false) 
	#(147 1 #reduceActionFortopLevelDefinition4: 2096132 false) 
	#(156 1 #liftFirstValue: 4163586 false) 
	#(415 1 #reduceActionFortype3: 40359939 false) 
	#(417 1 #liftFirstValue: 40557569 false) 
	#(418 1 #liftFirstValue: 40630273 false) 
	#(147 1 #reduceActionFortopLevelDefinition5: 2096133 false) 
	#(431 1 #liftFirstValue: 41715715 false) 
	#(432 1 #liftFirstValue: 41880577 false) 
	#(415 1 #reduceActionFortype1: 40359937 false) 
	#(258 2 #liftFirstValue: 20314114 false) 
	#(411 2 #reduceActionForconfigurableUri1: 40030209 false) 
	#(396 2 #reduceActionFor_____identifier__identifier___2: 38866946 false) 
	#(355 3 #reduceActionForqualifiedName2: 33959938 false) 
	#(355 3 #reduceActionForqualifiedName1: 33959937 false) 
	#(419 3 #reduceActionFortypeName2: 40725506 false) 
	#(423 0 #reduceActionFor_____identifier__identifier___1: 40925185 false) 
	#(340 1 #liftFirstValue: 32388097 false) 
	#(284 2 #liftFirstValue: 23105537 false) 
	#(348 1 #liftFirstValue: 32976897 false) 
	#(339 1 #liftFirstValue: 32353281 false) 
	#(348 1 #liftFirstValue: 32976898 false) 
	#(341 1 #liftFirstValue: 32425985 false) 
	#(253 1 #reduceActionForbooleanLiteral2: 20032514 false) 
	#(251 1 #reduceActionFornullLiteral1: 19855361 false) 
	#(281 1 #reduceActionForthisExpression1: 22762497 false) 
	#(253 1 #reduceActionForbooleanLiteral1: 20032513 false) 
	#(252 1 #reduceActionFornumericLiteral1: 19907585 false) 
	#(252 1 #reduceActionFornumericLiteral2: 19907586 false) 
	#(448 1 #reduceActionForsingleLineString1: 43971585 false) 
	#(451 1 #reduceActionFormultiLineString1: 44564481 false) 
	#(448 1 #reduceActionForsingleLineString1: 43971586 false) 
	#(448 1 #reduceActionForsingleLineString1: 43971588 false) 
	#(451 1 #reduceActionFormultiLineString1: 44564482 false) 
	#(451 1 #reduceActionFormultiLineString1: 44564484 false) 
	#(165 1 #reduceActionForformalParameterPart1: 5139457 false) 
	#(166 1 #liftFirstValue: 5277697 false) 
	#(247 0 #reduceActionFor_____identifier__identifier___1: 17751041 false) 
	#(287 0 #reduceActionFor_____identifier__identifier___1: 23215105 false) 
	#(344 0 #reduceActionFor_____identifier__identifier___1: 32714753 false) 
	#(293 0 #nil 23871489 false) 
	#(248 1 #liftFirstValue: 18568201 false) 
	#(248 1 #liftFirstValue: 18568197 false) 
	#(250 1 #liftFirstValue: 19670017 false) 
	#(250 1 #liftFirstValue: 19670019 false) 
	#(250 1 #liftFirstValue: 19670018 false) 
	#(250 1 #liftFirstValue: 19670020 false) 
	#(256 1 #reduceActionFor_multiLineString__multiLineString____singleLineString__singleLineString___1: 20166657 false) 
	#(254 1 #reduceActionForstringLiteral1: 20143105 false) 
	#(250 1 #liftFirstValue: 19670022 false) 
	#(250 1 #liftFirstValue: 19670023 false) 
	#(248 1 #liftFirstValue: 18568204 false) 
	#(241 1 #reduceActionForexpression4: 14915588 false) 
	#(248 1 #liftFirstValue: 18568196 false) 
	#(248 1 #liftFirstValue: 18568202 false) 
	#(248 1 #liftFirstValue: 18568193 false) 
	#(248 1 #liftFirstValue: 18568199 false) 
	#(248 1 #liftFirstValue: 18568200 false) 
	#(241 1 #reduceActionForexpression3: 14915587 false) 
	#(241 1 #reduceActionForexpression2: 14915586 false) 
	#(297 1 #liftFirstValue: 24681473 false) 
	#(298 1 #liftFirstValue: 25077761 false) 
	#(301 1 #liftFirstValue: 25431041 false) 
	#(304 1 #liftFirstValue: 25785345 false) 
	#(307 1 #liftFirstValue: 26287105 false) 
	#(311 1 #liftFirstValue: 27058177 false) 
	#(315 1 #liftFirstValue: 27805697 false) 
	#(318 1 #liftFirstValue: 28348417 false) 
	#(321 1 #liftFirstValue: 28863489 false) 
	#(325 1 #liftFirstValue: 29461505 false) 
	#(329 1 #liftFirstValue: 30199809 false) 
	#(333 1 #liftFirstValue: 30954497 false) 
	#(338 1 #liftFirstValue: 32257025 false) 
	#(338 1 #liftFirstValue: 32257026 false) 
	#(338 1 #liftFirstValue: 32257027 false) 
	#(337 1 #liftFirstValue: 31863810 false) 
	#(337 1 #liftFirstValue: 31863811 false) 
	#(248 1 #liftFirstValue: 18568198 false) 
	#(349 1 #reduceActionForassignableExpression3: 33031171 false) 
	#(250 1 #liftFirstValue: 19670021 false) 
	#(255 1 #reduceActionForimportOrExport2: 20166658 false) 
	#(255 1 #reduceActionForimportOrExport1: 20166657 false) 
	#(142 6 #reduceActionForlibraryDefinition8: 1830920 false) 
	#(185 2 #reduceActionForclassDeclaration17: 7790609 false) 
	#(184 1 #reduceActionFortypeWithParameters1: 7696385 false) 
	#(205 0 #reduceActionFor_____identifier__identifier___1: 11361281 false) 
	#(155 1 #liftFirstValue: 4098049 false) 
	#(155 1 #liftFirstValue: 4098051 false) 
	#(418 2 #liftFirstValue: 40630278 false) 
	#(430 2 #reduceActionForfunctionTypeTail1: 41576449 false) 
	#(210 2 #reduceActionForgetterSignature1: 11994113 false) 
	#(429 1 #liftFirstValue: 41467906 false) 
	#(427 2 #liftSecondValue: 41154563 false) 
	#(150 0 #reduceActionFor_____identifier__identifier___1: 3060737 false) 
	#(363 0 #reduceActionFor_____identifier__identifier___1: 34869249 false) 
	#(152 2 #reduceActionForfunctionDeclaration3: 3558403 false) 
	#(163 1 #reduceActionForfunctionBody2: 4780034 false) 
	#(152 2 #reduceActionForfunctionDeclaration3: 3558401 false) 
	#(152 2 #reduceActionForfunctionDeclaration3: 3558402 false) 
	#(161 2 #reduceActionForfunctionSignature1: 4511745 false) 
	#(432 2 #reduceActionForfunctionType2: 41880578 false) 
	#(418 2 #liftFirstValue: 40630274 false) 
	#(418 2 #liftFirstValue: 40630275 false) 
	#(431 2 #reduceActionForfunctionTypeTails1: 41715713 false) 
	#(415 2 #reduceActionFortype1: 40359938 false) 
	#(406 4 #reduceActionForpartDirective1: 39654401 false) 
	#(405 5 #reduceActionForlibraryExport1: 39561217 false) 
	#(400 2 #liftFirstValue: 39319554 false) 
	#(412 2 #reduceActionFor_____identifier__identifier___2: 40066050 false) 
	#(399 4 #reduceActionForimportSpecification1: 39200769 false) 
	#(395 2 #liftSecondValue: 38866945 false) 
	#(421 2 #reduceActionFortypeList1: 40894465 false) 
	#(420 3 #liftSecondValue: 40846337 false) 
	#(445 4 #reduceActionForconstructorDesignation3: 43151365 false) 
	#(445 4 #reduceActionForconstructorDesignation4: 43151364 false) 
	#(336 1 #liftFirstValue: 31301635 false) 
	#(324 1 #liftFirstValue: 29100033 false) 
	#(336 1 #liftFirstValue: 31301633 false) 
	#(332 1 #liftFirstValue: 30568449 false) 
	#(332 1 #liftFirstValue: 30568450 false) 
	#(336 1 #liftFirstValue: 31301634 false) 
	#(314 1 #liftFirstValue: 27451396 false) 
	#(328 1 #liftFirstValue: 29768705 false) 
	#(314 1 #liftFirstValue: 27451395 false) 
	#(209 1 #liftFirstValue: 11820037 false) 
	#(314 1 #liftFirstValue: 27451394 false) 
	#(324 1 #liftFirstValue: 29100034 false) 
	#(324 1 #liftFirstValue: 29100035 false) 
	#(208 1 #liftFirstValue: 11726849 false) 
	#(336 1 #liftFirstValue: 31301636 false) 
	#(446 2 #reduceActionForsymbolLiteral3: 43360259 false) 
	#(446 2 #reduceActionForsymbolLiteral1: 43360257 false) 
	#(208 1 #liftFirstValue: 11726850 false) 
	#(209 1 #liftFirstValue: 11820036 false) 
	#(209 1 #liftFirstValue: 11820038 false) 
	#(209 1 #liftFirstValue: 11820035 false) 
	#(209 1 #liftFirstValue: 11820034 false) 
	#(209 1 #liftFirstValue: 11820033 false) 
	#(167 2 #reduceActionForemptyFormalParameterList1: 5606401 false) 
	#(171 1 #liftFirstValue: 5834753 false) 
	#(171 1 #liftFirstValue: 5834754 false) 
	#(170 0 #reduceActionFor_____identifier__identifier___1: 5753857 false) 
	#(236 0 #reduceActionFor_____identifier__identifier___1: 14642177 false) 
	#(260 2 #reduceActionForlistLiteral1: 20487169 false) 
	#(265 1 #reduceActionForexpressionElement1: 20938753 false) 
	#(263 0 #reduceActionFor_____identifier__identifier___1: 20633601 false) 
	#(264 1 #reduceActionForelement1: 20689921 false) 
	#(264 1 #reduceActionForelement2: 20689922 false) 
	#(264 1 #reduceActionForelement3: 20689923 false) 
	#(264 1 #reduceActionForelement4: 20689924 false) 
	#(264 1 #reduceActionForelement5: 20689925 false) 
	#(310 1 #liftFirstValue: 26624002 false) 
	#(310 1 #liftFirstValue: 26624001 false) 
	#(347 1 #liftFirstValue: 32921601 false) 
	#(248 2 #reduceActionForprimary3: 18568195 false) 
	#(349 2 #reduceActionForassignableExpression2: 33031170 false) 
	#(248 2 #reduceActionForprimary2: 18568194 false) 
	#(271 2 #reduceActionForthrowExpression1: 21340161 false) 
	#(342 2 #reduceActionForawaitExpression1: 32460801 false) 
	#(450 0 #reduceActionFor_____identifier__identifier___1: 44184577 false) 
	#(453 0 #reduceActionFor_____identifier__identifier___1: 44771329 false) 
	#(259 2 #reduceActionForsetOrMapLiteral1: 20356097 false) 
	#(279 1 #liftFirstValue: 22428673 false) 
	#(273 2 #reduceActionForfunctionExpression1: 21512193 false) 
	#(278 2 #liftFirstValue: 22354945 false) 
	#(165 2 #reduceActionForformalParameterPart2: 5139458 false) 
	#(245 2 #reduceActionForexpressionList1: 17696769 false) 
	#(285 2 #reduceActionForargumentList2: 23161858 false) 
	#(343 2 #reduceActionForpostfixExpression2: 32557058 false) 
	#(349 2 #reduceActionForassignableExpression1: 33031169 false) 
	#(256 2 #reduceActionForimportOrExport_2: 20166658 false) 
	#(284 3 #liftSecondValue: 23105538 false) 
	#(285 2 #reduceActionForargumentList1: 23161857 false) 
	#(300 1 #reduceActionFor______logicalOrExpression__logicalOrExpression___1: 25174017 false) 
	#(298 2 #reduceActionForifNullExpression2: 25077762 false) 
	#(303 1 #reduceActionFor______logicalOrExpression__logicalOrExpression___1: 25534465 false) 
	#(301 2 #reduceActionForlogicalOrExpression2: 25431042 false) 
	#(306 1 #reduceActionFor______logicalOrExpression__logicalOrExpression___1: 25883649 false) 
	#(304 2 #reduceActionForlogicalAndExpression2: 25785346 false) 
	#(309 1 #reduceActionFor_multiLineString__multiLineString____singleLineString__singleLineString___1: 26390529 false) 
	#(307 2 #reduceActionForequalityExpression2: 26287106 false) 
	#(358 1 #liftFirstValue: 34525185 false) 
	#(360 1 #liftFirstValue: 34612225 false) 
	#(313 1 #reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression___1: 27167745 false) 
	#(311 2 #reduceActionForrelationalExpression2: 27058178 false) 
	#(312 1 #reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression__1: 27167745 false) 
	#(312 1 #reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression__2: 27167746 false) 
	#(317 1 #reduceActionFor______logicalOrExpression__logicalOrExpression___1: 27909121 false) 
	#(315 2 #reduceActionForbitwiseOrExpression2: 27805698 false) 
	#(320 1 #reduceActionFor______logicalOrExpression__logicalOrExpression___1: 28451841 false) 
	#(318 2 #reduceActionForbitwiseXorExpression2: 28348418 false) 
	#(323 1 #reduceActionFor______logicalOrExpression__logicalOrExpression___1: 28952577 false) 
	#(321 2 #reduceActionForbitwiseAndExpression2: 28863490 false) 
	#(327 1 #reduceActionFor_multiLineString__multiLineString____singleLineString__singleLineString___1: 29554689 false) 
	#(325 2 #reduceActionForshiftExpression2: 29461506 false) 
	#(331 1 #reduceActionFor_multiLineString__multiLineString____singleLineString__singleLineString___1: 30314497 false) 
	#(329 2 #reduceActionForadditiveExpression2: 30199810 false) 
	#(335 1 #reduceActionFor_multiLineString__multiLineString____singleLineString__singleLineString___1: 31047681 false) 
	#(333 2 #reduceActionFormultiplicativeExpression2: 30954498 false) 
	#(337 2 #reduceActionForunaryExpression1: 31863809 false) 
	#(337 2 #reduceActionForunaryExpression4: 31863812 false) 
	#(337 2 #reduceActionForunaryExpression5: 31863813 false) 
	#(337 2 #reduceActionForunaryExpression6: 31863814 false) 
	#(296 1 #liftFirstValue: 24178692 false) 
	#(296 1 #liftFirstValue: 24178698 false) 
	#(296 1 #liftFirstValue: 24178689 false) 
	#(296 1 #liftFirstValue: 24178693 false) 
	#(296 1 #liftFirstValue: 24178694 false) 
	#(296 1 #liftFirstValue: 24178690 false) 
	#(296 1 #liftFirstValue: 24178695 false) 
	#(295 1 #reduceActionForassignmentOperator1: 24009729 false) 
	#(296 1 #liftFirstValue: 24178701 false) 
	#(296 1 #liftFirstValue: 24178699 false) 
	#(296 1 #liftFirstValue: 24178700 false) 
	#(296 1 #liftFirstValue: 24178691 false) 
	#(295 1 #reduceActionForassignmentOperator2: 24009730 false) 
	#(343 2 #reduceActionForpostfixExpression1: 32557057 false) 
	#(345 1 #liftFirstValue: 32765953 false) 
	#(386 2 #reduceActionForlabel1: 38056961 false) 
	#(288 2 #reduceActionFornamedArgument1: 23374849 false) 
	#(282 2 #reduceActionFornewExpression1: 22820865 false) 
	#(187 0 #reduceActionForimportOrExport_1: 7964673 false) 
	#(184 2 #reduceActionFortypeWithParameters1: 7696386 false) 
	#(148 3 #reduceActionFortopLevelListDeclaration3: 2725891 false) 
	#(203 2 #reduceActionForstaticFinalDeclarationList1: 11275265 false) 
	#(148 3 #reduceActionFortopLevelListDeclaration3: 2725889 false) 
	#(185 3 #reduceActionForclassDeclaration18: 7790610 false) 
	#(155 2 #liftSecondValue: 4098050 false) 
	#(404 0 #reduceActionFor_____identifier__identifier___1: 39498753 false) 
	#(151 3 #reduceActionFortopLevelExternalDeclaration1: 3158017 false) 
	#(151 3 #reduceActionFortopLevelExternalDeclaration1: 3158018 false) 
	#(151 3 #reduceActionFortopLevelExternalDeclaration1: 3158019 false) 
	#(433 2 #liftFirstValue: 42029057 false) 
	#(436 0 #reduceActionFor_____identifier__identifier___1: 42297345 false) 
	#(438 1 #liftFirstValue: 42567681 false) 
	#(438 1 #liftFirstValue: 42567682 false) 
	#(430 3 #reduceActionForfunctionTypeTail2: 41576450 false) 
	#(160 0 #reduceActionFor_____identifier__identifier___1: 4415489 false) 
	#(157 1 #reduceActionForinitializedIdentifier1: 4210689 false) 
	#(195 0 #nil 8843265 false) 
	#(211 3 #reduceActionForsetterSignature1: 12091393 false) 
	#(429 2 #reduceActionForfunctionPrefix1: 41467905 false) 
	#(163 2 #reduceActionForfunctionBody4: 4780036 false) 
	#(164 2 #reduceActionForblock1: 5062657 false) 
	#(361 1 #reduceActionForstatements1: 34732033 false) 
	#(210 3 #reduceActionForgetterSignature2: 11994114 false) 
	#(161 3 #reduceActionForfunctionSignature2: 4511746 false) 
	#(418 3 #liftFirstValue: 40630276 false) 
	#(431 3 #reduceActionForfunctionTypeTails2: 41715714 false) 
	#(401 2 #liftSecondValue: 39367682 false) 
	#(401 2 #liftSecondValue: 39367681 false) 
	#(355 5 #reduceActionForqualifiedName4: 33959940 false) 
	#(355 5 #reduceActionForqualifiedName3: 33959939 false) 
	#(423 2 #reduceActionFor_____identifier__identifier___2: 40925186 false) 
	#(314 2 #liftFirstValue: 27451393 false) 
	#(328 2 #liftFirstValue: 29768707 false) 
	#(208 2 #liftFirstValue: 11726851 false) 
	#(446 3 #reduceActionForsymbolLiteral2: 43360258 false) 
	#(182 1 #liftFirstValue: 7515137 false) 
	#(174 0 #reduceActionFor_____identifier__identifier___1: 6036481 false) 
	#(183 1 #liftFirstValue: 7596033 false) 
	#(177 0 #reduceActionFor_____identifier__identifier___1: 6215681 false) 
	#(166 3 #liftSecondValue: 5277698 false) 
	#(166 3 #liftSecondValue: 5277701 false) 
	#(168 2 #reduceActionFornormalFormalParameters1: 5686273 false) 
	#(154 1 #liftFirstValue: 3987461 false) 
	#(154 1 #liftFirstValue: 3987457 false) 
	#(180 1 #reduceActionForsimpleFormalParameter1: 7138305 false) 
	#(154 1 #liftFirstValue: 3987463 false) 
	#(178 2 #reduceActionFornormalFormalParameter1: 6310913 false) 
	#(178 2 #reduceActionFornormalFormalParameter1: 6310915 false) 
	#(178 2 #reduceActionFornormalFormalParameter1: 6310914 false) 
	#(180 1 #reduceActionForsimpleFormalParameter2: 7138306 false) 
	#(248 3 #reduceActionForprimary11: 18568203 false) 
	#(233 2 #reduceActionFortypeParameter1: 14440449 false) 
	#(267 2 #liftSecondValue: 21068801 false) 
	#(267 2 #liftSecondValue: 21068802 false) 
	#(260 3 #reduceActionForlistLiteral2: 20487170 false) 
	#(261 2 #reduceActionForelements1: 20599809 false) 
	#(260 3 #reduceActionForlistLiteral1: 20487173 false) 
	#(259 3 #reduceActionForsetOrMapLiteral1: 20356101 false) 
	#(283 3 #reduceActionForconstObjectExpression1: 22960129 false) 
	#(282 3 #reduceActionFornewExpression2: 22820866 false) 
	#(321 3 #reduceActionForbitwiseAndExpression3: 28863491 false) 
	#(351 2 #liftSecondValue: 33401858 false) 
	#(318 3 #reduceActionForbitwiseXorExpression3: 28348419 false) 
	#(315 3 #reduceActionForbitwiseOrExpression3: 27805699 false) 
	#(307 3 #reduceActionForequalityExpression3: 26287107 false) 
	#(311 3 #reduceActionForrelationalExpression3: 27058179 false) 
	#(325 3 #reduceActionForshiftExpression3: 29461507 false) 
	#(329 3 #reduceActionForadditiveExpression3: 30199811 false) 
	#(333 3 #reduceActionFormultiplicativeExpression3: 30954499 false) 
	#(347 2 #liftFirstValue: 32921602 false) 
	#(259 3 #reduceActionForsetOrMapLiteral2: 20356098 false) 
	#(274 2 #liftSecondValue: 21663745 false) 
	#(279 2 #liftSecondValue: 22428674 false) 
	#(247 2 #reduceActionFor_____identifier__identifier___2: 17751042 false) 
	#(287 2 #reduceActionFor_____identifier__identifier___2: 23215106 false) 
	#(346 1 #liftFirstValue: 32817153 false) 
	#(293 2 #liftFirstValue: 23871490 false) 
	#(346 1 #liftFirstValue: 32817155 false) 
	#(352 1 #liftFirstValue: 33495041 false) 
	#(346 1 #liftFirstValue: 32817154 false) 
	#(350 2 #liftFirstValue: 33332225 false) 
	#(346 1 #liftFirstValue: 32817156 false) 
	#(344 2 #reduceActionFor_____identifier__identifier___2: 32714754 false) 
	#(284 4 #liftSecondValue: 23105539 false) 
	#(289 3 #reduceActionForcascade1: 23462913 false) 
	#(291 1 #liftFirstValue: 23742466 false) 
	#(289 3 #reduceActionForcascade3: 23462915 false) 
	#(289 3 #reduceActionForcascade3: 23462914 false) 
	#(243 1 #liftFirstValue: 17235969 false) 
	#(243 1 #liftFirstValue: 17235972 false) 
	#(243 1 #liftFirstValue: 17235970 false) 
	#(243 1 #liftFirstValue: 17235971 false) 
	#(299 2 #liftSecondValue: 25174017 false) 
	#(300 2 #reduceActionFor_____identifier__identifier___2: 25174018 false) 
	#(302 2 #liftSecondValue: 25534465 false) 
	#(303 2 #reduceActionFor_____identifier__identifier___2: 25534466 false) 
	#(305 2 #liftSecondValue: 25883649 false) 
	#(306 2 #reduceActionFor_____identifier__identifier___2: 25883650 false) 
	#(309 2 #reduceActionForimportOrExport_2: 26390530 false) 
	#(308 2 #reduceActionFor_metadata__metadata__topLevelDefinition__topLevelDefinition__1: 26390529 false) 
	#(358 2 #liftFirstValue: 34525186 false) 
	#(313 2 #reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression___2: 27167746 false) 
	#(312 2 #reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression__3: 27167747 false) 
	#(357 2 #liftFirstValue: 34476033 false) 
	#(416 1 #liftFirstValue: 40477699 false) 
	#(416 1 #liftFirstValue: 40477697 false) 
	#(359 2 #liftFirstValue: 34563073 false) 
	#(316 2 #liftSecondValue: 27909121 false) 
	#(317 2 #reduceActionFor_____identifier__identifier___2: 27909122 false) 
	#(319 2 #liftSecondValue: 28451841 false) 
	#(320 2 #reduceActionFor_____identifier__identifier___2: 28451842 false) 
	#(322 2 #liftSecondValue: 28952577 false) 
	#(323 2 #reduceActionFor_____identifier__identifier___2: 28952578 false) 
	#(327 2 #reduceActionForimportOrExport_2: 29554690 false) 
	#(326 2 #reduceActionFor_metadata__metadata__topLevelDefinition__topLevelDefinition__1: 29554689 false) 
	#(331 2 #reduceActionForimportOrExport_2: 30314498 false) 
	#(330 2 #reduceActionFor_metadata__metadata__topLevelDefinition__topLevelDefinition__1: 30314497 false) 
	#(335 2 #reduceActionForimportOrExport_2: 31047682 false) 
	#(334 2 #reduceActionFor_metadata__metadata__topLevelDefinition__topLevelDefinition__1: 31047681 false) 
	#(241 3 #reduceActionForexpression1: 14915585 false) 
	#(270 3 #liftFirstValue: 21269505 false) 
	#(260 3 #reduceActionForlistLiteral3: 20487171 false) 
	#(259 3 #reduceActionForsetOrMapLiteral3: 20356099 false) 
	#(188 2 #liftSecondValue: 8171521 false) 
	#(426 0 #reduceActionFor_____identifier__identifier___1: 41055233 false) 
	#(189 2 #liftSecondValue: 8232961 false) 
	#(190 2 #liftSecondValue: 8291329 false) 
	#(205 2 #reduceActionFor_____identifier__identifier___2: 11361282 false) 
	#(206 3 #reduceActionForstaticFinalDeclaration1: 11460609 false) 
	#(148 4 #reduceActionFortopLevelListDeclaration4: 2725892 false) 
	#(227 0 #nil 14071809 false) 
	#(148 4 #reduceActionFortopLevelListDeclaration4: 2725890 false) 
	#(199 0 #nil 9057281 false) 
	#(402 2 #reduceActionForidentifierList1: 39449601 false) 
	#(151 4 #reduceActionFortopLevelExternalDeclaration4: 3158020 false) 
	#(442 0 #reduceActionFor_____identifier__identifier___1: 42835969 false) 
	#(437 2 #reduceActionFornormalParameterType2: 42384386 false) 
	#(437 2 #reduceActionFornormalParameterType1: 42384385 false) 
	#(433 3 #liftSecondValue: 42029059 false) 
	#(434 2 #reduceActionFornormalParameterTypes1: 42223617 false) 
	#(433 3 #liftSecondValue: 42029061 false) 
	#(158 2 #reduceActionForinitializedIdentifierList1: 4332545 false) 
	#(148 4 #reduceActionFortopLevelListDeclaration5: 2725893 false) 
	#(428 3 #reduceActionForfunctionTypeAlias1: 41330689 false) 
	#(148 4 #reduceActionFortopLevelListDeclaration7: 2725895 false) 
	#(150 2 #reduceActionFor_____identifier__identifier___2: 3060738 false) 
	#(163 3 #reduceActionForfunctionBody1: 4780033 false) 
	#(163 3 #reduceActionForfunctionBody5: 4780037 false) 
	#(163 3 #reduceActionForfunctionBody5: 4780038 false) 
	#(164 3 #reduceActionForblock2: 5062658 false) 
	#(361 2 #reduceActionForstatements2: 34732034 false) 
	#(365 1 #liftFirstValue: 35544065 false) 
	#(364 1 #liftFirstValue: 34959361 false) 
	#(362 2 #reduceActionForstatement1: 34849793 false) 
	#(364 1 #liftFirstValue: 34959377 false) 
	#(364 1 #liftFirstValue: 34959362 false) 
	#(364 1 #liftFirstValue: 34959373 false) 
	#(364 1 #liftFirstValue: 34959367 false) 
	#(364 1 #liftFirstValue: 34959363 false) 
	#(364 1 #liftFirstValue: 34959364 false) 
	#(364 1 #liftFirstValue: 34959365 false) 
	#(364 1 #liftFirstValue: 34959366 false) 
	#(364 1 #liftFirstValue: 34959368 false) 
	#(364 1 #liftFirstValue: 34959369 false) 
	#(364 1 #liftFirstValue: 34959372 false) 
	#(363 2 #reduceActionFor_____identifier__identifier___2: 34869250 false) 
	#(364 1 #liftFirstValue: 34959370 false) 
	#(364 1 #liftFirstValue: 34959371 false) 
	#(364 1 #liftFirstValue: 34959375 false) 
	#(364 1 #liftFirstValue: 34959376 false) 
	#(364 1 #liftFirstValue: 34959374 false) 
	#(211 4 #reduceActionForsetterSignature2: 12091394 false) 
	#(414 1 #reduceActionForuriTest1: 40239105 false) 
	#(399 6 #reduceActionForimportSpecification2: 39200770 false) 
	#(422 2 #liftSecondValue: 40925185 false) 
	#(328 3 #liftFirstValue: 29768706 false) 
	#(208 3 #liftFirstValue: 11726852 false) 
	#(183 2 #liftSecondValue: 7596036 false) 
	#(166 4 #liftSecondValue: 5277699 false) 
	#(170 2 #reduceActionFor_____identifier__identifier___2: 5753858 false) 
	#(154 2 #liftSecondValue: 3987462 false) 
	#(154 2 #liftSecondValue: 3987458 false) 
	#(180 2 #reduceActionForsimpleFormalParameter3: 7138307 false) 
	#(154 2 #liftFirstValue: 3987459 false) 
	#(154 2 #liftSecondValue: 3987464 false) 
	#(153 2 #reduceActionFordeclaredIdentifier1: 3838977 false) 
	#(179 2 #reduceActionForfunctionFormalParameter1: 6946817 false) 
	#(234 4 #reduceActionFortypeParameters1: 14582785 false) 
	#(236 2 #reduceActionFor_____identifier__identifier___2: 14642178 false) 
	#(372 1 #reduceActionForforInitializerStatement2: 36592642 false) 
	#(372 1 #reduceActionForforInitializerStatement2: 36592641 false) 
	#(266 3 #liftFirstValue: 21017601 false) 
	#(261 3 #reduceActionForelements1: 20599810 false) 
	#(263 2 #reduceActionFor_____identifier__identifier___2: 20633602 false) 
	#(260 4 #reduceActionForlistLiteral6: 20487174 false) 
	#(259 4 #reduceActionForsetOrMapLiteral6: 20356102 false) 
	#(260 4 #reduceActionForlistLiteral7: 20487175 false) 
	#(259 4 #reduceActionForsetOrMapLiteral7: 20356103 false) 
	#(351 3 #liftSecondValue: 33401857 false) 
	#(448 4 #reduceActionForsingleLineString3: 43971587 false) 
	#(450 2 #reduceActionFor_____identifier__identifier___2: 44184578 false) 
	#(448 4 #reduceActionForsingleLineString3: 43971589 false) 
	#(451 4 #reduceActionFormultiLineString3: 44564483 false) 
	#(453 2 #reduceActionFor_____identifier__identifier___2: 44771330 false) 
	#(451 4 #reduceActionFormultiLineString3: 44564485 false) 
	#(279 3 #reduceActionForfunctionPrimaryBody3: 22428675 false) 
	#(274 3 #reduceActionForfunctionPrimaryBody3: 21663746 false) 
	#(279 3 #reduceActionForfunctionPrimaryBody3: 22428676 false) 
	#(246 2 #liftSecondValue: 17751041 false) 
	#(286 2 #liftSecondValue: 23215105 false) 
	#(352 2 #liftSecondValue: 33495042 false) 
	#(290 2 #liftFirstValue: 23674881 false) 
	#(292 1 #liftFirstValue: 23815170 false) 
	#(292 1 #liftFirstValue: 23815169 false) 
	#(272 2 #liftSecondValue: 21431297 false) 
	#(276 2 #liftFirstValue: 21954561 false) 
	#(416 2 #liftFirstValue: 40477698 false) 
	#(296 3 #liftFirstValue: 24178697 false) 
	#(249 4 #reduceActionForconstructorInvocation2: 19043330 false) 
	#(270 4 #liftFirstValue: 21269506 false) 
	#(260 4 #reduceActionForlistLiteral4: 20487172 false) 
	#(259 4 #reduceActionForsetOrMapLiteral4: 20356100 false) 
	#(192 4 #reduceActionFormixinApplicationClass1: 8549377 false) 
	#(224 2 #reduceActionFormixinApplication1: 13818881 false) 
	#(424 2 #reduceActionFortypeNotVoidNotFunctionList1: 40969217 false) 
	#(185 5 #reduceActionForclassDeclaration1: 7790593 false) 
	#(187 2 #reduceActionForimportOrExport_2: 7964674 false) 
	#(204 2 #liftSecondValue: 11361281 false) 
	#(229 0 #nil 14105601 false) 
	#(232 2 #reduceActionForenumEntry1: 14173185 false) 
	#(404 2 #reduceActionFor_____identifier__identifier___2: 39498754 false) 
	#(439 3 #liftSecondValue: 42671105 false) 
	#(443 2 #reduceActionFornamedParameterType1: 42934273 false) 
	#(444 2 #reduceActionFortypedIdentifier1: 43061249 false) 
	#(433 4 #liftSecondValue: 42029060 false) 
	#(436 2 #reduceActionFor_____identifier__identifier___2: 42297346 false) 
	#(160 2 #reduceActionFor_____identifier__identifier___2: 4415490 false) 
	#(157 3 #reduceActionForinitializedIdentifier2: 4210690 false) 
	#(148 5 #reduceActionFortopLevelListDeclaration6: 2725894 false) 
	#(148 5 #reduceActionFortopLevelListDeclaration9: 2725897 false) 
	#(193 5 #liftSecondValue: 8700929 false) 
	#(195 2 #liftFirstValue: 8843266 false) 
	#(427 5 #reduceActionFortypeAlias1: 41154561 false) 
	#(149 2 #liftSecondValue: 3060737 false) 
	#(163 4 #reduceActionForfunctionBody3: 4780035 false) 
	#(387 2 #reduceActionForbreakStatement1: 38123521 false) 
	#(388 2 #reduceActionForcontinueStatement1: 38199297 false) 
	#(379 2 #reduceActionForrethrowStatement1: 37343233 false) 
	#(385 2 #reduceActionForreturnStatement1: 37958657 false) 
	#(365 2 #liftFirstValue: 35544066 false) 
	#(391 2 #reduceActionForassertStatement1: 38487041 false) 
	#(399 7 #reduceActionForimportSpecification3: 39200771 false) 
	#(182 3 #liftFirstValue: 7515138 false) 
	#(172 4 #reduceActionForoptionalPositionalFormalParameters1: 5951489 false) 
	#(174 2 #reduceActionFor_____identifier__identifier___2: 6036482 false) 
	#(183 3 #liftFirstValue: 7596034 false) 
	#(183 3 #liftFirstValue: 7596035 false) 
	#(175 4 #reduceActionFornamedFormalParameters1: 6139905 false) 
	#(177 2 #reduceActionFor_____identifier__identifier___2: 6215682 false) 
	#(166 5 #liftSecondValue: 5277700 false) 
	#(169 2 #liftSecondValue: 5753857 false) 
	#(181 3 #reduceActionForfieldFormalParameter1: 7320577 false) 
	#(153 3 #reduceActionFordeclaredIdentifier2: 3838978 false) 
	#(179 3 #reduceActionForfunctionFormalParameter5: 6946821 false) 
	#(154 3 #reduceActionForfunctionPrimaryBody3: 3987460 false) 
	#(179 3 #reduceActionForfunctionFormalParameter1: 6946818 false) 
	#(179 3 #reduceActionForfunctionFormalParameter3: 6946819 false) 
	#(235 2 #liftSecondValue: 14642177 false) 
	#(233 4 #reduceActionFortypeParameter2: 14440450 false) 
	#(372 2 #reduceActionForforInitializerStatement3: 36592643 false) 
	#(371 2 #reduceActionForforLoopParts3: 36403203 false) 
	#(262 2 #liftSecondValue: 20633601 false) 
	#(260 5 #reduceActionForlistLiteral8: 20487176 false) 
	#(259 5 #reduceActionForsetOrMapLiteral8: 20356104 false) 
	#(449 2 #liftSecondValue: 44184577 false) 
	#(452 2 #liftSecondValue: 44771329 false) 
	#(291 3 #liftSecondValue: 23742465 false) 
	#(294 2 #liftFirstValue: 23929857 false) 
	#(277 2 #liftSecondValue: 22063105 false) 
	#(297 5 #reduceActionForconditionalExpression2: 24681474 false) 
	#(244 3 #reduceActionForassignableExpressionWithoutCascadeWithOperator1: 17441793 false) 
	#(296 4 #liftFirstValue: 24178696 false) 
	#(249 5 #reduceActionForconstructorInvocation1: 19043329 false) 
	#(224 3 #reduceActionFormixinApplication2: 13818882 false) 
	#(426 2 #reduceActionFor_____identifier__identifier___2: 41055234 false) 
	#(202 1 #liftFirstValue: 9623562 false) 
	#(201 1 #reduceActionFormethodSignature3: 9179139 false) 
	#(186 2 #reduceActionFor_metadata__metadata__topLevelDefinition__topLevelDefinition__1: 7964673 false) 
	#(202 1 #liftFirstValue: 9623570 false) 
	#(201 1 #liftFirstValue: 9179145 false) 
	#(202 1 #liftFirstValue: 9623556 false) 
	#(201 1 #reduceActionFormethodSignature5: 9179141 false) 
	#(202 1 #liftFirstValue: 9623559 false) 
	#(201 1 #reduceActionFormethodSignature7: 9179143 false) 
	#(202 1 #reduceActionFordeclaration42: 9623594 false) 
	#(201 1 #liftFirstValue: 9179146 false) 
	#(201 1 #liftFirstValue: 9179138 false) 
	#(202 1 #liftFirstValue: 9623590 false) 
	#(202 1 #reduceActionFordeclaration39: 9623591 false) 
	#(213 1 #reduceActionForconstructorName1: 12372993 false) 
	#(185 6 #reduceActionForclassDeclaration5: 7790597 false) 
	#(185 6 #reduceActionForclassDeclaration3: 7790595 false) 
	#(185 6 #reduceActionForclassDeclaration2: 7790594 false) 
	#(231 0 #nil 14110721 false) 
	#(227 2 #liftFirstValue: 14071810 false) 
	#(229 1 #liftFirstValue: 14105602 false) 
	#(232 3 #reduceActionForenumEntry2: 14173186 false) 
	#(185 6 #reduceActionForclassDeclaration9: 7790601 false) 
	#(197 6 #reduceActionForfunctionPrimaryBody3: 8956929 false) 
	#(199 2 #liftFirstValue: 9057282 false) 
	#(403 2 #liftSecondValue: 39498753 false) 
	#(439 4 #liftSecondValue: 42671106 false) 
	#(443 3 #reduceActionFornamedParameterType2: 42934274 false) 
	#(440 4 #reduceActionFornamedParameterTypes1: 42756097 false) 
	#(442 2 #reduceActionFor_____identifier__identifier___2: 42835970 false) 
	#(433 5 #liftSecondValue: 42029058 false) 
	#(435 2 #liftSecondValue: 42297345 false) 
	#(159 2 #liftSecondValue: 4415489 false) 
	#(196 1 #liftFirstValue: 8895489 false) 
	#(194 2 #liftFirstValue: 8843265 false) 
	#(193 6 #liftSecondValue: 8700930 false) 
	#(193 6 #liftSecondValue: 8700933 false) 
	#(427 6 #reduceActionFortypeAlias2: 41154562 false) 
	#(148 6 #reduceActionFortopLevelListDeclaration8: 2725896 false) 
	#(387 3 #reduceActionForbreakStatement1: 38123522 false) 
	#(388 3 #reduceActionForcontinueStatement1: 38199298 false) 
	#(385 3 #reduceActionForreturnStatement2: 37958658 false) 
	#(382 1 #liftFirstValue: 37719042 false) 
	#(380 3 #reduceActionFortryStatement1: 37412865 false) 
	#(380 3 #reduceActionFortryStatement3: 37412867 false) 
	#(389 3 #reduceActionForyieldStatement1: 38284289 false) 
	#(367 2 #reduceActionForinitializedVariableDeclaration1: 35760129 false) 
	#(368 3 #reduceActionForlocalFunctionDeclaration1: 35981313 false) 
	#(366 3 #reduceActionForlocalVariableDeclaration1: 35598337 false) 
	#(414 3 #reduceActionForuriTest2: 40239106 false) 
	#(413 5 #reduceActionForconfigurationUri1: 40131585 false) 
	#(172 5 #reduceActionForoptionalPositionalFormalParameters1: 5951490 false) 
	#(173 2 #liftSecondValue: 6036481 false) 
	#(183 4 #liftSecondValue: 7596037 false) 
	#(183 4 #liftSecondValue: 7596038 false) 
	#(175 5 #reduceActionFornamedFormalParameters1: 6139906 false) 
	#(176 2 #liftSecondValue: 6215681 false) 
	#(181 4 #reduceActionForfieldFormalParameter2: 7320578 false) 
	#(179 4 #reduceActionForfunctionFormalParameter5: 6946822 false) 
	#(179 4 #reduceActionForfunctionFormalParameter7: 6946823 false) 
	#(181 4 #reduceActionForfieldFormalParameter4: 7320580 false) 
	#(179 4 #reduceActionForfunctionFormalParameter3: 6946820 false) 
	#(269 5 #reduceActionForfunctionPrimaryBody3: 21199873 false) 
	#(371 3 #reduceActionForforLoopParts3: 36403204 false) 
	#(371 3 #reduceActionForforLoopParts5: 36403205 false) 
	#(268 5 #reduceActionForfunctionPrimaryBody3: 21125121 false) 
	#(352 4 #reduceActionForfunctionPrimaryBody3: 33495043 false) 
	#(292 3 #liftFirstValue: 23815171 false) 
	#(277 3 #reduceActionForfunctionPrimaryBody3: 22063106 false) 
	#(425 2 #liftSecondValue: 41055233 false) 
	#(202 2 #reduceActionFordeclaration32: 9623584 false) 
	#(202 2 #liftSecondValue: 9623563 false) 
	#(202 2 #liftSecondValue: 9623571 false) 
	#(202 2 #liftSecondValue: 9623557 false) 
	#(202 2 #liftSecondValue: 9623560 false) 
	#(202 2 #liftSecondValue: 9623555 false) 
	#(202 2 #liftSecondValue: 9623553 false) 
	#(202 2 #liftSecondValue: 9623554 false) 
	#(201 2 #reduceActionFormethodSignature4: 9179140 false) 
	#(201 2 #reduceActionFormethodSignature6: 9179142 false) 
	#(201 2 #reduceActionFormethodSignature8: 9179144 false) 
	#(202 2 #reduceActionFordeclaration34: 9623586 false) 
	#(191 2 #reduceActionForclassMemberDefinition1: 8359937 false) 
	#(191 2 #reduceActionForclassMemberDefinition2: 8359938 false) 
	#(202 2 #reduceActionFordeclaration43: 9623595 false) 
	#(202 2 #reduceActionFordeclaration44: 9623596 false) 
	#(201 2 #reduceActionFormethodSignature1: 9179137 false) 
	#(212 2 #reduceActionForconstructorSignature1: 12231681 false) 
	#(202 2 #reduceActionFordeclaration40: 9623592 false) 
	#(202 2 #reduceActionFordeclaration41: 9623593 false) 
	#(185 7 #reduceActionForclassDeclaration7: 7790599 false) 
	#(185 7 #reduceActionForclassDeclaration6: 7790598 false) 
	#(185 7 #reduceActionForclassDeclaration4: 7790596 false) 
	#(226 2 #liftSecondValue: 14071809 false) 
	#(228 2 #liftSecondValue: 14105601 false) 
	#(225 7 #liftSecondValue: 13965313 false) 
	#(185 7 #reduceActionForclassDeclaration13: 7790605 false) 
	#(185 7 #reduceActionForclassDeclaration11: 7790603 false) 
	#(185 7 #reduceActionForclassDeclaration10: 7790602 false) 
	#(200 1 #liftFirstValue: 9113601 false) 
	#(198 2 #liftFirstValue: 9057281 false) 
	#(197 7 #liftSecondValue: 8956930 false) 
	#(197 7 #liftSecondValue: 8956931 false) 
	#(440 5 #reduceActionFornamedParameterTypes1: 42756098 false) 
	#(441 2 #liftSecondValue: 42835969 false) 
	#(148 7 #reduceActionFortopLevelListDeclaration10: 2725898 false) 
	#(193 7 #liftSecondValue: 8700931 false) 
	#(193 7 #liftSecondValue: 8700934 false) 
	#(392 4 #reduceActionForassertion1: 38566913 false) 
	#(384 2 #reduceActionForfinallyPart1: 37889025 false) 
	#(382 2 #liftFirstValue: 37719041 false) 
	#(380 4 #reduceActionFortryStatement2: 37412866 false) 
	#(381 2 #reduceActionForonPart1: 37557249 false) 
	#(390 4 #reduceActionForyieldEachStatement1: 38377473 false) 
	#(181 5 #reduceActionForfieldFormalParameter2: 7320579 false) 
	#(179 5 #reduceActionForfunctionFormalParameter7: 6946824 false) 
	#(181 5 #reduceActionForfieldFormalParameter5: 7320581 false) 
	#(371 4 #reduceActionForforLoopParts1: 36403201 false) 
	#(371 4 #reduceActionForforLoopParts1: 36403202 false) 
	#(371 4 #reduceActionForforLoopParts5: 36403206 false) 
	#(269 6 #reduceActionForforElement2: 21199874 false) 
	#(223 3 #reduceActionForconstantConstructorSignature1: 13652993 false) 
	#(202 3 #reduceActionFordeclaration33: 9623585 false) 
	#(202 3 #reduceActionFordeclaration16: 9623568 false) 
	#(202 3 #reduceActionFordeclaration30: 9623582 false) 
	#(202 3 #reduceActionForfunctionPrimaryBody3: 9623564 false) 
	#(202 3 #reduceActionForfunctionPrimaryBody3: 9623558 false) 
	#(202 3 #reduceActionForfunctionPrimaryBody3: 9623561 false) 
	#(202 3 #reduceActionFordeclaration13: 9623565 false) 
	#(221 3 #reduceActionForfactoryConstructorSignature1: 13242369 false) 
	#(202 3 #reduceActionFordeclaration35: 9623587 false) 
	#(202 3 #reduceActionFordeclaration30: 9623589 false) 
	#(207 3 #reduceActionForoperatorSignature1: 11581441 false) 
	#(202 3 #reduceActionFordeclaration22: 9623574 false) 
	#(202 3 #reduceActionFordeclaration22: 9623572 false) 
	#(202 3 #reduceActionFordeclaration30: 9623578 false) 
	#(217 0 #reduceActionFor_____identifier__identifier___1: 12697601 false) 
	#(218 1 #liftFirstValue: 12774404 false) 
	#(218 1 #liftFirstValue: 12774405 false) 
	#(213 3 #reduceActionForconstructorName1: 12372995 false) 
	#(213 3 #reduceActionForconstructorName2: 12372994 false) 
	#(185 8 #reduceActionForclassDeclaration8: 7790600 false) 
	#(225 8 #liftSecondValue: 13965314 false) 
	#(231 2 #liftFirstValue: 14110722 false) 
	#(232 5 #reduceActionForenumEntry3: 14173187 false) 
	#(225 8 #liftSecondValue: 13965317 false) 
	#(225 8 #liftSecondValue: 13965315 false) 
	#(225 8 #liftSecondValue: 13965321 false) 
	#(185 8 #reduceActionForclassDeclaration15: 7790607 false) 
	#(185 8 #reduceActionForclassDeclaration14: 7790606 false) 
	#(185 8 #reduceActionForclassDeclaration12: 7790604 false) 
	#(197 8 #liftSecondValue: 8956932 false) 
	#(193 8 #liftSecondValue: 8700932 false) 
	#(193 8 #liftSecondValue: 8700935 false) 
	#(392 5 #reduceActionForassertion1: 38566914 false) 
	#(370 5 #reduceActionForforStatement1: 36295681 false) 
	#(369 5 #reduceActionForifStatement1: 36132865 false) 
	#(376 0 #reduceActionFor_____identifier__identifier___1: 37038081 false) 
	#(381 3 #reduceActionForonPart2: 37557250 false) 
	#(373 5 #reduceActionForwhileStatement1: 36684801 false) 
	#(367 4 #reduceActionForinitializedVariableDeclaration2: 35760130 false) 
	#(181 6 #reduceActionForfieldFormalParameter5: 7320582 false) 
	#(268 7 #reduceActionForfunctionPrimaryBody3: 21125122 false) 
	#(221 4 #reduceActionForfactoryConstructorSignature2: 13242370 false) 
	#(202 4 #reduceActionFordeclaration16: 9623569 false) 
	#(202 4 #reduceActionFordeclaration28: 9623580 false) 
	#(202 4 #reduceActionFordeclaration31: 9623583 false) 
	#(202 4 #reduceActionFordeclaration15: 9623567 false) 
	#(202 4 #reduceActionFordeclaration14: 9623566 false) 
	#(202 4 #reduceActionFordeclaration36: 9623588 false) 
	#(202 4 #reduceActionFordeclaration23: 9623575 false) 
	#(202 4 #reduceActionFordeclaration23: 9623573 false) 
	#(202 4 #reduceActionFordeclaration24: 9623576 false) 
	#(202 4 #reduceActionFordeclaration31: 9623579 false) 
	#(218 2 #liftSecondValue: 12774401 false) 
	#(214 3 #reduceActionForredirection1: 12505089 false) 
	#(215 3 #reduceActionForinitializers1: 12625921 false) 
	#(207 4 #reduceActionForoperatorSignature2: 11581442 false) 
	#(230 2 #liftFirstValue: 14110721 false) 
	#(232 6 #reduceActionForenumEntry4: 14173188 false) 
	#(225 9 #liftSecondValue: 13965318 false) 
	#(225 9 #liftSecondValue: 13965319 false) 
	#(225 9 #liftSecondValue: 13965316 false) 
	#(225 9 #liftSecondValue: 13965322 false) 
	#(225 9 #liftSecondValue: 13965325 false) 
	#(225 9 #liftSecondValue: 13965323 false) 
	#(185 9 #reduceActionForclassDeclaration16: 7790608 false) 
	#(193 9 #liftSecondValue: 8700936 false) 
	#(392 6 #reduceActionForassertion3: 38566915 false) 
	#(383 4 #reduceActionForcatchPart1: 37775361 false) 
	#(381 4 #reduceActionForonPart3: 37557251 false) 
	#(370 6 #reduceActionForforStatement2: 36295682 false) 
	#(202 5 #reduceActionFordeclaration29: 9623581 false) 
	#(222 5 #reduceActionForredirectingFactoryConstructorSignature1: 13417473 false) 
	#(202 5 #reduceActionFordeclaration25: 9623577 false) 
	#(217 2 #reduceActionFor_____identifier__identifier___2: 12697602 false) 
	#(219 3 #reduceActionForfieldInitializer1: 12930049 false) 
	#(220 1 #reduceActionForinitializerExpression2: 13075458 false) 
	#(220 1 #reduceActionForinitializerExpression1: 13075457 false) 
	#(225 10 #liftSecondValue: 13965320 false) 
	#(225 10 #liftSecondValue: 13965326 false) 
	#(225 10 #liftSecondValue: 13965327 false) 
	#(225 10 #liftSecondValue: 13965324 false) 
	#(392 7 #reduceActionForassertion3: 38566916 false) 
	#(374 7 #reduceActionFordoStatement1: 36819969 false) 
	#(369 7 #reduceActionForifStatement2: 36132866 false) 
	#(375 7 #reduceActionForswitchStatement1: 36951041 false) 
	#(376 2 #reduceActionFor_____identifier__identifier___2: 37038082 false) 
	#(222 6 #reduceActionForredirectingFactoryConstructorSignature2: 13417474 false) 
	#(218 4 #reduceActionForforElement2: 12774403 false) 
	#(218 4 #reduceActionForfunctionPrimaryBody3: 12774402 false) 
	#(214 5 #reduceActionForredirection3: 12505091 false) 
	#(214 5 #reduceActionForredirection2: 12505090 false) 
	#(216 2 #liftSecondValue: 12697601 false) 
	#(225 11 #liftSecondValue: 13965328 false) 
	#(375 8 #reduceActionForswitchStatement2: 36951042 false) 
	#(383 6 #reduceActionForcatchPart2: 37775362 false) 
	#(219 5 #reduceActionForfieldInitializer2: 12930050 false) 
	#(378 3 #reduceActionFordefaultCase1: 37242881 false) 
	#(377 4 #reduceActionForswitchCase1: 37123073 false) 
	#(378 4 #reduceActionFordefaultCase2: 37242882 false) 
	#(377 5 #reduceActionForswitchCase2: 37123074 false)
	).
]

{ #category : #'generated-accessing' }
DartParser class >> scannerClass [
	^DartScanner
]

{ #category : #generated }
DartParser class >> startingStateForlibraryDefinition [

	^ 1
]

{ #category : #generated }
DartParser class >> symbolNames [

	^ #( '"!"' '"!="' '"#"' '"%"' '"%="' '"&"' '"&&"' '"&="' '"("' '")"'
	     '"*"' '"*="' '"+"' '"++"' '"+="' '","' '"-"' '"--"' '"-="'
	     '"."' '".."' '"..."' '"...?"' '"/"' '"/="' '":"' '";"' '"<"'
	     '"<<"' '"<<="' '"<="' '"="' '"=="' '"=>"' '">"' '"?"' '"?."'
	     '"?.."' '"??"' '"??="' '"@"' '"["' '"]"' '"^"' '"^="' '"|"'
	     '"|="' '"||"' '"~"' '"~/"' '"~/="' '<ASSERT>' '<break>'
	     '<case>' '<catch>' '<clazz>' '<const>' '<continue>' '<default>'
	     '<do>' '<else>' '<enum>' '<extends>' '<false>' '<final>'
	     '<finally>' '<for>' '<if>' '<in>' '<is>' '<new>' '<null>'
	     '<rethrow>' '<return>' '<super>' '<switch>' '<this>' '<throw>'
	     '<true>' '<try>' '<var>' '<void>' '<while>' '<with>' '<abstract>'
	     '<as>' '<covariant>' '<deferred>' '<dynamic>' '<export>'
	     '<extension>' '<external>' '<factory>' '<function>' '<get>'
	     '<implements>' '<import>' '<interface>' '<late>' '<library>'
	     '<operator>' '<mixin>' '<part>' '<required>' '<set>' '<static>'
	     '<typedef>' '<await>' '<yield>' '<async>' '<hide>' '<of>' '<on>'
	     '<show>' '<sync>' '<number>' '<HEX_NUMBER>' '<RAW_SINGLE_LINE_STRING>'
	     '<RAW_MULTI_LINE_STRING>' '<SINGLE_LINE_STRING_SQ_BEGIN_END>'
	     '<SINGLE_LINE_STRING_SQ_BEGIN_MID>'
	     '<SINGLE_LINE_STRING_SQ_MID_END>'
	     '<SINGLE_LINE_STRING_DQ_BEGIN_END>'
	     '<SINGLE_LINE_STRING_DQ_BEGIN_MID>'
	     '<SINGLE_LINE_STRING_DQ_MID_END>'
	     '<SINGLE_LINE_STRING_MID_MID>' '<MULTI_LINE_STRING_SQ_BEGIN_END>'
	     '<MULTI_LINE_STRING_SQ_BEGIN_MID>'
	     '<MULTI_LINE_STRING_SQ_MID_END>'
	     '<MULTI_LINE_STRING_DQ_BEGIN_END>'
	     '<MULTI_LINE_STRING_DQ_BEGIN_MID>'
	     '<MULTI_LINE_STRING_DQ_MID_END>'
	     '<MULTI_LINE_STRING_MID_MID>' '<lbrace>' '<rbrace>' '<SCRIPT_TAG>'
	     '<IDENTIFIER>' '<FEFF>' '<whitespace>' '<comment>' 'B e g i n'
	     'libraryDefinition' 'importOrExport*' 'partDirective*'
	     '(metadata ''metadata'' topLevelDefinition ''topLevelDefinition'')'
	     '(metadata ''metadata'' topLevelDefinition ''topLevelDefinition'')*'
	     'topLevelDefinition' 'topLevelListDeclaration'
	     '("," initializedIdentifier ''initializedIdentifier'')'
	     '("," initializedIdentifier ''initializedIdentifier'')*'
	     'topLevelExternalDeclaration' 'functionDeclaration'
	     'declaredIdentifier' 'finalConstVarOrType' 'finalVarOrType'
	     'varOrType' 'initializedIdentifier' 'initializedIdentifierList'
	     '("," initializedIdentifier ''nextInitializedIdentifier'')'
	     '("," initializedIdentifier ''nextInitializedIdentifier'')*'
	     'functionSignature' 'functionBodyPrefix' 'functionBody'
	     'block' 'formalParameterPart' 'formalParameterList'
	     'emptyFormalParameterList' 'normalFormalParameters'
	     '("," normalFormalParameter ''nextParameter'')'
	     '("," normalFormalParameter ''nextParameter'')*'
	     'optionalOrNamedFormalParameters'
	     'optionalPositionalFormalParameters'
	     '("," defaultFormalParameter ''nextParameter'')'
	     '("," defaultFormalParameter ''nextParameter'')*'
	     'namedFormalParameters' '("," defaultNamedParameter ''nextParameter'')'
	     '("," defaultNamedParameter ''nextParameter'')*'
	     'normalFormalParameter' 'functionFormalParameter'
	     'simpleFormalParameter' 'fieldFormalParameter'
	     'defaultFormalParameter' 'defaultNamedParameter'
	     'typeWithParameters' 'classDeclaration' '(metadata ''metadata'' classMemberDefinition ''classMemberDefinition'')'
	     '(metadata ''metadata'' classMemberDefinition ''classMemberDefinition'')*'
	     'superclass' 'mixins' 'interfaces' 'classMemberDefinition'
	     'mixinApplicationClass' 'mixinDeclaration' '(metadata mixinMemberDefinition)'
	     '(metadata mixinMemberDefinition)*'
	     'mixinMemberDefinition' 'extensionDeclaration'
	     '(metadata extensionMemberDefinition)'
	     '(metadata extensionMemberDefinition)*'
	     'extensionMemberDefinition' 'methodSignature' 'declaration'
	     'staticFinalDeclarationList' '("," staticFinalDeclaration ''nextStaticFinalDeclaration'')'
	     '("," staticFinalDeclaration ''nextStaticFinalDeclaration'')*'
	     'staticFinalDeclaration' 'operatorSignature' 'operator'
	     'binaryOperator' 'getterSignature' 'setterSignature'
	     'constructorSignature' 'constructorName' 'redirection'
	     'initializers' '("," initializerListEntry ''InitializerListEntry'')'
	     '("," initializerListEntry ''InitializerListEntry'')*'
	     'initializerListEntry' 'fieldInitializer' 'initializerExpression'
	     'factoryConstructorSignature' 'redirectingFactoryConstructorSignature'
	     'constantConstructorSignature' 'mixinApplication'
	     'enumType' '("," enumEntry)' '("," enumEntry)*'
	     '(";" (metadata classMemberDefinition)*)'
	     '(";" (metadata classMemberDefinition)*)?'
	     '(metadata classMemberDefinition)'
	     '(metadata classMemberDefinition)*'
	     'enumEntry' 'typeParameter' 'typeParameters' '("," typeParameter ''nextTypeParameter'')'
	     '("," typeParameter ''nextTypeParameter'')*'
	     'metadata' '("@" metadatum)' '("@" metadatum)*'
	     'metadatum' 'expression' 'assignableExpressionWithOperator'
	     'expressionWithoutCascade' 'assignableExpressionWithoutCascadeWithOperator'
	     'expressionList' '("," expression ''nextExpression'')'
	     '("," expression ''nextExpression'')*'
	     'primary' 'constructorInvocation' 'literal' 'nullLiteral'
	     'numericLiteral' 'booleanLiteral' 'stringLiteral'
	     '(multiLineString ''multiLineString'' | singleLineString ''singleLineString'')'
	     '(multiLineString ''multiLineString'' | singleLineString ''singleLineString'')+'
	     'stringLiteralWithoutInterpolation'
	     'singleStringWithoutInterpolation+'
	     'setOrMapLiteral' 'listLiteral' 'elements' '("," element ''nextElements'')'
	     '("," element ''nextElements'')*'
	     'element' 'expressionElement' 'mapElement' 'spreadElement'
	     'ifElement' 'forElement' 'constructorTearoff'
	     'throwExpression' 'throwExpressionWithoutCascade'
	     'functionExpression' 'functionExpressionBody'
	     'functionExpressionBodyPrefix' 'functionExpressionWithoutCascade'
	     'functionExpressionWithoutCascadeBody'
	     'functionPrimary' 'functionPrimaryBody' 'functionPrimaryBodyPrefix'
	     'thisExpression' 'newExpression' 'constObjectExpression'
	     'arguments' 'argumentList' '("," namedArgument ''namedArgument'')'
	     '("," namedArgument ''namedArgument'')*'
	     'namedArgument' 'cascade' 'cascadeSection' 'cascadeSelector'
	     'cascadeSectionTail' 'selector*' 'cascadeAssignment'
	     'assignmentOperator' 'compoundAssignmentOperator'
	     'conditionalExpression' 'ifNullExpression' '("??" logicalOrExpression ''logicalOrExpression'')'
	     '("??" logicalOrExpression ''logicalOrExpression'')+'
	     'logicalOrExpression' '("||" logicalAndExpression ''logicalAndExpression'')'
	     '("||" logicalAndExpression ''logicalAndExpression'')+'
	     'logicalAndExpression' '("&&" equalityExpression ''equalityExpression'')'
	     '("&&" equalityExpression ''equalityExpression'')+'
	     'equalityExpression' '(equalityOperator ''equalityOperator'' relationalExpression ''relationalExpression'')'
	     '(equalityOperator ''equalityOperator'' relationalExpression ''relationalExpression'')+'
	     'equalityOperator' 'relationalExpression' '(typeTest ''typeTest'' | typeCast ''typeCast'' | relationalOperator ''relationalOperator'' bitwiseOrExpression ''bitwiseOrExpression'')'
	     '(typeTest ''typeTest'' | typeCast ''typeCast'' | relationalOperator ''relationalOperator'' bitwiseOrExpression ''bitwiseOrExpression'')+'
	     'relationalOperator' 'bitwiseOrExpression' '("|" bitwiseXorExpression ''bitwiseXorExpression'')'
	     '("|" bitwiseXorExpression ''bitwiseXorExpression'')+'
	     'bitwiseXorExpression' '( "^" bitwiseAndExpression ''bitwiseAndExpression'')'
	     '( "^" bitwiseAndExpression ''bitwiseAndExpression'')+'
	     'bitwiseAndExpression' '("&" shiftExpression ''shiftExpression'')'
	     '("&" shiftExpression ''shiftExpression'')+'
	     'bitwiseOperator' 'shiftExpression' '( shiftOperator ''shiftOperator'' additiveExpression ''additiveExpression'')'
	     '( shiftOperator ''shiftOperator'' additiveExpression ''additiveExpression'')+'
	     'shiftOperator' 'additiveExpression' '(additiveOperator ''additiveOperator'' multiplicativeExpression ''multiplicativeExpression'')'
	     '(additiveOperator ''additiveOperator'' multiplicativeExpression ''multiplicativeExpression'')+'
	     'additiveOperator' 'multiplicativeExpression'
	     '(multiplicativeOperator ''multiplicativeOperator'' unaryExpression ''unaryExpression'')'
	     '(multiplicativeOperator ''multiplicativeOperator'' unaryExpression ''unaryExpression'')+'
	     'multiplicativeOperator' 'unaryExpression' 'prefixOperator'
	     'minusOperator' 'negationOperator' 'tildeOperator'
	     'awaitExpression' 'postfixExpression' 'selector ''selector''*'
	     'postfixOperator' 'selector' 'argumentPart' 'incrementOperator'
	     'assignableExpression' 'assignableSelectorPart'
	     'unconditionalAssignableSelector'
	     'assignableSelector' 'identifierNotFUNCTION'
	     'identifier' 'qualifiedName' 'typeIdentifier' 'typeTest'
	     'isOperator' 'typeCast' 'asOperator' 'statements' 'statement'
	     'label ''label''*' 'nonLabelledStatement' 'expressionStatement'
	     'localVariableDeclaration' 'initializedVariableDeclaration'
	     'localFunctionDeclaration' 'ifStatement' 'forStatement'
	     'forLoopParts' 'forInitializerStatement'
	     'whileStatement' 'doStatement' 'switchStatement'
	     'switchCase ''cases''*' 'switchCase' 'defaultCase' 'rethrowStatement'
	     'tryStatement' 'onPart' 'onParts' 'catchPart' 'finallyPart'
	     'returnStatement' 'label' 'breakStatement' 'continueStatement'
	     'yieldStatement' 'yieldEachStatement' 'assertStatement'
	     'assertion' 'libraryName' 'dottedIdentifierList'
	     '("." identifier ''identifier'')'
	     '("." identifier ''identifier'')*'
	     'importOrExport' 'libraryImport' 'importSpecification'
	     'combinator*' 'combinator' 'identifierList' '("," identifier ''nextIdentifier'')'
	     '("," identifier ''nextIdentifier'')*'
	     'libraryExport' 'partDirective' 'partHeader' 'partDeclaration'
	     'topLevelDefinition*' 'uri' 'configurableUri' 'configurationUri ''configurationUri''*'
	     'configurationUri' 'uriTest' 'type' 'typeNotVoid' 'typeNotFunction'
	     'typeNotVoidNotFunction' 'typeName' 'typeArguments'
	     'typeList' '("," type ''nextType'')' '("," type ''nextType'')*'
	     'typeNotVoidNotFunctionList' '("," typeNotVoidNotFunction ''nextTypeNotVoidNotFunction'')'
	     '("," typeNotVoidNotFunction ''nextTypeNotVoidNotFunction'')*'
	     'typeAlias' 'functionTypeAlias' 'functionPrefix'
	     'functionTypeTail' 'functionTypeTails' 'functionType'
	     'parameterTypeList' 'normalParameterTypes'
	     '("," normalParameterType ''nextNormalParameterType'')'
	     '("," normalParameterType ''nextNormalParameterType'')*'
	     'normalParameterType' 'optionalParameterTypes'
	     'optionalPositionalParameterTypes'
	     'namedParameterTypes' '("," namedParameterType ''nextNamedParameterType'')'
	     '("," namedParameterType ''nextNamedParameterType'')*'
	     'namedParameterType' 'typedIdentifier' 'constructorDesignation'
	     'symbolLiteral' 'singleStringWithoutInterpolation'
	     'singleLineString' '(<SINGLE_LINE_STRING_MID_MID> expression ''nextExpressions'')'
	     '(<SINGLE_LINE_STRING_MID_MID> expression ''nextExpressions'')*'
	     'multiLineString' '(<MULTI_LINE_STRING_MID_MID> expression ''nextExpressions'')'
	     '(<MULTI_LINE_STRING_MID_MID> expression ''nextExpressions'')*'
	     'reservedWord' 'builtInIdentifier' 'E O F' 'error' )
]

{ #category : #generated }
DartParser class >> symbolTypes [

	^ #( #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #DartLibraryDefinitionNode #DartLibraryDefinitionNode
	     #OrderedCollection nil #OrderedCollection #OrderedCollection
	     #OrderedCollection #DartTopLevelListDeclarationNode
	     #DartInitializedIdentifierNode #OrderedCollection
	     #DartProgramNode #DartFunctionDeclarationNode
	     #DartDeclaredIdentifierNode #Object #Object #Object #DartInitializedIdentifierNode
	     #DartInitializedIdentifierListNode
	     #DartInitializedIdentifierNode #OrderedCollection
	     #DartFunctionSignatureNode #SmaCCToken #DartProgramNode
	     #DartBlockNode #DartFormalParameterPartNode
	     #DartProgramNode #DartEmptyFormalParameterListNode
	     #DartNormalFormalParametersNode #DartNormalFormalParameterNode
	     #OrderedCollection #DartProgramNode #DartOptionalPositionalFormalParametersNode
	     #DartNormalFormalParameterNode #OrderedCollection
	     #DartNamedFormalParametersNode #DartNormalFormalParameterNode
	     #OrderedCollection #DartNormalFormalParameterNode
	     #DartFunctionFormalParameterNode
	     #DartSimpleFormalParameterNode #DartFieldFormalParameterNode
	     #DartNormalFormalParameterNode #DartNormalFormalParameterNode
	     #DartTypeNode #DartClassDeclarationNode
	     #OrderedCollection #OrderedCollection #Object #DartTypeNotVoidNotFunctionListNode
	     #DartTypeNotVoidNotFunctionListNode
	     #DartClassMemberDefinitionNode #DartMixinApplicationClassNode
	     #SmaCCToken nil nil #DartClassMemberDefinitionNode
	     #DartProgramNode nil nil #DartClassMemberDefinitionNode
	     #DartProgramNode #DartProgramNode #DartStaticFinalDeclarationListNode
	     #DartStaticFinalDeclarationNode #OrderedCollection
	     #DartStaticFinalDeclarationNode #DartOperatorSignatureNode
	     #SmaCCToken #SmaCCToken #DartGetterSignatureNode
	     #DartSetterSignatureNode #DartConstructorSignatureNode
	     #DartConstructorNameNode #DartRedirectionNode
	     #DartInitializersNode #Object #OrderedCollection
	     #Object #DartFieldInitializerNode #DartInitializerExpressionNode
	     #DartFactoryConstructorSignatureNode
	     #DartRedirectingFactoryConstructorSignatureNode
	     #DartConstantConstructorSignatureNode
	     #DartMixinApplicationNode #SmaCCToken #DartEnumEntryNode
	     nil nil nil nil nil #DartEnumEntryNode #DartTypeParameterNode
	     #DartTypeParametersNode #DartTypeParameterNode
	     #OrderedCollection nil #DartProgramNode nil #DartProgramNode
	     #OrderedCollection #DartAssignableExpressionWithOperatorNode
	     #DartProgramNode #DartAssignableExpressionWithoutCascadeWithOperatorNode
	     #DartExpressionListNode #OrderedCollection #OrderedCollection
	     #DartProgramNode #DartConstructorInvocationNode
	     #DartProgramNode #DartNullLiteralNode #DartNumericLiteralNode
	     #DartBooleanLiteralNode #DartStringLiteralNode
	     #OrderedCollection #OrderedCollection #SmaCCToken #SmaCCToken
	     #DartSetOrMapLiteralNode #DartListLiteralNode
	     #DartElementsNode #DartElementNode #OrderedCollection
	     #DartElementNode #DartExpressionElementNode
	     #OrderedCollection #OrderedCollection #OrderedCollection
	     #OrderedCollection #DartTypeNameNode #DartThrowExpressionNode
	     #DartProgramNode #DartFunctionExpressionNode
	     #OrderedCollection #SmaCCToken #DartFormalParameterPartNode
	     #DartProgramNode #DartFormalParameterPartNode
	     #DartBlockNode #SmaCCToken #DartThisExpressionNode
	     #DartNewExpressionNode #DartConstObjectExpressionNode
	     #Object #DartArgumentListNode #DartNamedArgumentNode
	     #OrderedCollection #DartNamedArgumentNode #DartCascadeNode
	     #Object #Object #DartAssignmentOperatorNode
	     nil #DartAssignmentOperatorNode #DartAssignmentOperatorNode
	     #SmaCCToken #DartProgramNode #DartProgramNode #DartProgramNode
	     #OrderedCollection #DartProgramNode #DartProgramNode
	     #OrderedCollection #DartProgramNode #DartProgramNode
	     #OrderedCollection #DartProgramNode #OrderedCollection
	     #OrderedCollection #SmaCCToken #DartProgramNode #OrderedCollection
	     #OrderedCollection #SmaCCToken #DartProgramNode #DartProgramNode
	     #OrderedCollection #DartProgramNode #DartProgramNode
	     #OrderedCollection #DartProgramNode #DartProgramNode
	     #OrderedCollection #SmaCCToken #DartProgramNode #OrderedCollection
	     #OrderedCollection #SmaCCToken #DartProgramNode #OrderedCollection
	     #OrderedCollection #SmaCCToken #DartProgramNode #OrderedCollection
	     #OrderedCollection #SmaCCToken #DartProgramNode #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #DartAwaitExpressionNode
	     #DartPostfixExpressionNode #OrderedCollection #SmaCCToken
	     #Object #Object #SmaCCToken #DartAssignableExpressionNode
	     nil #Object #Object #SmaCCToken #DartIdentifierNode
	     #DartQualifiedNameNode #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #DartStatementsNode #DartSingleStatementNode
	     #OrderedCollection #Object #Object #DartLocalVariableDeclarationNode
	     #DartInitializedVariableDeclarationNode
	     #DartLocalFunctionDeclarationNode
	     #DartIfStatementNode #DartForStatementNode #OrderedCollection
	     #OrderedCollection #DartWhileStatementNode
	     #DartDoStatementNode #DartSwitchStatementNode
	     #OrderedCollection #DartSwitchCaseNode #DartDefaultCaseNode
	     #DartRethrowStatementNode #DartTryStatementNode
	     #DartOnPartNode #DartOnPartNode #DartCatchPartNode
	     #DartFinallyPartNode #DartReturnStatementNode
	     #DartLabelNode #DartBreakStatementNode #DartContinueStatementNode
	     #DartYieldStatementNode #DartYieldEachStatementNode
	     #DartAssertStatementNode #DartAssertionNode #DartLibraryNameNode
	     #DartDottedIdentifierListNode #DartIdentifierNode
	     #OrderedCollection #OrderedCollection #DartLibraryImportNode
	     #DartImportSpecificationNode nil #DartIdentifierListNode
	     #DartIdentifierListNode #DartIdentifierNode #OrderedCollection
	     #DartExportDeclarationNode #DartPartDirectiveNode
	     #DartPartHeaderNode #DartPartDeclarationNode
	     #OrderedCollection #DartUriNode #DartConfigurableUriNode
	     #OrderedCollection #DartConfigurationUriNode
	     #DartUriTestNode #DartTypeNode #Object #Object #Object #DartTypeNameNode
	     #DartTypeListNode #DartTypeListNode #DartTypeNode #OrderedCollection
	     #DartTypeNotVoidNotFunctionListNode
	     #Object #OrderedCollection #DartProgramNode #DartFunctionTypeAliasNode
	     #DartProgramNode #DartFunctionTypeTailNode
	     #DartProgramNode #DartProgramNode #Object #DartNormalParameterTypesNode
	     #DartNormalParameterTypeNode #OrderedCollection
	     #DartNormalParameterTypeNode #DartProgramNode #DartNormalParameterTypesNode
	     #DartNamedParameterTypesNode #DartNamedParameterTypeNode
	     #OrderedCollection #DartNamedParameterTypeNode
	     #DartTypedIdentifierNode #Object #DartSymbolLiteralNode
	     #SmaCCToken #DartSingleLineStringNode #OrderedCollection
	     #OrderedCollection #DartMultiLineStringNode
	     #OrderedCollection #OrderedCollection #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCErrorNode )
]

{ #category : #generated }
DartParser class >> transitionTable [
^#(
#[1 0 7 0 41 0 6 0 56 0 6 0 57 0 6 0 62 0 6 0 65 0 6 0 81 0 6 0 82 0 6 0 85 0 6 0 86 0 6 0 87 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 93 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 97 0 6 0 98 0 6 0 99 0 7 0 100 0 6 0 101 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 110 0 6 0 111 0 6 0 112 0 6 0 113 0 6 0 114 0 6 0 115 0 9 0 136 0 6 0 137 0 13 0 138 0 17 0 142 0 21 0 143 0 25 0 237 0 29 0 239 0 33 1 137 0 6 1 200] 
#[1 0 7 0 41 0 6 0 56 0 6 0 57 0 6 0 62 0 6 0 65 0 6 0 81 0 6 0 82 0 6 0 85 0 6 0 86 0 6 0 87 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 93 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 97 0 6 0 98 0 6 0 99 0 7 0 100 0 6 0 101 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 110 0 6 0 111 0 6 0 112 0 6 0 113 0 6 0 114 0 6 0 115 0 6 0 137 0 37 0 143 0 25 0 237 0 29 0 239 0 41 1 137 0 6 1 200] 
#[1 0 7 0 41 0 6 0 56 0 6 0 57 0 6 0 62 0 6 0 65 0 6 0 81 0 6 0 82 0 6 0 85 0 6 0 86 0 6 0 87 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 93 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 97 0 6 0 98 0 6 0 99 0 7 0 100 0 6 0 101 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 110 0 6 0 111 0 6 0 112 0 6 0 113 0 6 0 114 0 6 0 115 0 45 0 136 0 6 0 137 0 49 0 143 0 25 0 237 0 29 0 239 0 53 1 137 0 6 1 200] 
#[0 0 0 1 200] 
#[1 0 11 0 41 0 14 0 56 0 14 0 57 0 14 0 62 0 14 0 65 0 14 0 81 0 14 0 82 0 14 0 85 0 14 0 86 0 14 0 87 0 14 0 88 0 14 0 89 0 11 0 90 0 14 0 91 0 14 0 92 0 14 0 93 0 14 0 94 0 14 0 95 0 14 0 96 0 11 0 97 0 14 0 98 0 14 0 99 0 14 0 100 0 14 0 101 0 14 0 102 0 14 0 103 0 14 0 104 0 14 0 105 0 14 0 106 0 14 0 107 0 14 0 108 0 14 0 109 0 14 0 110 0 14 0 111 0 14 0 112 0 14 0 113 0 14 0 114 0 14 0 115 0 14 0 137 0 57 0 144 0 61 0 237 0 29 0 239 0 65 1 141 0 69 1 142 0 73 1 149 0 14 1 200] 
#[0 0 77 0 100] 
#[1 0 81 0 41 0 18 0 56 0 18 0 57 0 18 0 62 0 18 0 65 0 18 0 77 0 18 0 81 0 18 0 82 0 18 0 85 0 18 0 86 0 18 0 87 0 18 0 88 0 18 0 89 0 18 0 90 0 18 0 91 0 18 0 92 0 18 0 93 0 18 0 94 0 18 0 95 0 18 0 96 0 18 0 97 0 18 0 98 0 18 0 99 0 18 0 100 0 18 0 101 0 18 0 102 0 18 0 103 0 18 0 104 0 18 0 105 0 18 0 106 0 18 0 107 0 18 0 108 0 18 0 109 0 18 0 110 0 18 0 111 0 18 0 112 0 18 0 113 0 18 0 114 0 18 0 115 0 18 0 137 0 85 0 238] 
#[1 0 6 0 41 0 6 0 56 0 6 0 57 0 6 0 62 0 6 0 65 0 6 0 81 0 6 0 82 0 6 0 85 0 6 0 86 0 6 0 87 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 93 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 97 0 6 0 98 0 6 0 99 0 6 0 100 0 6 0 101 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 110 0 6 0 111 0 6 0 112 0 6 0 113 0 6 0 114 0 6 0 115 0 6 0 137 0 89 0 143 0 6 1 200] 
#[1 0 11 0 41 0 14 0 56 0 14 0 57 0 14 0 62 0 14 0 65 0 14 0 81 0 14 0 82 0 14 0 85 0 14 0 86 0 14 0 87 0 14 0 88 0 14 0 89 0 11 0 90 0 14 0 91 0 14 0 92 0 14 0 93 0 14 0 94 0 14 0 95 0 14 0 96 0 11 0 97 0 14 0 98 0 14 0 99 0 14 0 100 0 14 0 101 0 14 0 102 0 14 0 103 0 14 0 104 0 14 0 105 0 14 0 106 0 14 0 107 0 14 0 108 0 14 0 109 0 14 0 110 0 14 0 111 0 14 0 112 0 14 0 113 0 14 0 114 0 14 0 115 0 14 0 137 0 93 0 144 0 61 0 237 0 29 0 239 0 65 1 141 0 69 1 142 0 73 1 149 0 14 1 200] 
#[1 0 6 0 41 0 6 0 56 0 6 0 57 0 6 0 62 0 6 0 65 0 6 0 81 0 6 0 82 0 6 0 85 0 6 0 86 0 6 0 87 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 93 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 97 0 6 0 98 0 6 0 99 0 6 0 100 0 6 0 101 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 110 0 6 0 111 0 6 0 112 0 6 0 113 0 6 0 114 0 6 0 115 0 6 0 137 0 97 0 143 0 6 1 200] 
#[1 0 7 0 41 0 6 0 56 0 6 0 57 0 6 0 62 0 6 0 65 0 6 0 81 0 6 0 82 0 6 0 85 0 6 0 86 0 6 0 87 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 93 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 97 0 6 0 98 0 6 0 99 0 7 0 100 0 6 0 101 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 110 0 6 0 111 0 6 0 112 0 6 0 113 0 6 0 114 0 6 0 115 0 6 0 137 0 101 0 143 0 25 0 237 0 29 0 239 0 105 1 137 0 6 1 200] 
#[1 0 11 0 41 0 14 0 56 0 14 0 57 0 14 0 62 0 14 0 65 0 14 0 81 0 14 0 82 0 14 0 85 0 14 0 86 0 14 0 87 0 14 0 88 0 14 0 89 0 11 0 90 0 14 0 91 0 14 0 92 0 14 0 93 0 14 0 94 0 14 0 95 0 14 0 96 0 11 0 97 0 14 0 98 0 14 0 99 0 14 0 100 0 14 0 101 0 14 0 102 0 14 0 103 0 14 0 104 0 14 0 105 0 14 0 106 0 14 0 107 0 14 0 108 0 14 0 109 0 14 0 110 0 14 0 111 0 14 0 112 0 14 0 113 0 14 0 114 0 14 0 115 0 14 0 137 0 109 0 144 0 61 0 237 0 29 0 239 0 65 1 141 0 69 1 142 0 73 1 149 0 14 1 200] 
#[1 0 6 0 41 0 6 0 56 0 6 0 57 0 6 0 62 0 6 0 65 0 6 0 81 0 6 0 82 0 6 0 85 0 6 0 86 0 6 0 87 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 93 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 97 0 6 0 98 0 6 0 99 0 6 0 100 0 6 0 101 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 110 0 6 0 111 0 6 0 112 0 6 0 113 0 6 0 114 0 6 0 115 0 6 0 137 0 113 0 143 0 6 1 200] 
#[1 0 15 0 41 0 22 0 56 0 22 0 57 0 22 0 62 0 22 0 65 0 22 0 81 0 22 0 82 0 22 0 85 0 22 0 86 0 22 0 87 0 22 0 88 0 22 0 89 0 22 0 90 0 22 0 91 0 22 0 92 0 22 0 93 0 22 0 94 0 22 0 95 0 22 0 96 0 22 0 97 0 22 0 98 0 22 0 99 0 22 0 100 0 22 0 101 0 22 0 102 0 15 0 103 0 22 0 104 0 22 0 105 0 22 0 106 0 22 0 107 0 22 0 108 0 22 0 109 0 22 0 110 0 22 0 111 0 22 0 112 0 22 0 113 0 22 0 114 0 22 0 115 0 22 0 137 0 117 0 146 0 121 0 237 0 29 0 239 0 125 1 150 0 22 1 200] 
#[1 0 129 0 90 0 133 0 97 0 137 1 143] 
#[0 0 26 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 0 30 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 0 34 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 1 17 1 98 1 21 1 138 1 13 1 199] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 1 69 0 240 1 13 1 97 1 69 1 98 1 77 1 99 1 81 1 100 1 85 1 163 1 89 1 189 1 13 1 199] 
#[0 0 38 0 41 0 56 0 57 0 62 0 65 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[1 0 11 0 41 0 14 0 56 0 14 0 57 0 14 0 62 0 14 0 65 0 14 0 81 0 14 0 82 0 14 0 85 0 14 0 86 0 14 0 87 0 14 0 88 0 14 0 89 0 11 0 90 0 14 0 91 0 14 0 92 0 14 0 93 0 14 0 94 0 14 0 95 0 14 0 96 0 11 0 97 0 14 0 98 0 14 0 99 0 14 0 100 0 14 0 101 0 14 0 102 0 14 0 103 0 14 0 104 0 14 0 105 0 14 0 106 0 14 0 107 0 14 0 108 0 14 0 109 0 14 0 110 0 14 0 111 0 14 0 112 0 14 0 113 0 14 0 114 0 14 0 115 0 14 0 137 1 93 0 144 0 61 0 237 0 29 0 239 0 65 1 141 0 69 1 142 0 73 1 149 0 14 1 200] 
#[1 0 15 0 41 0 22 0 56 0 22 0 57 0 22 0 62 0 22 0 65 0 22 0 81 0 22 0 82 0 22 0 85 0 22 0 86 0 22 0 87 0 22 0 88 0 22 0 89 0 22 0 90 0 22 0 91 0 22 0 92 0 22 0 93 0 22 0 94 0 22 0 95 0 22 0 96 0 22 0 97 0 22 0 98 0 22 0 99 0 22 0 100 0 22 0 101 0 22 0 102 0 15 0 103 0 22 0 104 0 22 0 105 0 22 0 106 0 22 0 107 0 22 0 108 0 22 0 109 0 22 0 110 0 22 0 111 0 22 0 112 0 22 0 113 0 22 0 114 0 22 0 115 0 22 0 137 1 97 0 146 0 121 0 237 0 29 0 239 0 125 1 150 0 22 1 200] 
#[1 0 11 0 41 0 14 0 56 0 14 0 57 0 14 0 62 0 14 0 65 0 14 0 81 0 14 0 82 0 14 0 85 0 14 0 86 0 14 0 87 0 14 0 88 0 14 0 89 0 11 0 90 0 14 0 91 0 14 0 92 0 14 0 93 0 14 0 94 0 14 0 95 0 14 0 96 0 11 0 97 0 14 0 98 0 14 0 99 0 14 0 100 0 14 0 101 0 14 0 102 0 14 0 103 0 14 0 104 0 14 0 105 0 14 0 106 0 14 0 107 0 14 0 108 0 14 0 109 0 14 0 110 0 14 0 111 0 14 0 112 0 14 0 113 0 14 0 114 0 14 0 115 0 14 0 137 1 101 0 144 0 61 0 237 0 29 0 239 0 65 1 141 0 69 1 142 0 73 1 149 0 14 1 200] 
#[1 0 11 0 41 0 14 0 56 0 14 0 57 0 14 0 62 0 14 0 65 0 14 0 81 0 14 0 82 0 14 0 85 0 14 0 86 0 14 0 87 0 14 0 88 0 14 0 89 0 11 0 90 0 14 0 91 0 14 0 92 0 14 0 93 0 14 0 94 0 14 0 95 0 14 0 96 0 11 0 97 0 14 0 98 0 14 0 99 0 14 0 100 0 14 0 101 0 14 0 102 0 14 0 103 0 14 0 104 0 14 0 105 0 14 0 106 0 14 0 107 0 14 0 108 0 14 0 109 0 14 0 110 0 14 0 111 0 14 0 112 0 14 0 113 0 14 0 114 0 14 0 115 0 14 0 137 1 105 0 144 0 61 0 237 0 29 0 239 0 65 1 141 0 69 1 142 0 73 1 149 0 14 1 200] 
#[1 0 6 0 41 0 6 0 56 0 6 0 57 0 6 0 62 0 6 0 65 0 6 0 81 0 6 0 82 0 6 0 85 0 6 0 86 0 6 0 87 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 93 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 97 0 6 0 98 0 6 0 99 0 6 0 100 0 6 0 101 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 110 0 6 0 111 0 6 0 112 0 6 0 113 0 6 0 114 0 6 0 115 0 6 0 137 1 109 0 143 0 6 1 200] 
#[1 0 15 0 41 0 22 0 56 0 22 0 57 0 22 0 62 0 22 0 65 0 22 0 81 0 22 0 82 0 22 0 85 0 22 0 86 0 22 0 87 0 22 0 88 0 22 0 89 0 22 0 90 0 22 0 91 0 22 0 92 0 22 0 93 0 22 0 94 0 22 0 95 0 22 0 96 0 22 0 97 0 22 0 98 0 22 0 99 0 22 0 100 0 22 0 101 0 22 0 102 0 15 0 103 0 22 0 104 0 22 0 105 0 22 0 106 0 22 0 107 0 22 0 108 0 22 0 109 0 22 0 110 0 22 0 111 0 22 0 112 0 22 0 113 0 22 0 114 0 22 0 115 0 22 0 137 1 113 0 146 0 121 0 237 0 29 0 239 0 125 1 150 0 22 1 200] 
#[1 0 11 0 41 0 14 0 56 0 14 0 57 0 14 0 62 0 14 0 65 0 14 0 81 0 14 0 82 0 14 0 85 0 14 0 86 0 14 0 87 0 14 0 88 0 14 0 89 0 11 0 90 0 14 0 91 0 14 0 92 0 14 0 93 0 14 0 94 0 14 0 95 0 14 0 96 0 11 0 97 0 14 0 98 0 14 0 99 0 14 0 100 0 14 0 101 0 14 0 102 0 14 0 103 0 14 0 104 0 14 0 105 0 14 0 106 0 14 0 107 0 14 0 108 0 14 0 109 0 14 0 110 0 14 0 111 0 14 0 112 0 14 0 113 0 14 0 114 0 14 0 115 0 14 0 137 1 117 0 144 0 61 0 237 0 29 0 239 0 65 1 141 0 69 1 142 0 73 1 149 0 14 1 200] 
#[1 0 10 0 41 0 10 0 56 0 10 0 57 0 10 0 62 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 1 121 0 145 1 125 0 237 0 29 0 239 0 42 1 200] 
#[0 1 129 0 103] 
#[0 0 46 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 1 161 0 118 1 161 0 119 1 161 0 120 1 161 0 123 1 161 0 127 1 161 0 130 1 157 1 1 1 161 1 2 1 165 1 154 1 161 1 191] 
#[1 1 161 0 118 1 161 0 119 1 161 0 120 1 161 0 123 1 161 0 127 1 161 0 130 1 157 1 1 1 161 1 2 1 173 1 154 1 177 1 155 1 161 1 191] 
#[0 0 50 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 0 54 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 58 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 62 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 66 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 70 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 74 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 78 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 82 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 86 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 19 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 98 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 102 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 106 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 110 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 114 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 118 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 122 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 126 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 130 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 134 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 138 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 142 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 146 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 150 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 154 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 158 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 162 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 166 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 170 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 174 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 178 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 182 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 186 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 0 190 0 10 0 190 0 20 0 190 0 27 0 190 0 33 1 181 1 140] 
#[0 1 185 0 27] 
#[0 0 194 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 0 70 0 1 0 70 0 2 0 70 0 4 0 70 0 5 0 70 0 6 0 70 0 7 0 70 0 8 0 23 0 9 0 70 0 10 0 70 0 11 0 70 0 12 0 70 0 13 0 70 0 14 0 70 0 15 0 70 0 16 0 70 0 17 0 70 0 18 0 70 0 19 0 23 0 20 0 70 0 21 0 70 0 24 0 70 0 25 0 70 0 26 0 70 0 27 0 23 0 28 0 70 0 29 0 70 0 30 0 70 0 31 0 23 0 32 0 70 0 33 0 70 0 34 0 70 0 35 0 23 0 36 0 70 0 37 0 70 0 38 0 70 0 39 0 70 0 40 0 70 0 41 0 70 0 42 0 70 0 43 0 70 0 44 0 70 0 45 0 70 0 46 0 70 0 47 0 70 0 48 0 70 0 50 0 70 0 51 0 70 0 56 0 70 0 57 0 70 0 61 0 70 0 62 0 70 0 65 0 70 0 69 0 70 0 70 0 23 0 77 0 70 0 81 0 70 0 82 0 23 0 85 0 23 0 86 0 23 0 87 0 23 0 88 0 23 0 89 0 23 0 90 0 23 0 91 0 23 0 92 0 23 0 93 0 23 0 94 0 23 0 95 0 23 0 96 0 23 0 97 0 23 0 98 0 23 0 99 0 23 0 100 0 23 0 101 0 23 0 102 0 23 0 103 0 23 0 104 0 23 0 105 0 23 0 106 0 23 0 107 0 23 0 108 0 23 0 109 0 23 0 110 0 23 0 111 0 23 0 112 0 23 0 113 0 23 0 114 0 23 0 115 0 70 0 122 0 70 0 125 0 70 0 126 0 70 0 129 0 70 0 132 0 70 0 133 0 70 0 134 0 70 0 135 0 23 0 137] 
#[1 0 150 0 1 0 150 0 2 0 150 0 4 0 150 0 6 0 150 0 7 0 27 0 9 0 150 0 10 0 150 0 11 0 150 0 13 0 150 0 16 0 150 0 17 0 27 0 20 0 150 0 21 0 150 0 24 0 150 0 26 0 150 0 27 0 27 0 28 0 150 0 29 0 150 0 31 0 27 0 32 0 150 0 33 0 150 0 34 0 150 0 35 0 27 0 36 0 150 0 37 0 150 0 38 0 150 0 39 0 150 0 41 0 150 0 42 0 150 0 43 0 150 0 44 0 150 0 46 0 150 0 48 0 150 0 50 0 150 0 56 0 150 0 57 0 150 0 61 0 150 0 62 0 150 0 65 0 150 0 69 0 150 0 70 0 27 0 77 0 150 0 81 0 150 0 82 0 27 0 85 0 27 0 86 0 27 0 87 0 27 0 88 0 27 0 89 0 27 0 90 0 27 0 91 0 27 0 92 0 27 0 93 0 27 0 94 0 27 0 95 0 27 0 96 0 27 0 97 0 27 0 98 0 27 0 99 0 27 0 100 0 27 0 101 0 27 0 102 0 27 0 103 0 27 0 104 0 27 0 105 0 27 0 106 0 27 0 107 0 27 0 108 0 27 0 109 0 27 0 110 0 27 0 111 0 27 0 112 0 27 0 113 0 27 0 114 0 27 0 115 0 150 0 122 0 150 0 125 0 150 0 126 0 150 0 129 0 150 0 132 0 150 0 133 0 150 0 134 0 150 0 135 0 27 0 137] 
#[1 0 154 0 1 0 154 0 2 0 154 0 4 0 154 0 5 0 154 0 6 0 154 0 7 0 154 0 8 0 31 0 9 0 154 0 10 0 154 0 11 0 154 0 12 0 154 0 13 0 154 0 14 0 154 0 15 0 154 0 16 0 154 0 17 0 154 0 18 0 154 0 19 0 31 0 20 0 154 0 21 0 154 0 24 0 154 0 25 0 154 0 26 0 154 0 27 0 31 0 28 0 154 0 29 0 154 0 30 0 154 0 31 0 31 0 32 0 154 0 33 0 154 0 34 0 154 0 35 0 31 0 36 0 154 0 37 0 154 0 38 0 154 0 39 0 154 0 40 0 154 0 41 0 154 0 42 0 154 0 43 0 154 0 44 0 154 0 45 0 154 0 46 0 154 0 47 0 154 0 48 0 154 0 50 0 154 0 51 0 154 0 56 0 154 0 57 0 154 0 61 0 154 0 62 0 154 0 65 0 154 0 69 0 154 0 70 0 31 0 77 0 154 0 81 0 154 0 82 0 31 0 85 0 31 0 86 0 31 0 87 0 31 0 88 0 31 0 89 0 31 0 90 0 31 0 91 0 31 0 92 0 31 0 93 0 31 0 94 0 31 0 95 0 31 0 96 0 31 0 97 0 31 0 98 0 31 0 99 0 31 0 100 0 31 0 101 0 31 0 102 0 31 0 103 0 31 0 104 0 31 0 105 0 31 0 106 0 31 0 107 0 31 0 108 0 31 0 109 0 31 0 110 0 31 0 111 0 31 0 112 0 31 0 113 0 31 0 114 0 31 0 115 0 154 0 122 0 154 0 125 0 154 0 126 0 154 0 129 0 154 0 132 0 154 0 133 0 154 0 134 0 154 0 135 0 31 0 137] 
#[1 0 158 0 1 0 158 0 2 0 158 0 4 0 158 0 5 0 158 0 6 0 158 0 7 0 158 0 8 0 35 0 9 0 158 0 10 0 158 0 11 0 158 0 12 0 158 0 13 0 158 0 14 0 158 0 15 0 158 0 16 0 158 0 17 0 158 0 18 0 158 0 19 0 35 0 20 0 158 0 21 0 158 0 24 0 158 0 25 0 158 0 26 0 158 0 27 0 35 0 28 0 158 0 29 0 158 0 30 0 158 0 31 0 35 0 32 0 158 0 33 0 158 0 34 0 158 0 35 0 35 0 36 0 158 0 37 0 158 0 38 0 158 0 39 0 158 0 40 0 158 0 41 0 158 0 42 0 158 0 43 0 158 0 44 0 158 0 45 0 158 0 46 0 158 0 47 0 158 0 48 0 158 0 50 0 158 0 51 0 158 0 56 0 158 0 57 0 158 0 61 0 158 0 62 0 158 0 65 0 158 0 69 0 158 0 70 0 35 0 77 0 158 0 81 0 158 0 82 0 35 0 85 0 35 0 86 0 35 0 87 0 35 0 88 0 35 0 89 0 35 0 90 0 35 0 91 0 35 0 92 0 35 0 93 0 35 0 94 0 35 0 95 0 35 0 96 0 35 0 97 0 35 0 98 0 35 0 99 0 35 0 100 0 35 0 101 0 35 0 102 0 35 0 103 0 35 0 104 0 35 0 105 0 35 0 106 0 35 0 107 0 35 0 108 0 35 0 109 0 35 0 110 0 35 0 111 0 35 0 112 0 35 0 113 0 35 0 114 0 35 0 115 0 158 0 122 0 158 0 125 0 158 0 126 0 158 0 129 0 158 0 132 0 158 0 133 0 158 0 134 0 158 0 135 0 35 0 137] 
#[1 0 162 0 1 0 162 0 2 0 162 0 4 0 162 0 5 0 162 0 6 0 162 0 7 0 162 0 8 0 39 0 9 0 162 0 10 0 162 0 11 0 162 0 12 0 162 0 13 0 162 0 14 0 162 0 15 0 162 0 16 0 162 0 17 0 162 0 18 0 162 0 19 0 39 0 20 0 162 0 21 0 162 0 24 0 162 0 25 0 162 0 26 0 162 0 27 0 39 0 28 0 162 0 29 0 162 0 30 0 162 0 31 0 39 0 32 0 162 0 33 0 162 0 34 0 162 0 35 0 39 0 36 0 162 0 37 0 162 0 38 0 162 0 39 0 162 0 40 0 162 0 41 0 162 0 42 0 162 0 43 0 162 0 44 0 162 0 45 0 162 0 46 0 162 0 47 0 162 0 48 0 162 0 50 0 162 0 51 0 162 0 56 0 162 0 57 0 162 0 61 0 162 0 62 0 162 0 65 0 162 0 69 0 162 0 70 0 39 0 77 0 162 0 81 0 162 0 82 0 39 0 85 0 39 0 86 0 39 0 87 0 39 0 88 0 39 0 89 0 39 0 90 0 39 0 91 0 39 0 92 0 39 0 93 0 39 0 94 0 39 0 95 0 39 0 96 0 39 0 97 0 39 0 98 0 39 0 99 0 39 0 100 0 39 0 101 0 39 0 102 0 39 0 103 0 39 0 104 0 39 0 105 0 39 0 106 0 39 0 107 0 39 0 108 0 39 0 109 0 39 0 110 0 39 0 111 0 39 0 112 0 39 0 113 0 39 0 114 0 39 0 115 0 162 0 122 0 162 0 125 0 162 0 126 0 162 0 129 0 162 0 132 0 162 0 133 0 162 0 134 0 162 0 135 0 39 0 137] 
#[1 0 166 0 1 0 166 0 2 0 166 0 4 0 166 0 5 0 166 0 6 0 166 0 7 0 166 0 8 0 43 0 9 0 166 0 10 0 166 0 11 0 166 0 12 0 166 0 13 0 166 0 14 0 166 0 15 0 166 0 16 0 166 0 17 0 166 0 18 0 166 0 19 0 43 0 20 0 166 0 21 0 166 0 24 0 166 0 25 0 166 0 26 0 166 0 27 0 43 0 28 0 166 0 29 0 166 0 30 0 166 0 31 0 43 0 32 0 166 0 33 0 166 0 34 0 166 0 35 0 43 0 36 0 166 0 37 0 166 0 38 0 166 0 39 0 166 0 40 0 166 0 41 0 166 0 42 0 166 0 43 0 166 0 44 0 166 0 45 0 166 0 46 0 166 0 47 0 166 0 48 0 166 0 50 0 166 0 51 0 166 0 56 0 166 0 57 0 166 0 61 0 166 0 62 0 166 0 65 0 166 0 69 0 166 0 70 0 43 0 77 0 166 0 81 0 166 0 82 0 43 0 85 0 43 0 86 0 43 0 87 0 43 0 88 0 43 0 89 0 43 0 90 0 43 0 91 0 43 0 92 0 43 0 93 0 43 0 94 0 43 0 95 0 43 0 96 0 43 0 97 0 43 0 98 0 43 0 99 0 43 0 100 0 43 0 101 0 43 0 102 0 43 0 103 0 43 0 104 0 43 0 105 0 43 0 106 0 43 0 107 0 43 0 108 0 43 0 109 0 43 0 110 0 43 0 111 0 43 0 112 0 43 0 113 0 43 0 114 0 43 0 115 0 166 0 122 0 166 0 125 0 166 0 126 0 166 0 129 0 166 0 132 0 166 0 133 0 166 0 134 0 166 0 135 0 43 0 137] 
#[1 0 170 0 1 0 170 0 2 0 170 0 4 0 170 0 5 0 170 0 6 0 170 0 7 0 170 0 8 0 47 0 9 0 170 0 10 0 170 0 11 0 170 0 12 0 170 0 13 0 170 0 14 0 170 0 15 0 170 0 16 0 170 0 17 0 170 0 18 0 170 0 19 0 47 0 20 0 170 0 21 0 170 0 24 0 170 0 25 0 170 0 26 0 170 0 27 0 47 0 28 0 170 0 29 0 170 0 30 0 170 0 31 0 47 0 32 0 170 0 33 0 170 0 34 0 170 0 35 0 47 0 36 0 170 0 37 0 170 0 38 0 170 0 39 0 170 0 40 0 170 0 41 0 170 0 42 0 170 0 43 0 170 0 44 0 170 0 45 0 170 0 46 0 170 0 47 0 170 0 48 0 170 0 50 0 170 0 51 0 170 0 56 0 170 0 57 0 170 0 61 0 170 0 62 0 170 0 65 0 170 0 69 0 170 0 70 0 47 0 77 0 170 0 81 0 170 0 82 0 47 0 85 0 47 0 86 0 47 0 87 0 47 0 88 0 47 0 89 0 47 0 90 0 47 0 91 0 47 0 92 0 47 0 93 0 47 0 94 0 47 0 95 0 47 0 96 0 47 0 97 0 47 0 98 0 47 0 99 0 47 0 100 0 47 0 101 0 47 0 102 0 47 0 103 0 47 0 104 0 47 0 105 0 47 0 106 0 47 0 107 0 47 0 108 0 47 0 109 0 47 0 110 0 47 0 111 0 47 0 112 0 47 0 113 0 47 0 114 0 47 0 115 0 170 0 122 0 170 0 125 0 170 0 126 0 170 0 129 0 170 0 132 0 170 0 133 0 170 0 134 0 170 0 135 0 47 0 137] 
#[1 0 174 0 1 0 174 0 2 0 174 0 4 0 174 0 5 0 174 0 6 0 174 0 7 0 174 0 8 0 51 0 9 0 174 0 10 0 174 0 11 0 174 0 12 0 174 0 13 0 174 0 14 0 174 0 15 0 174 0 16 0 174 0 17 0 174 0 18 0 174 0 19 0 51 0 20 0 174 0 21 0 174 0 24 0 174 0 25 0 174 0 26 0 174 0 27 0 51 0 28 0 174 0 29 0 174 0 30 0 174 0 31 0 51 0 32 0 174 0 33 0 174 0 34 0 174 0 35 0 51 0 36 0 174 0 37 0 174 0 38 0 174 0 39 0 174 0 40 0 174 0 41 0 174 0 42 0 174 0 43 0 174 0 44 0 174 0 45 0 174 0 46 0 174 0 47 0 174 0 48 0 174 0 50 0 174 0 51 0 174 0 56 0 174 0 57 0 174 0 61 0 174 0 62 0 174 0 65 0 174 0 69 0 174 0 70 0 51 0 77 0 174 0 81 0 174 0 82 0 51 0 85 0 51 0 86 0 51 0 87 0 51 0 88 0 51 0 89 0 51 0 90 0 51 0 91 0 51 0 92 0 51 0 93 0 51 0 94 0 51 0 95 0 51 0 96 0 51 0 97 0 51 0 98 0 51 0 99 0 51 0 100 0 51 0 101 0 51 0 102 0 51 0 103 0 51 0 104 0 51 0 105 0 51 0 106 0 51 0 107 0 51 0 108 0 51 0 109 0 51 0 110 0 51 0 111 0 51 0 112 0 51 0 113 0 51 0 114 0 51 0 115 0 174 0 122 0 174 0 125 0 174 0 126 0 174 0 129 0 174 0 132 0 174 0 133 0 174 0 134 0 174 0 135 0 51 0 137] 
#[1 0 178 0 1 0 178 0 2 0 178 0 4 0 178 0 5 0 178 0 6 0 178 0 7 0 178 0 8 0 55 0 9 0 178 0 10 0 178 0 11 0 178 0 12 0 178 0 13 0 178 0 14 0 178 0 15 0 178 0 16 0 178 0 17 0 178 0 18 0 178 0 19 0 55 0 20 0 178 0 21 0 178 0 24 0 178 0 25 0 178 0 26 0 178 0 27 0 55 0 28 0 178 0 29 0 178 0 30 0 178 0 31 0 55 0 32 0 178 0 33 0 178 0 34 0 178 0 35 0 55 0 36 0 178 0 37 0 178 0 38 0 178 0 39 0 178 0 40 0 178 0 41 0 178 0 42 0 178 0 43 0 178 0 44 0 178 0 45 0 178 0 46 0 178 0 47 0 178 0 48 0 178 0 50 0 178 0 51 0 178 0 56 0 178 0 57 0 178 0 61 0 178 0 62 0 178 0 65 0 178 0 69 0 178 0 70 0 55 0 77 0 178 0 81 0 178 0 82 0 55 0 85 0 55 0 86 0 55 0 87 0 55 0 88 0 55 0 89 0 55 0 90 0 55 0 91 0 55 0 92 0 55 0 93 0 55 0 94 0 55 0 95 0 55 0 96 0 55 0 97 0 55 0 98 0 55 0 99 0 55 0 100 0 55 0 101 0 55 0 102 0 55 0 103 0 55 0 104 0 55 0 105 0 55 0 106 0 55 0 107 0 55 0 108 0 55 0 109 0 55 0 110 0 55 0 111 0 55 0 112 0 55 0 113 0 55 0 114 0 55 0 115 0 178 0 122 0 178 0 125 0 178 0 126 0 178 0 129 0 178 0 132 0 178 0 133 0 178 0 134 0 178 0 135 0 55 0 137] 
#[1 0 182 0 1 0 182 0 2 0 182 0 4 0 182 0 5 0 182 0 6 0 182 0 7 0 182 0 8 0 59 0 9 0 182 0 10 0 182 0 11 0 182 0 12 0 182 0 13 0 182 0 14 0 182 0 15 0 182 0 16 0 182 0 17 0 182 0 18 0 182 0 19 0 59 0 20 0 182 0 21 0 182 0 24 0 182 0 25 0 182 0 26 0 182 0 27 0 59 0 28 0 182 0 29 0 182 0 30 0 182 0 31 0 59 0 32 0 182 0 33 0 182 0 34 0 182 0 35 0 59 0 36 0 182 0 37 0 182 0 38 0 182 0 39 0 182 0 40 0 182 0 41 0 182 0 42 0 182 0 43 0 182 0 44 0 182 0 45 0 182 0 46 0 182 0 47 0 182 0 48 0 182 0 50 0 182 0 51 0 182 0 56 0 182 0 57 0 182 0 61 0 182 0 62 0 182 0 65 0 182 0 69 0 182 0 70 0 59 0 77 0 182 0 81 0 182 0 82 0 59 0 85 0 59 0 86 0 59 0 87 0 59 0 88 0 59 0 89 0 59 0 90 0 59 0 91 0 59 0 92 0 59 0 93 0 59 0 94 0 59 0 95 0 59 0 96 0 59 0 97 0 59 0 98 0 59 0 99 0 59 0 100 0 59 0 101 0 59 0 102 0 59 0 103 0 59 0 104 0 59 0 105 0 59 0 106 0 59 0 107 0 59 0 108 0 59 0 109 0 59 0 110 0 59 0 111 0 59 0 112 0 59 0 113 0 59 0 114 0 59 0 115 0 182 0 122 0 182 0 125 0 182 0 126 0 182 0 129 0 182 0 132 0 182 0 133 0 182 0 134 0 182 0 135 0 59 0 137] 
#[0 0 238 0 41 0 56 0 57 0 62 0 65 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 0 242 0 41 0 56 0 57 0 62 0 65 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[1 0 246 0 9 0 250 0 41 0 250 0 56 0 250 0 57 0 250 0 62 0 250 0 65 0 250 0 77 0 250 0 81 0 250 0 82 0 250 0 85 0 250 0 86 0 250 0 87 0 250 0 88 0 250 0 89 0 250 0 90 0 250 0 91 0 250 0 92 0 250 0 93 0 250 0 94 0 250 0 95 0 250 0 96 0 250 0 97 0 250 0 98 0 250 0 99 0 250 0 100 0 250 0 101 0 250 0 102 0 250 0 103 0 250 0 104 0 250 0 105 0 250 0 106 0 250 0 107 0 250 0 108 0 250 0 109 0 250 0 110 0 250 0 111 0 250 0 112 0 250 0 113 0 250 0 114 0 250 0 115 0 250 0 137] 
#[1 0 254 0 9 0 63 0 20 0 254 0 27 1 2 0 28] 
#[1 1 193 0 28 1 197 1 164] 
#[1 1 201 0 9 1 205 1 28] 
#[1 0 15 0 41 0 22 0 56 0 22 0 57 0 22 0 62 0 22 0 65 0 22 0 81 0 22 0 82 0 22 0 85 0 22 0 86 0 22 0 87 0 22 0 88 0 22 0 89 0 22 0 90 0 22 0 91 0 22 0 92 0 22 0 93 0 22 0 94 0 22 0 95 0 22 0 96 0 22 0 97 0 22 0 98 0 22 0 99 0 22 0 100 0 22 0 101 0 22 0 102 0 15 0 103 0 22 0 104 0 22 0 105 0 22 0 106 0 22 0 107 0 22 0 108 0 22 0 109 0 22 0 110 0 22 0 111 0 22 0 112 0 22 0 113 0 22 0 114 0 22 0 115 0 22 0 137 1 209 0 146 0 121 0 237 0 29 0 239 0 125 1 150 0 22 1 200] 
#[1 0 10 0 41 0 10 0 56 0 10 0 57 0 10 0 62 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 1 121 0 145 1 125 0 237 0 29 0 239 1 6 1 200] 
#[1 0 15 0 41 0 22 0 56 0 22 0 57 0 22 0 62 0 22 0 65 0 22 0 81 0 22 0 82 0 22 0 85 0 22 0 86 0 22 0 87 0 22 0 88 0 22 0 89 0 22 0 90 0 22 0 91 0 22 0 92 0 22 0 93 0 22 0 94 0 22 0 95 0 22 0 96 0 22 0 97 0 22 0 98 0 22 0 99 0 22 0 100 0 22 0 101 0 22 0 102 0 15 0 103 0 22 0 104 0 22 0 105 0 22 0 106 0 22 0 107 0 22 0 108 0 22 0 109 0 22 0 110 0 22 0 111 0 22 0 112 0 22 0 113 0 22 0 114 0 22 0 115 0 22 0 137 1 213 0 146 0 121 0 237 0 29 0 239 0 125 1 150 0 22 1 200] 
#[1 0 15 0 41 0 22 0 56 0 22 0 57 0 22 0 62 0 22 0 65 0 22 0 81 0 22 0 82 0 22 0 85 0 22 0 86 0 22 0 87 0 22 0 88 0 22 0 89 0 22 0 90 0 22 0 91 0 22 0 92 0 22 0 93 0 22 0 94 0 22 0 95 0 22 0 96 0 22 0 97 0 22 0 98 0 22 0 99 0 22 0 100 0 22 0 101 0 22 0 102 0 15 0 103 0 22 0 104 0 22 0 105 0 22 0 106 0 22 0 107 0 22 0 108 0 22 0 109 0 22 0 110 0 22 0 111 0 22 0 112 0 22 0 113 0 22 0 114 0 22 0 115 0 22 0 137 1 217 0 146 0 121 0 237 0 29 0 239 0 125 1 150 0 22 1 200] 
#[1 0 11 0 41 0 14 0 56 0 14 0 57 0 14 0 62 0 14 0 65 0 14 0 81 0 14 0 82 0 14 0 85 0 14 0 86 0 14 0 87 0 14 0 88 0 14 0 89 0 11 0 90 0 14 0 91 0 14 0 92 0 14 0 93 0 14 0 94 0 14 0 95 0 14 0 96 0 11 0 97 0 14 0 98 0 14 0 99 0 14 0 100 0 14 0 101 0 14 0 102 0 14 0 103 0 14 0 104 0 14 0 105 0 14 0 106 0 14 0 107 0 14 0 108 0 14 0 109 0 14 0 110 0 14 0 111 0 14 0 112 0 14 0 113 0 14 0 114 0 14 0 115 0 14 0 137 1 221 0 144 0 61 0 237 0 29 0 239 0 65 1 141 0 69 1 142 0 73 1 149 0 14 1 200] 
#[1 0 10 0 41 0 10 0 56 0 10 0 57 0 10 0 62 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 1 121 0 145 1 125 0 237 0 29 0 239 1 10 1 200] 
#[1 0 15 0 41 0 22 0 56 0 22 0 57 0 22 0 62 0 22 0 65 0 22 0 81 0 22 0 82 0 22 0 85 0 22 0 86 0 22 0 87 0 22 0 88 0 22 0 89 0 22 0 90 0 22 0 91 0 22 0 92 0 22 0 93 0 22 0 94 0 22 0 95 0 22 0 96 0 22 0 97 0 22 0 98 0 22 0 99 0 22 0 100 0 22 0 101 0 22 0 102 0 15 0 103 0 22 0 104 0 22 0 105 0 22 0 106 0 22 0 107 0 22 0 108 0 22 0 109 0 22 0 110 0 22 0 111 0 22 0 112 0 22 0 113 0 22 0 114 0 22 0 115 0 22 0 137 1 225 0 146 0 121 0 237 0 29 0 239 0 125 1 150 0 22 1 200] 
#[0 1 14 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 1 229 0 56 1 233 0 57 1 237 0 62 1 241 0 65 2 49 0 81 2 93 0 82 1 253 0 85 2 81 0 86 2 81 0 87 2 81 0 88 1 29 0 89 2 81 0 90 2 1 0 91 2 5 0 92 2 81 0 93 2 9 0 94 2 13 0 95 2 81 0 96 2 81 0 97 2 81 0 98 2 17 0 99 2 81 0 100 2 81 0 101 2 21 0 102 2 81 0 103 2 81 0 104 2 25 0 105 2 81 0 106 2 29 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 2 33 0 147 2 37 0 148 2 41 0 151 2 45 0 152 2 49 0 156 2 53 0 161 2 57 0 185 2 61 0 193 2 65 0 197 2 69 0 210 2 73 0 211 2 77 0 225 2 81 1 97 2 85 1 100 2 89 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 105 1 171 2 109 1 174 2 117 1 175 2 117 1 176 2 81 1 199] 
#[1 1 161 0 118 1 161 0 119 1 161 0 120 1 161 0 123 1 161 0 127 1 161 0 130 1 157 1 1 1 161 1 2 2 121 1 154 1 161 1 191] 
#[0 1 18 0 27 0 68 0 86 0 88 0 111 0 114 0 118 0 119 0 120 0 123 0 127 0 130] 
#[0 1 22 0 27 0 68 0 86 0 88 0 111 0 114 0 118 0 119 0 120 0 123 0 127 0 130] 
#[0 1 26 0 27 0 68 0 86 0 88 0 111 0 114 0 118 0 119 0 120 0 123 0 127 0 130] 
#[0 1 30 0 27 0 68 0 86 0 88 0 111 0 114 0 118 0 119 0 120 0 123 0 127 0 130] 
#[0 1 34 0 27 0 68 0 86 0 88 0 111 0 114 0 118 0 119 0 120 0 123 0 127 0 130] 
#[0 1 38 0 27 0 68 0 86 0 88 0 111 0 114 0 118 0 119 0 120 0 123 0 127 0 130] 
#[0 1 42 0 27 0 68 0 86 0 88 0 111 0 114] 
#[1 1 46 0 27 1 46 0 68 1 46 0 86 1 46 0 88 1 46 0 111 1 46 0 114 2 125 0 118 2 125 0 119 2 125 0 120 2 125 0 123 2 125 0 127 2 125 0 130 2 125 1 191] 
#[1 1 50 0 27 1 50 0 111 1 50 0 114 2 129 1 144] 
#[0 1 54 0 27 0 68 0 86 0 88 0 111 0 114 0 118 0 119 0 120 0 123 0 127 0 130] 
#[1 1 58 0 27 1 58 0 68 1 58 0 86 1 58 0 88 1 58 0 111 1 58 0 114 2 133 1 156] 
#[1 1 50 0 27 2 137 0 86 2 141 0 88 1 50 0 111 1 50 0 114 2 145 1 144] 
#[1 1 62 0 10 2 149 0 20 1 62 0 27 1 62 0 33 2 153 1 139] 
#[0 1 66 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 2 157 0 71 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 1 13 1 97 2 161 1 98 2 165 1 100 1 13 1 199] 
#[1 2 93 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 2 213 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 217 1 165 2 109 1 174 2 117 1 175 2 117 1 176] 
#[1 1 70 0 9 2 221 0 20 1 70 0 27] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 2 237 0 10 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 113 0 241 3 117 0 245 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 193 1 29 3 197 1 32 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 4 33 1 98 4 53 1 99 1 81 1 100 4 41 1 130 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 1 74 0 41 0 56 0 57 0 62 0 65 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[1 0 10 0 41 0 10 0 56 0 10 0 57 0 10 0 62 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 1 121 0 145 1 125 0 237 0 29 0 239 1 78 1 200] 
#[1 0 10 0 41 0 10 0 56 0 10 0 57 0 10 0 62 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 1 121 0 145 1 125 0 237 0 29 0 239 1 82 1 200] 
#[1 0 10 0 41 0 10 0 56 0 10 0 57 0 10 0 62 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 1 121 0 145 1 125 0 237 0 29 0 239 1 86 1 200] 
#[1 0 15 0 41 0 22 0 56 0 22 0 57 0 22 0 62 0 22 0 65 0 22 0 81 0 22 0 82 0 22 0 85 0 22 0 86 0 22 0 87 0 22 0 88 0 22 0 89 0 22 0 90 0 22 0 91 0 22 0 92 0 22 0 93 0 22 0 94 0 22 0 95 0 22 0 96 0 22 0 97 0 22 0 98 0 22 0 99 0 22 0 100 0 22 0 101 0 22 0 102 0 15 0 103 0 22 0 104 0 22 0 105 0 22 0 106 0 22 0 107 0 22 0 108 0 22 0 109 0 22 0 110 0 22 0 111 0 22 0 112 0 22 0 113 0 22 0 114 0 22 0 115 0 22 0 137 4 69 0 146 0 121 0 237 0 29 0 239 0 125 1 150 0 22 1 200] 
#[1 0 10 0 41 0 10 0 56 0 10 0 57 0 10 0 62 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 1 121 0 145 1 125 0 237 0 29 0 239 1 90 1 200] 
#[1 4 81 0 89 4 81 0 108 4 81 0 109 4 81 0 110 4 81 0 111 4 81 0 112 4 81 0 113 4 81 0 114 4 81 0 115 4 81 0 137 4 73 0 184 4 77 0 192 4 81 1 100] 
#[1 2 93 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 85 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 4 89 0 203 4 93 0 206 1 13 1 97 4 97 1 98 2 85 1 100 4 101 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 1 13 1 199] 
#[0 4 105 0 89 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 100] 
#[1 2 93 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 85 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 4 109 0 203 4 93 0 206 1 13 1 97 4 97 1 98 2 85 1 100 4 113 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 1 13 1 199] 
#[0 1 94 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 1 98 0 10 0 16 0 27 0 35 0 43 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 134 0 137] 
#[1 0 54 0 9 0 54 0 28 4 117 0 56] 
#[1 0 78 0 9 0 67 0 28 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 4 125 0 113 1 13 0 114 1 13 0 115 1 13 0 137 4 129 0 234 1 13 1 97 4 133 1 98 1 13 1 199] 
#[1 0 82 0 9 0 82 0 28 4 137 0 65 4 141 0 81 2 93 0 82 2 81 0 85 2 81 0 86 2 81 0 87 2 81 0 88 1 29 0 89 2 81 0 90 2 81 0 91 2 81 0 92 2 81 0 93 2 9 0 94 2 13 0 95 2 81 0 96 2 81 0 97 2 81 0 98 2 81 0 99 2 81 0 100 2 81 0 101 2 81 0 102 2 81 0 103 2 81 0 104 2 25 0 105 2 81 0 106 2 81 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 4 141 0 155 4 141 0 156 4 149 0 161 4 153 0 210 4 157 0 211 2 81 1 97 2 85 1 100 2 89 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 2 81 1 199] 
#[1 0 71 0 9 0 75 0 28 4 165 0 36 1 102 0 85 1 102 0 86 1 102 0 87 1 102 0 88 1 102 0 89 1 102 0 90 1 102 0 91 1 102 0 92 1 102 0 93 1 102 0 94 1 102 0 95 1 102 0 96 1 102 0 97 1 102 0 98 1 102 0 99 1 102 0 100 1 102 0 101 1 102 0 102 1 102 0 103 1 102 0 104 1 102 0 105 1 102 0 106 1 102 0 107 1 102 0 108 1 102 0 109 1 102 0 110 1 102 0 111 1 102 0 112 1 102 0 113 1 102 0 114 1 102 0 115 1 102 0 137 4 169 0 234 4 173 1 177] 
#[1 0 98 0 9 0 98 0 28 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 4 177 1 98 1 13 1 199] 
#[1 0 114 0 9 0 114 0 28 4 181 0 65 4 185 0 81 2 93 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 4 185 0 156 2 85 1 100 4 185 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[1 0 126 0 9 0 126 0 28 4 193 0 89 4 193 0 108 4 193 0 109 4 193 0 110 4 193 0 111 4 193 0 112 4 193 0 113 4 193 0 114 4 193 0 115 4 193 0 137 4 193 1 100] 
#[1 0 138 0 9 0 138 0 28 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 4 197 1 98 1 13 1 199] 
#[1 0 146 0 9 0 146 0 28 2 93 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 85 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 1 13 1 97 4 217 1 98 4 205 1 100 4 209 1 159 2 93 1 161 2 93 1 162 2 101 1 163 4 213 1 172 4 217 1 173 2 109 1 174 2 117 1 175 2 117 1 176 1 13 1 199] 
#[0 1 106 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 1 110 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 1 114 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 1 118 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 4 221 1 98 1 13 1 199] 
#[1 4 225 0 34 4 229 0 110 4 233 0 115 4 237 0 134 4 241 0 163 4 245 0 164] 
#[0 1 122 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 1 126 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 1 130 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 4 225 0 34 4 229 0 110 4 233 0 115 4 237 0 134 4 249 0 163 4 245 0 164] 
#[1 4 225 0 34 4 229 0 110 4 233 0 115 4 237 0 134 4 253 0 163 4 245 0 164] 
#[0 1 134 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 5 1 0 9 4 121 0 28 5 5 0 165 3 101 0 166 3 101 0 167 3 109 0 234] 
#[1 1 2 0 1 1 2 0 2 1 2 0 4 1 2 0 6 1 2 0 7 1 2 0 9 1 2 0 10 1 2 0 11 1 2 0 13 1 2 0 16 1 2 0 17 0 79 0 20 1 2 0 21 1 2 0 24 1 2 0 26 1 2 0 27 1 2 0 28 1 2 0 29 1 2 0 31 1 2 0 33 1 2 0 34 1 2 0 35 1 2 0 36 1 2 0 37 1 2 0 38 1 2 0 39 1 2 0 42 1 2 0 43 1 2 0 44 1 2 0 46 1 2 0 48 1 2 0 50 1 2 0 55 1 2 0 61 1 2 0 70 1 2 0 77 1 2 0 84 1 2 0 85 1 2 0 86 1 2 0 87 1 2 0 88 1 2 0 89 1 2 0 90 1 2 0 91 1 2 0 92 1 2 0 93 1 2 0 94 1 2 0 95 1 2 0 96 1 2 0 97 1 2 0 98 1 2 0 99 1 2 0 100 1 2 0 101 1 2 0 102 1 2 0 103 1 2 0 104 1 2 0 105 1 2 0 106 1 2 0 107 1 2 0 108 1 2 0 109 1 2 0 110 1 2 0 111 1 2 0 112 1 2 0 113 1 2 0 114 1 2 0 115 1 2 0 122 1 2 0 125 1 2 0 126 1 2 0 129 1 2 0 132 1 2 0 133 1 2 0 134 1 2 0 135 1 2 0 137] 
#[1 0 83 0 85 0 87 0 86 0 91 0 87 0 95 0 88 0 99 0 89 0 103 0 90 0 107 0 91 0 111 0 92 0 115 0 93 0 119 0 94 0 123 0 95 0 127 0 96 0 131 0 97 0 135 0 98 0 139 0 99 0 143 0 100 0 147 0 101 0 151 0 102 0 155 0 103 0 159 0 104 0 163 0 105 0 167 0 106 0 171 0 107 0 175 0 108 0 179 0 109 0 183 0 110 0 187 0 111 0 191 0 112 0 195 0 113 0 199 0 114 0 203 0 115 0 207 0 137 5 25 1 97 5 25 1 199] 
#[1 1 142 0 10 1 142 0 16 1 142 0 27 1 142 0 35 1 142 0 43 1 142 0 77 1 142 0 85 1 142 0 86 1 142 0 87 1 142 0 88 1 142 0 89 1 142 0 90 1 142 0 91 1 142 0 92 1 142 0 93 0 211 0 94 1 142 0 95 1 142 0 96 1 142 0 97 1 142 0 98 1 142 0 99 1 142 0 100 1 142 0 101 1 142 0 102 1 142 0 103 1 142 0 104 1 142 0 105 1 142 0 106 1 142 0 107 1 142 0 108 1 142 0 109 1 142 0 110 1 142 0 111 1 142 0 112 1 142 0 113 1 142 0 114 1 142 0 115 1 142 0 134 1 142 0 137 2 109 1 174 5 33 1 175] 
#[0 1 146 0 10 0 16 0 27 0 35 0 43 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 134 0 137] 
#[1 1 150 0 1 1 150 0 2 1 150 0 4 1 150 0 6 1 150 0 7 1 150 0 9 1 150 0 10 1 150 0 11 1 150 0 13 1 150 0 16 1 150 0 17 1 150 0 20 1 150 0 21 1 150 0 24 1 150 0 26 1 150 0 27 0 215 0 28 1 150 0 29 1 150 0 31 1 150 0 33 1 150 0 34 1 150 0 35 0 219 0 36 1 150 0 37 1 150 0 38 1 150 0 39 1 150 0 42 1 150 0 43 1 150 0 44 1 150 0 46 1 150 0 48 1 150 0 50 1 150 0 55 1 150 0 61 1 150 0 70 1 150 0 77 1 150 0 84 1 150 0 85 1 150 0 86 1 150 0 87 1 150 0 88 1 150 0 89 1 150 0 90 1 150 0 91 1 150 0 92 1 150 0 93 1 150 0 94 1 150 0 95 1 150 0 96 1 150 0 97 1 150 0 98 1 150 0 99 1 150 0 100 1 150 0 101 1 150 0 102 1 150 0 103 1 150 0 104 1 150 0 105 1 150 0 106 1 150 0 107 1 150 0 108 1 150 0 109 1 150 0 110 1 150 0 111 1 150 0 112 1 150 0 113 1 150 0 114 1 150 0 115 1 150 0 122 1 150 0 125 1 150 0 126 1 150 0 129 1 150 0 132 1 150 0 133 1 150 0 134 1 150 0 135 1 150 0 137 5 41 1 164] 
#[0 1 154 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 1 158 0 1 1 158 0 2 1 158 0 4 1 158 0 6 1 158 0 7 1 158 0 9 1 158 0 10 1 158 0 11 1 158 0 13 1 158 0 16 1 158 0 17 1 158 0 20 1 158 0 21 1 158 0 24 1 158 0 26 1 158 0 27 1 158 0 28 1 158 0 29 1 158 0 31 1 158 0 33 1 158 0 34 1 158 0 35 0 223 0 36 1 158 0 37 1 158 0 38 1 158 0 39 1 158 0 42 1 158 0 43 1 158 0 44 1 158 0 46 1 158 0 48 1 158 0 50 1 158 0 55 1 158 0 61 1 158 0 70 1 158 0 77 1 158 0 85 1 158 0 86 1 158 0 87 1 158 0 88 1 158 0 89 1 158 0 90 1 158 0 91 1 158 0 92 1 158 0 93 0 227 0 94 1 158 0 95 1 158 0 96 1 158 0 97 1 158 0 98 1 158 0 99 1 158 0 100 1 158 0 101 1 158 0 102 1 158 0 103 1 158 0 104 1 158 0 105 1 158 0 106 1 158 0 107 1 158 0 108 1 158 0 109 1 158 0 110 1 158 0 111 1 158 0 112 1 158 0 113 1 158 0 114 1 158 0 115 1 158 0 122 1 158 0 125 1 158 0 126 1 158 0 129 1 158 0 132 1 158 0 133 1 158 0 134 1 158 0 135 1 158 0 137 2 109 1 174 5 49 1 175] 
#[0 1 162 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 1 166 0 10 1 166 0 16 1 166 0 27 1 166 0 35 5 53 0 36 1 166 0 43 1 166 0 77 1 166 0 85 1 166 0 86 1 166 0 87 1 166 0 88 1 166 0 89 1 166 0 90 1 166 0 91 1 166 0 92 1 166 0 93 1 166 0 94 1 166 0 95 1 166 0 96 1 166 0 97 1 166 0 98 1 166 0 99 1 166 0 100 1 166 0 101 1 166 0 102 1 166 0 103 1 166 0 104 1 166 0 105 1 166 0 106 1 166 0 107 1 166 0 108 1 166 0 109 1 166 0 110 1 166 0 111 1 166 0 112 1 166 0 113 1 166 0 114 1 166 0 115 1 166 0 134 1 166 0 137] 
#[0 5 57 0 27] 
#[0 1 170 0 27 0 68 0 86 0 88 0 111 0 114 0 118 0 119 0 120 0 123 0 127 0 130] 
#[1 5 61 0 27 5 65 0 111 5 69 0 114 5 73 1 145] 
#[1 1 174 0 27 5 77 0 68 1 174 0 86 1 174 0 88 1 174 0 111 1 174 0 114 5 81 1 157] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 5 85 1 98 1 13 1 199] 
#[0 5 89 0 86] 
#[1 5 93 0 27 5 65 0 111 5 69 0 114 5 73 1 145] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 5 97 1 98 1 13 1 199] 
#[0 1 178 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 1 182 0 9 0 27 0 41 0 56 0 57 0 62 0 65 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 1 186 0 9 0 27 0 41 0 56 0 57 0 62 0 65 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[1 0 231 0 20 1 190 0 28] 
#[0 0 198 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 1 102 0 1 1 102 0 2 1 102 0 4 1 102 0 6 1 102 0 7 0 235 0 9 1 102 0 10 1 102 0 11 1 102 0 13 1 102 0 16 1 102 0 17 1 102 0 20 1 102 0 21 1 102 0 24 1 102 0 26 1 102 0 27 0 239 0 28 1 102 0 29 1 102 0 31 1 102 0 33 1 102 0 34 1 102 0 35 0 243 0 36 1 102 0 37 1 102 0 38 1 102 0 39 1 102 0 42 1 102 0 43 1 102 0 44 1 102 0 46 1 102 0 48 1 102 0 50 1 102 0 55 1 102 0 61 1 102 0 70 1 102 0 77 1 102 0 85 1 102 0 86 1 102 0 87 1 102 0 88 1 102 0 89 1 102 0 90 1 102 0 91 1 102 0 92 1 102 0 93 1 102 0 94 1 102 0 95 1 102 0 96 1 102 0 97 1 102 0 98 1 102 0 99 1 102 0 100 1 102 0 101 1 102 0 102 1 102 0 103 1 102 0 104 1 102 0 105 1 102 0 106 1 102 0 107 1 102 0 108 1 102 0 109 1 102 0 110 1 102 0 111 1 102 0 112 1 102 0 113 1 102 0 114 1 102 0 115 1 102 0 122 1 102 0 125 1 102 0 126 1 102 0 129 1 102 0 132 1 102 0 133 1 102 0 134 1 102 0 135 1 102 0 137 4 169 0 234 4 173 1 177] 
#[0 0 202 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 206 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 210 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 214 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 218 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 222 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 226 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 230 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 234 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 1 194 0 16 1 194 0 35 5 105 1 167] 
#[0 5 109 0 35] 
#[1 5 113 0 71 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 5 117 1 98 1 13 1 199] 
#[0 1 198 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[1 5 189 0 4 5 189 0 6 5 189 0 11 5 189 0 13 5 189 0 17 5 189 0 24 5 189 0 28 5 189 0 29 5 189 0 31 5 189 0 33 5 161 0 35 5 165 0 42 5 189 0 44 5 189 0 46 5 189 0 49 5 189 0 50 5 185 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 5 189 0 208 5 189 0 209 5 189 1 58 5 189 1 68 5 189 1 72 5 189 1 76 5 189 1 80 1 13 1 97 5 217 1 98 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 5 221 0 10 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 0 10 0 41 5 225 0 42 4 13 0 49 0 247 0 57 3 13 0 64 0 10 0 65 3 17 0 71 3 21 0 72 3 25 0 75 0 251 0 77 3 33 0 78 3 37 0 79 0 10 0 81 0 10 0 82 0 255 0 85 1 3 0 86 1 7 0 87 1 11 0 88 1 15 0 89 1 19 0 90 1 23 0 91 1 27 0 92 1 31 0 93 1 35 0 94 1 39 0 95 1 43 0 96 1 47 0 97 1 51 0 98 1 55 0 99 1 59 0 100 1 63 0 101 1 67 0 102 1 71 0 103 1 75 0 104 1 79 0 105 1 83 0 106 1 87 0 107 1 91 0 108 1 95 0 109 1 99 0 110 1 103 0 111 1 107 0 112 1 111 0 113 1 115 0 114 1 119 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 5 229 0 134 1 123 0 137 3 97 0 165 3 101 0 166 3 101 0 167 5 233 0 168 5 237 0 171 5 237 0 172 5 237 0 175 5 249 0 178 3 109 0 234 5 253 0 237 0 29 0 239 6 1 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 1 202 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 41 0 42 0 43 0 44 0 46 0 48 0 50 0 56 0 57 0 61 0 62 0 65 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 1 206 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 1 210 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 1 214 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[1 0 10 0 41 2 93 0 82 1 127 0 89 2 173 0 94 1 131 0 108 1 135 0 109 1 139 0 110 1 143 0 111 1 147 0 112 1 151 0 113 1 155 0 114 1 159 0 115 1 163 0 137 6 9 0 233 6 13 0 237 0 29 0 239 2 85 1 100 2 213 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 217 1 165 2 109 1 174 2 117 1 175 2 117 1 176] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 6 17 0 22 6 21 0 23 2 253 0 28 3 1 0 42 6 25 0 43 4 13 0 49 3 9 0 57 3 13 0 64 6 29 0 67 6 33 0 68 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 37 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 41 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 6 45 1 5 6 49 1 8 6 53 1 9 6 57 1 10 6 61 1 11 6 65 1 12 6 69 1 13 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 1 218 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[1 1 193 0 28 6 73 0 42 1 81 0 89 1 81 0 108 1 81 0 109 1 81 0 110 1 81 0 111 1 81 0 112 1 81 0 113 1 81 0 114 1 81 0 115 6 77 0 134 1 81 0 137 6 85 1 99 1 81 1 100 1 85 1 163 6 81 1 164 6 85 1 189] 
#[0 1 222 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 1 81 0 89 1 81 0 108 1 81 0 109 1 81 0 110 1 81 0 111 1 81 0 112 1 81 0 113 1 81 0 114 1 81 0 115 1 81 0 137 6 89 1 99 1 81 1 100 1 85 1 163 6 89 1 189] 
#[0 1 226 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 129 0 2 6 145 0 4 6 97 0 6 1 201 0 9 6 145 0 11 6 141 0 13 6 141 0 17 6 101 0 20 6 145 0 24 6 105 0 28 6 137 0 29 6 133 0 31 6 129 0 33 5 161 0 35 6 113 0 42 6 117 0 44 6 121 0 46 6 145 0 50 6 149 1 28 6 129 1 54 6 133 1 58 6 137 1 72 6 141 1 76 6 145 1 80 6 149 1 91 6 153 1 95 6 157 1 164] 
#[0 1 230 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 161 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 1 234 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 1 167 0 1 0 150 0 2 2 229 0 3 0 150 0 4 0 150 0 5 0 150 0 6 0 150 0 7 0 150 0 8 1 171 0 9 0 150 0 10 0 150 0 11 0 150 0 12 0 150 0 13 1 175 0 14 0 150 0 15 0 150 0 16 1 179 0 17 1 183 0 18 0 150 0 19 0 27 0 20 0 150 0 21 0 150 0 24 0 150 0 25 0 150 0 26 0 150 0 27 1 187 0 28 0 150 0 29 0 150 0 30 0 150 0 31 0 150 0 32 0 150 0 33 0 150 0 34 0 150 0 35 0 150 0 36 0 150 0 37 0 150 0 38 0 150 0 39 0 150 0 40 1 191 0 42 0 150 0 43 0 150 0 44 0 150 0 45 0 150 0 46 0 150 0 47 0 150 0 48 4 13 0 49 0 150 0 50 0 150 0 51 3 9 0 57 0 150 0 61 3 13 0 64 0 150 0 70 3 17 0 71 3 21 0 72 6 165 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 195 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 199 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 203 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 0 150 0 122 3 69 0 123 3 73 0 124 0 150 0 125 0 150 0 126 3 77 0 127 3 81 0 128 0 150 0 129 3 85 0 130 3 89 0 131 0 150 0 132 0 150 0 133 1 207 0 134 0 150 0 135 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 6 169 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 6 169 1 86 6 169 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 1 238 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 1 242 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 1 246 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[0 1 250 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[0 1 254 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 177 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 2 2 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 181 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 2 6 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 185 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 2 10 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 189 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 6 17 0 22 6 21 0 23 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 6 29 0 67 6 33 0 68 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 37 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 6 193 0 135 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 41 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 6 197 1 5 6 49 1 8 6 53 1 9 6 57 1 10 6 61 1 11 6 65 1 12 6 69 1 13 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 6 201 0 34 6 205 0 110 6 209 0 115 4 237 0 134 6 221 0 164 6 217 1 18 6 221 1 23] 
#[0 2 14 0 10 0 16 0 26 0 27 0 32 0 34 0 36 0 43 0 110 0 115 0 134 0 135] 
#[0 2 18 0 10 0 16 0 26 0 27 0 32 0 34 0 36 0 43 0 110 0 115 0 134 0 135] 
#[1 5 1 0 9 6 225 0 166 6 225 0 167] 
#[1 2 22 0 10 2 22 0 16 6 229 0 247] 
#[1 2 26 0 10 2 26 0 16 6 233 1 31] 
#[1 1 211 0 1 2 30 0 2 2 30 0 4 2 30 0 6 2 30 0 7 1 211 0 9 2 30 0 10 2 30 0 11 2 30 0 13 2 30 0 16 2 30 0 17 1 211 0 20 2 30 0 21 2 30 0 24 2 30 0 26 2 30 0 27 1 211 0 28 2 30 0 29 2 30 0 31 2 30 0 33 2 30 0 34 2 30 0 35 1 211 0 36 1 211 0 37 2 30 0 38 2 30 0 39 1 211 0 42 2 30 0 43 2 30 0 44 2 30 0 46 2 30 0 48 2 30 0 50 2 30 0 61 2 30 0 70 2 30 0 86 2 30 0 110 2 30 0 115 2 30 0 122 2 30 0 125 2 30 0 126 2 30 0 129 2 30 0 132 2 30 0 133 2 30 0 134 2 30 0 135 6 237 1 37 6 241 1 88 6 245 1 94] 
#[0 2 38 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 42 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 46 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 50 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 54 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 58 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 62 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[1 2 66 0 1 2 66 0 2 2 66 0 4 2 66 0 6 2 66 0 7 2 66 0 9 2 66 0 10 2 66 0 11 2 66 0 13 2 66 0 16 2 66 0 17 2 66 0 20 2 66 0 21 2 66 0 24 2 66 0 26 2 66 0 27 2 66 0 28 2 66 0 29 2 66 0 31 2 66 0 33 2 66 0 34 2 66 0 35 2 66 0 36 2 66 0 37 2 66 0 38 2 66 0 39 2 66 0 42 2 66 0 43 2 66 0 44 2 66 0 46 2 66 0 48 2 66 0 50 2 66 0 61 2 66 0 70 2 66 0 86 2 66 0 110 2 66 0 115 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 2 66 0 122 3 69 0 123 3 73 0 124 2 66 0 125 2 66 0 126 3 77 0 127 3 81 0 128 2 66 0 129 3 85 0 130 3 89 0 131 2 66 0 132 2 66 0 133 2 66 0 134 2 66 0 135 6 249 0 255 4 61 1 192 4 65 1 195] 
#[0 2 70 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 74 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 78 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 82 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 86 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 90 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 94 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 98 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 102 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 253 0 10 7 1 0 16] 
#[1 2 26 0 10 2 26 0 16 7 5 1 31] 
#[1 2 106 0 1 2 106 0 2 2 106 0 4 2 106 0 6 2 106 0 7 2 106 0 9 2 106 0 10 2 106 0 11 2 106 0 13 2 106 0 16 2 106 0 17 2 106 0 20 1 215 0 21 2 106 0 24 2 106 0 26 2 106 0 27 2 106 0 28 2 106 0 29 2 106 0 31 2 106 0 33 2 106 0 34 2 106 0 35 2 106 0 36 2 106 0 37 2 106 0 38 2 106 0 39 2 106 0 42 2 106 0 43 2 106 0 44 2 106 0 46 2 106 0 48 2 106 0 50 2 106 0 61 2 106 0 70 2 106 0 86 2 106 0 110 2 106 0 115 2 106 0 122 2 106 0 125 2 106 0 126 2 106 0 129 2 106 0 132 2 106 0 133 2 106 0 134 2 106 0 135] 
#[1 2 110 0 1 2 110 0 2 2 110 0 4 2 110 0 6 2 110 0 7 2 110 0 9 2 110 0 10 2 110 0 11 2 110 0 13 2 110 0 16 2 110 0 17 2 110 0 20 1 219 0 21 2 110 0 24 2 110 0 26 2 110 0 27 2 110 0 28 2 110 0 29 2 110 0 31 2 110 0 33 2 110 0 34 2 110 0 35 2 110 0 36 2 110 0 37 1 223 0 38 2 110 0 39 2 110 0 42 2 110 0 43 2 110 0 44 2 110 0 46 2 110 0 48 2 110 0 50 2 110 0 61 2 110 0 70 2 110 0 86 2 110 0 110 2 110 0 115 2 110 0 122 2 110 0 125 2 110 0 126 2 110 0 129 2 110 0 132 2 110 0 133 2 110 0 134 2 110 0 135] 
#[1 2 114 0 1 2 114 0 2 2 114 0 4 2 114 0 6 2 114 0 7 2 114 0 9 2 114 0 10 2 114 0 11 2 114 0 13 2 114 0 16 2 114 0 17 2 114 0 20 2 114 0 21 2 114 0 24 2 114 0 26 2 114 0 27 2 114 0 28 2 114 0 29 2 114 0 31 2 114 0 33 2 114 0 34 2 114 0 35 1 227 0 36 2 114 0 37 2 114 0 38 2 114 0 39 2 114 0 42 2 114 0 43 2 114 0 44 2 114 0 46 2 114 0 48 2 114 0 50 2 114 0 61 2 114 0 70 2 114 0 86 2 114 0 110 2 114 0 115 2 114 0 122 2 114 0 125 2 114 0 126 2 114 0 129 2 114 0 132 2 114 0 133 2 114 0 134 2 114 0 135] 
#[1 2 118 0 1 2 118 0 2 2 118 0 4 2 118 0 6 2 118 0 7 2 118 0 9 2 118 0 10 2 118 0 11 2 118 0 13 2 118 0 16 2 118 0 17 2 118 0 20 2 118 0 21 2 118 0 24 2 118 0 26 2 118 0 27 2 118 0 28 2 118 0 29 2 118 0 31 2 118 0 33 2 118 0 34 2 118 0 35 2 118 0 36 2 118 0 37 2 118 0 38 1 231 0 39 2 118 0 42 2 118 0 43 2 118 0 44 2 118 0 46 2 118 0 48 2 118 0 50 2 118 0 61 2 118 0 70 2 118 0 86 2 118 0 110 2 118 0 115 2 118 0 122 2 118 0 125 2 118 0 126 2 118 0 129 2 118 0 132 2 118 0 133 2 118 0 134 2 118 0 135 7 29 1 43 7 33 1 44] 
#[1 2 122 0 1 2 122 0 2 2 122 0 4 2 122 0 6 2 122 0 7 2 122 0 9 2 122 0 10 2 122 0 11 2 122 0 13 2 122 0 16 2 122 0 17 2 122 0 20 2 122 0 21 2 122 0 24 2 122 0 26 2 122 0 27 2 122 0 28 2 122 0 29 2 122 0 31 2 122 0 33 2 122 0 34 2 122 0 35 2 122 0 36 2 122 0 37 2 122 0 38 2 122 0 39 2 122 0 42 2 122 0 43 2 122 0 44 2 122 0 46 1 235 0 48 2 122 0 50 2 122 0 61 2 122 0 70 2 122 0 86 2 122 0 110 2 122 0 115 2 122 0 122 2 122 0 125 2 122 0 126 2 122 0 129 2 122 0 132 2 122 0 133 2 122 0 134 2 122 0 135 7 41 1 46 7 45 1 47] 
#[1 2 126 0 1 2 126 0 2 2 126 0 4 2 126 0 6 1 239 0 7 2 126 0 9 2 126 0 10 2 126 0 11 2 126 0 13 2 126 0 16 2 126 0 17 2 126 0 20 2 126 0 21 2 126 0 24 2 126 0 26 2 126 0 27 2 126 0 28 2 126 0 29 2 126 0 31 2 126 0 33 2 126 0 34 2 126 0 35 2 126 0 36 2 126 0 37 2 126 0 38 2 126 0 39 2 126 0 42 2 126 0 43 2 126 0 44 2 126 0 46 2 126 0 48 2 126 0 50 2 126 0 61 2 126 0 70 2 126 0 86 2 126 0 110 2 126 0 115 2 126 0 122 2 126 0 125 2 126 0 126 2 126 0 129 2 126 0 132 2 126 0 133 2 126 0 134 2 126 0 135 7 53 1 49 7 57 1 50] 
#[1 2 130 0 1 1 243 0 2 2 130 0 4 2 130 0 6 2 130 0 7 2 130 0 9 2 130 0 10 2 130 0 11 2 130 0 13 2 130 0 16 2 130 0 17 2 130 0 20 2 130 0 21 2 130 0 24 2 130 0 26 2 130 0 27 2 130 0 28 2 130 0 29 2 130 0 31 1 247 0 33 2 130 0 34 2 130 0 35 2 130 0 36 2 130 0 37 2 130 0 38 2 130 0 39 2 130 0 42 2 130 0 43 2 130 0 44 2 130 0 46 2 130 0 48 2 130 0 50 2 130 0 61 2 130 0 70 2 130 0 86 2 130 0 110 2 130 0 115 2 130 0 122 2 130 0 125 2 130 0 126 2 130 0 129 2 130 0 132 2 130 0 133 2 130 0 134 2 130 0 135 7 61 1 52 7 65 1 53 7 69 1 54] 
#[1 2 134 0 1 2 134 0 2 2 134 0 4 2 134 0 6 2 134 0 7 2 134 0 9 2 134 0 10 2 134 0 11 2 134 0 13 2 134 0 16 2 134 0 17 2 134 0 20 2 134 0 21 2 134 0 24 2 134 0 26 2 134 0 27 1 251 0 28 2 134 0 29 1 255 0 31 2 134 0 33 2 134 0 34 2 3 0 35 2 134 0 36 2 134 0 37 2 134 0 38 2 134 0 39 2 134 0 42 2 134 0 43 2 134 0 44 2 134 0 46 2 134 0 48 2 134 0 50 2 134 0 61 2 7 0 70 2 11 0 86 2 134 0 110 2 134 0 115 2 134 0 122 2 134 0 125 2 134 0 126 2 134 0 129 2 134 0 132 2 134 0 133 2 134 0 134 2 134 0 135 7 85 1 56 7 89 1 57 7 93 1 58 7 97 1 101 7 101 1 102 7 105 1 103 7 109 1 104] 
#[1 2 138 0 1 2 138 0 2 2 138 0 4 2 138 0 6 2 138 0 7 2 138 0 9 2 138 0 10 2 138 0 11 2 138 0 13 2 138 0 16 2 138 0 17 2 138 0 20 2 138 0 21 2 138 0 24 2 138 0 26 2 138 0 27 2 138 0 28 2 138 0 29 2 138 0 31 2 138 0 33 2 138 0 34 2 138 0 35 2 138 0 36 2 138 0 37 2 138 0 38 2 138 0 39 2 138 0 42 2 138 0 43 2 138 0 44 2 15 0 46 2 138 0 48 2 138 0 50 2 138 0 61 2 138 0 70 2 138 0 86 2 138 0 110 2 138 0 115 2 138 0 122 2 138 0 125 2 138 0 126 2 138 0 129 2 138 0 132 2 138 0 133 2 138 0 134 2 138 0 135 7 117 1 60 7 121 1 61] 
#[1 2 142 0 1 2 142 0 2 2 142 0 4 2 142 0 6 2 142 0 7 2 142 0 9 2 142 0 10 2 142 0 11 2 142 0 13 2 142 0 16 2 142 0 17 2 142 0 20 2 142 0 21 2 142 0 24 2 142 0 26 2 142 0 27 2 142 0 28 2 142 0 29 2 142 0 31 2 142 0 33 2 142 0 34 2 142 0 35 2 142 0 36 2 142 0 37 2 142 0 38 2 142 0 39 2 142 0 42 2 142 0 43 2 19 0 44 2 142 0 46 2 142 0 48 2 142 0 50 2 142 0 61 2 142 0 70 2 142 0 86 2 142 0 110 2 142 0 115 2 142 0 122 2 142 0 125 2 142 0 126 2 142 0 129 2 142 0 132 2 142 0 133 2 142 0 134 2 142 0 135 7 129 1 63 7 133 1 64] 
#[1 2 146 0 1 2 146 0 2 2 146 0 4 2 23 0 6 2 146 0 7 2 146 0 9 2 146 0 10 2 146 0 11 2 146 0 13 2 146 0 16 2 146 0 17 2 146 0 20 2 146 0 21 2 146 0 24 2 146 0 26 2 146 0 27 2 146 0 28 2 146 0 29 2 146 0 31 2 146 0 33 2 146 0 34 2 146 0 35 2 146 0 36 2 146 0 37 2 146 0 38 2 146 0 39 2 146 0 42 2 146 0 43 2 146 0 44 2 146 0 46 2 146 0 48 2 146 0 50 2 146 0 61 2 146 0 70 2 146 0 86 2 146 0 110 2 146 0 115 2 146 0 122 2 146 0 125 2 146 0 126 2 146 0 129 2 146 0 132 2 146 0 133 2 146 0 134 2 146 0 135 7 141 1 66 7 145 1 67] 
#[1 2 150 0 1 2 150 0 2 2 150 0 4 2 150 0 6 2 150 0 7 2 150 0 9 2 150 0 10 2 150 0 11 2 150 0 13 2 150 0 16 2 150 0 17 2 150 0 20 2 150 0 21 2 150 0 24 2 150 0 26 2 150 0 27 2 150 0 28 2 27 0 29 2 150 0 31 2 150 0 33 2 150 0 34 2 31 0 35 2 150 0 36 2 150 0 37 2 150 0 38 2 150 0 39 2 150 0 42 2 150 0 43 2 150 0 44 2 150 0 46 2 150 0 48 2 150 0 50 2 150 0 61 2 150 0 70 2 150 0 86 2 150 0 110 2 150 0 115 2 150 0 122 2 150 0 125 2 150 0 126 2 150 0 129 2 150 0 132 2 150 0 133 2 150 0 134 2 150 0 135 7 153 1 70 7 157 1 71 7 161 1 72] 
#[1 2 154 0 1 2 154 0 2 2 154 0 4 2 154 0 6 2 154 0 7 2 154 0 9 2 154 0 10 2 154 0 11 2 35 0 13 2 154 0 16 2 39 0 17 2 154 0 20 2 154 0 21 2 154 0 24 2 154 0 26 2 154 0 27 2 154 0 28 2 154 0 29 2 154 0 31 2 154 0 33 2 154 0 34 2 154 0 35 2 154 0 36 2 154 0 37 2 154 0 38 2 154 0 39 2 154 0 42 2 154 0 43 2 154 0 44 2 154 0 46 2 154 0 48 2 154 0 50 2 154 0 61 2 154 0 70 2 154 0 86 2 154 0 110 2 154 0 115 2 154 0 122 2 154 0 125 2 154 0 126 2 154 0 129 2 154 0 132 2 154 0 133 2 154 0 134 2 154 0 135 7 165 1 74 7 169 1 75 7 173 1 76] 
#[1 2 158 0 1 2 158 0 2 2 43 0 4 2 158 0 6 2 158 0 7 2 158 0 9 2 158 0 10 2 47 0 11 2 158 0 13 2 158 0 16 2 158 0 17 2 158 0 20 2 158 0 21 2 51 0 24 2 158 0 26 2 158 0 27 2 158 0 28 2 158 0 29 2 158 0 31 2 158 0 33 2 158 0 34 2 158 0 35 2 158 0 36 2 158 0 37 2 158 0 38 2 158 0 39 2 158 0 42 2 158 0 43 2 158 0 44 2 158 0 46 2 158 0 48 2 55 0 50 2 158 0 61 2 158 0 70 2 158 0 86 2 158 0 110 2 158 0 115 2 158 0 122 2 158 0 125 2 158 0 126 2 158 0 129 2 158 0 132 2 158 0 133 2 158 0 134 2 158 0 135 7 177 1 78 7 181 1 79 7 185 1 80] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 6 165 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 7 189 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 7 189 1 86 7 189 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 2 162 0 1 2 162 0 3 2 162 0 9 2 162 0 14 2 162 0 17 2 162 0 18 2 162 0 28 2 162 0 42 2 162 0 49 2 162 0 57 2 162 0 64 2 162 0 71 2 162 0 72 2 59 0 75 2 162 0 77 2 162 0 79 2 162 0 85 2 162 0 86 2 162 0 87 2 162 0 88 2 162 0 89 2 162 0 90 2 162 0 91 2 162 0 92 2 162 0 93 2 162 0 94 2 162 0 95 2 162 0 96 2 162 0 97 2 162 0 98 2 162 0 99 2 162 0 100 2 162 0 101 2 162 0 102 2 162 0 103 2 162 0 104 2 162 0 105 2 162 0 106 2 162 0 107 2 162 0 108 2 162 0 109 2 162 0 110 2 162 0 111 2 162 0 112 2 162 0 113 2 162 0 114 2 162 0 115 2 162 0 116 2 162 0 117 2 162 0 118 2 162 0 119 2 162 0 120 2 162 0 121 2 162 0 123 2 162 0 124 2 162 0 127 2 162 0 128 2 162 0 130 2 162 0 131 2 162 0 134 2 162 0 137] 
#[0 2 166 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[1 2 170 0 1 2 170 0 3 2 170 0 9 2 170 0 14 2 170 0 17 2 170 0 18 2 170 0 28 2 170 0 42 2 170 0 49 2 170 0 57 2 170 0 64 2 170 0 71 2 170 0 72 2 63 0 75 2 170 0 77 2 170 0 79 2 170 0 85 2 170 0 86 2 170 0 87 2 170 0 88 2 170 0 89 2 170 0 90 2 170 0 91 2 170 0 92 2 170 0 93 2 170 0 94 2 170 0 95 2 170 0 96 2 170 0 97 2 170 0 98 2 170 0 99 2 170 0 100 2 170 0 101 2 170 0 102 2 170 0 103 2 170 0 104 2 170 0 105 2 170 0 106 2 170 0 107 2 170 0 108 2 170 0 109 2 170 0 110 2 170 0 111 2 170 0 112 2 170 0 113 2 170 0 114 2 170 0 115 2 170 0 116 2 170 0 117 2 170 0 118 2 170 0 119 2 170 0 120 2 170 0 121 2 170 0 123 2 170 0 124 2 170 0 127 2 170 0 128 2 170 0 130 2 170 0 131 2 170 0 134 2 170 0 137] 
#[0 2 174 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 178 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 2 229 0 3 2 233 0 9 2 253 0 28 3 1 0 42 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 6 165 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 7 201 0 248 7 201 0 249 7 201 0 250 7 201 0 251 7 201 0 252 7 201 0 253 7 201 0 254 3 149 0 255 3 153 1 0 7 201 1 3 7 201 1 4 7 201 1 14 7 201 1 17 7 201 1 22 7 201 1 25 7 201 1 26 7 201 1 27 7 205 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 7 201 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 8 9 0 5 8 9 0 8 8 9 0 12 8 13 0 14 8 9 0 15 8 13 0 18 8 9 0 19 8 9 0 25 8 9 0 30 7 237 0 32 7 241 0 35 8 9 0 40 8 9 0 45 8 9 0 47 8 9 0 51 8 5 1 39 8 9 1 40 8 13 1 89 8 13 1 92] 
#[1 2 182 0 1 2 182 0 2 2 182 0 4 2 186 0 5 2 182 0 6 2 182 0 7 2 186 0 8 2 182 0 9 2 182 0 10 2 182 0 11 2 186 0 12 2 182 0 13 2 186 0 14 2 186 0 15 2 182 0 16 2 182 0 17 2 186 0 18 2 186 0 19 2 182 0 20 2 182 0 21 2 182 0 24 2 186 0 25 8 21 0 26 2 182 0 27 2 182 0 28 2 182 0 29 2 186 0 30 2 182 0 31 2 186 0 32 2 182 0 33 2 67 0 35 2 182 0 36 2 182 0 37 2 182 0 38 2 182 0 39 2 186 0 40 2 182 0 42 2 182 0 44 2 186 0 45 2 182 0 46 2 186 0 47 2 182 0 48 2 182 0 50 2 186 0 51 2 182 0 70 2 182 0 86] 
#[0 0 246 0 9 0 27] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 8 25 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 8 29 0 20 1 193 0 28 8 33 1 164] 
#[1 8 37 0 42 8 41 0 134] 
#[1 1 201 0 9 8 45 1 28] 
#[0 2 190 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 194 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[0 2 198 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[1 0 10 0 41 0 10 0 56 0 10 0 57 0 10 0 62 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 1 121 0 145 1 125 0 237 0 29 0 239 2 202 1 200] 
#[1 8 49 0 32 8 53 0 63 8 57 0 84 8 61 0 96 8 65 0 134 8 69 0 188 8 73 0 189 8 77 0 190] 
#[0 2 206 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 4 121 0 28 2 210 0 32 2 210 0 63 2 210 0 84 2 210 0 96 2 210 0 134 8 81 0 234] 
#[1 2 71 0 9 0 19 0 10 0 19 0 16 0 19 0 26 0 19 0 27 2 75 0 28 0 19 0 32 4 165 0 36 0 19 0 43 0 19 0 69 1 102 0 77 1 102 0 85 1 102 0 86 1 102 0 87 1 102 0 88 1 102 0 89 1 102 0 90 1 102 0 91 1 102 0 92 1 102 0 93 1 102 0 94 1 102 0 95 1 102 0 96 1 102 0 97 1 102 0 98 1 102 0 99 1 102 0 100 1 102 0 101 1 102 0 102 1 102 0 103 1 102 0 104 1 102 0 105 1 102 0 106 1 102 0 107 1 102 0 108 1 102 0 109 1 102 0 110 1 102 0 111 1 102 0 112 1 102 0 113 1 102 0 114 1 102 0 115 0 19 0 135 1 102 0 137 4 169 0 234 4 173 1 177] 
#[0 8 85 0 27] 
#[1 2 214 0 16 2 214 0 27 8 89 0 205] 
#[0 8 93 0 32] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 97 0 203 4 93 0 206 1 13 1 97 4 97 1 98 1 13 1 199] 
#[1 4 121 0 28 8 57 0 84 8 61 0 96 8 101 0 134 8 105 0 189 8 109 0 190 8 113 0 234] 
#[0 8 117 0 27] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 121 0 203 4 93 0 206 1 13 1 97 4 97 1 98 1 13 1 199] 
#[1 4 81 0 89 4 81 0 108 4 81 0 109 4 81 0 110 4 81 0 111 4 81 0 112 4 81 0 113 4 81 0 114 4 81 0 115 4 81 0 137 8 125 0 184 8 129 0 192 4 81 1 100] 
#[1 0 10 0 41 0 10 0 89 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 6 9 0 233 6 13 0 237 0 29 0 239] 
#[1 0 170 0 28 2 93 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 79 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 8 133 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[0 8 137 0 113] 
#[1 4 121 0 28 8 141 0 113 8 145 0 234] 
#[1 2 93 0 82 2 218 0 85 2 218 0 86 2 218 0 87 2 218 0 88 2 83 0 89 2 218 0 90 2 218 0 91 2 218 0 92 2 218 0 93 2 87 0 94 2 218 0 95 2 218 0 96 2 218 0 97 2 218 0 98 2 218 0 99 2 218 0 100 2 218 0 101 2 218 0 102 2 218 0 103 2 218 0 104 2 218 0 105 2 218 0 106 2 218 0 107 2 91 0 108 2 95 0 109 2 99 0 110 2 103 0 111 2 107 0 112 2 111 0 113 2 115 0 114 2 119 0 115 2 123 0 137 2 85 1 100 8 149 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 8 153 1 98 8 157 1 146 1 13 1 199] 
#[0 2 222 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 8 161 0 27] 
#[0 8 165 0 27] 
#[0 8 169 0 27] 
#[1 8 173 0 10 0 10 0 41 8 177 0 42 0 10 0 82 0 10 0 89 0 10 0 94 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 8 181 0 134 0 10 0 137 8 185 0 237 0 29 0 239 8 189 1 178 8 193 1 181 8 197 1 182 8 197 1 183 8 197 1 184] 
#[0 2 226 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 4 161 0 9 8 209 1 177] 
#[0 2 230 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 2 234 0 27 0 34 0 110 0 115 0 134] 
#[1 2 93 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 85 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 8 213 0 157 8 217 0 158 1 13 1 97 8 221 1 98 2 85 1 100 8 225 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 1 13 1 199] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 8 229 1 98 1 13 1 199] 
#[0 1 138 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[1 4 121 0 28 8 61 0 96 8 233 0 113 8 237 0 134 8 241 0 190 8 245 0 234] 
#[1 5 1 0 9 8 249 0 166 8 249 0 167] 
#[0 2 238 0 9 0 28] 
#[1 5 9 0 20 2 127 0 28 8 253 0 32 1 2 0 36 1 2 0 85 1 2 0 86 1 2 0 87 1 2 0 88 1 2 0 89 1 2 0 90 1 2 0 91 1 2 0 92 1 2 0 93 1 2 0 94 1 2 0 95 1 2 0 96 1 2 0 97 1 2 0 98 1 2 0 99 1 2 0 100 1 2 0 101 1 2 0 102 1 2 0 103 1 2 0 104 1 2 0 105 1 2 0 106 1 2 0 107 1 2 0 108 1 2 0 109 1 2 0 110 1 2 0 111 1 2 0 112 1 2 0 113 1 2 0 114 1 2 0 115 1 2 0 137 9 1 0 234] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 9 5 1 98 1 13 1 199] 
#[0 2 242 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 5 1 0 9 4 121 0 28 9 9 0 165 3 101 0 166 3 101 0 167 3 109 0 234] 
#[1 2 246 0 16 2 246 0 27 9 13 0 32 9 17 0 150] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 9 21 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 9 25 0 11 9 29 0 34 4 237 0 134 9 33 0 164] 
#[0 9 37 0 11] 
#[1 2 250 0 1 2 250 0 3 2 250 0 9 2 250 0 14 2 250 0 17 2 250 0 18 2 250 0 27 2 250 0 28 2 250 0 41 2 250 0 42 2 250 0 49 2 250 0 52 2 250 0 53 2 250 0 57 2 250 0 58 2 250 0 60 2 250 0 64 2 250 0 65 2 250 0 67 2 250 0 68 2 250 0 71 2 250 0 72 2 250 0 73 2 250 0 74 2 250 0 75 2 250 0 76 2 250 0 77 2 250 0 78 2 250 0 79 2 250 0 80 2 250 0 81 2 250 0 82 2 250 0 83 2 250 0 85 2 250 0 86 2 250 0 87 2 250 0 88 2 250 0 89 2 250 0 90 2 250 0 91 2 250 0 92 2 250 0 93 2 250 0 94 2 250 0 95 2 250 0 96 2 250 0 97 2 250 0 98 2 250 0 99 2 250 0 100 2 250 0 101 2 250 0 102 2 250 0 103 2 250 0 104 2 250 0 105 2 250 0 106 2 250 0 107 2 250 0 108 2 250 0 109 2 250 0 110 2 250 0 111 2 250 0 112 2 250 0 113 2 250 0 114 2 250 0 115 2 250 0 116 2 250 0 117 2 250 0 118 2 250 0 119 2 250 0 120 2 250 0 121 2 250 0 123 2 250 0 124 2 250 0 127 2 250 0 128 2 250 0 130 2 250 0 131 2 250 0 134 9 41 0 135 2 250 0 137 9 45 1 105 9 49 1 106 9 53 1 107] 
#[0 2 254 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 3 2 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 56 0 57 0 58 0 59 0 60 0 61 0 62 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137 1 200] 
#[0 3 6 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 3 10 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 5 221 0 10 0 10 0 41 9 57 0 42 0 10 0 57 0 10 0 65 0 10 0 77 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 9 61 0 134 0 10 0 137 5 233 0 168 5 237 0 171 5 237 0 172 5 237 0 175 5 249 0 178 5 253 0 237 0 29 0 239] 
#[0 3 14 0 27 0 34 0 110 0 115 0 134] 
#[0 9 65 0 89 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 100] 
#[0 0 94 0 9 0 28] 
#[1 0 98 0 9 0 98 0 28 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 9 69 1 98 1 13 1 199] 
#[1 0 138 0 9 0 138 0 28 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 9 73 1 98 1 13 1 199] 
#[1 5 1 0 9 4 121 0 28 9 77 0 165 3 101 0 166 3 101 0 167 3 109 0 234] 
#[1 4 161 0 9 4 121 0 28 4 169 0 234 4 173 1 177] 
#[0 3 18 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 3 22 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 3 26 0 1 3 26 0 2 3 26 0 4 3 26 0 6 3 26 0 7 3 26 0 9 3 26 0 10 3 26 0 11 3 26 0 13 3 26 0 16 3 26 0 17 3 26 0 20 3 26 0 21 3 26 0 24 3 26 0 26 3 26 0 27 3 26 0 28 3 26 0 29 3 26 0 31 3 26 0 33 3 26 0 34 3 26 0 35 2 131 0 36 3 26 0 37 3 26 0 38 3 26 0 39 3 26 0 42 3 26 0 43 3 26 0 44 3 26 0 46 3 26 0 48 3 26 0 50 3 26 0 55 3 26 0 61 3 26 0 70 3 26 0 77 3 26 0 84 3 26 0 85 3 26 0 86 3 26 0 87 3 26 0 88 3 26 0 89 3 26 0 90 3 26 0 91 3 26 0 92 3 26 0 93 3 26 0 94 3 26 0 95 3 26 0 96 3 26 0 97 3 26 0 98 3 26 0 99 3 26 0 100 3 26 0 101 3 26 0 102 3 26 0 103 3 26 0 104 3 26 0 105 3 26 0 106 3 26 0 107 3 26 0 108 3 26 0 109 3 26 0 110 3 26 0 111 3 26 0 112 3 26 0 113 3 26 0 114 3 26 0 115 3 26 0 122 3 26 0 125 3 26 0 126 3 26 0 129 3 26 0 132 3 26 0 133 3 26 0 134 3 26 0 135 3 26 0 137] 
#[1 5 29 0 94 2 109 1 174 9 85 1 175] 
#[0 3 30 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 3 34 0 10 0 16 0 27 0 35 0 43 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 134 0 137] 
#[0 3 38 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 3 42 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 8 153 1 98 9 89 1 146 1 13 1 199] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 8 153 1 98 9 93 1 146 1 13 1 199] 
#[0 3 46 0 27 0 111 0 114] 
#[0 9 97 0 9] 
#[0 3 50 0 27 0 68 0 86 0 88 0 111 0 114] 
#[1 1 50 0 27 1 50 0 111 1 50 0 114 9 101 1 144] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 9 105 1 98 1 13 1 199] 
#[0 3 54 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 3 58 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 9 109 0 71 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 9 113 1 98 1 13 1 199] 
#[1 9 117 0 16 3 62 0 35 9 121 1 166] 
#[0 3 66 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 3 70 0 9 0 27] 
#[0 3 74 0 9 0 27] 
#[0 3 78 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 3 82 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 86 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 3 90 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 3 94 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 3 98 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 3 102 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 3 106 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 3 110 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 3 114 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 3 118 0 1 3 118 0 2 3 118 0 3 3 118 0 4 3 118 0 6 3 118 0 7 3 118 0 9 3 118 0 10 3 118 0 11 3 118 0 13 3 118 0 14 3 118 0 16 3 118 0 17 3 118 0 18 3 118 0 20 3 118 0 21 3 118 0 24 3 118 0 26 3 118 0 27 3 118 0 28 3 118 0 29 3 118 0 31 9 125 0 32 3 118 0 33 3 118 0 34 2 135 0 35 3 118 0 36 3 118 0 37 3 118 0 38 3 118 0 39 3 118 0 42 3 118 0 43 3 118 0 44 3 118 0 46 3 118 0 48 3 118 0 49 3 118 0 50 3 118 0 57 3 118 0 61 3 118 0 64 3 118 0 70 3 118 0 71 3 118 0 72 3 118 0 75 3 118 0 77 3 118 0 79 3 118 0 85 3 118 0 86 3 118 0 87 3 118 0 88 3 118 0 89 3 118 0 90 3 118 0 91 3 118 0 92 3 118 0 93 3 118 0 94 3 118 0 95 3 118 0 96 3 118 0 97 3 118 0 98 3 118 0 99 3 118 0 100 3 118 0 101 3 118 0 102 3 118 0 103 3 118 0 104 3 118 0 105 3 118 0 106 3 118 0 107 3 118 0 108 3 118 0 109 3 118 0 110 3 118 0 111 3 118 0 112 3 118 0 113 3 118 0 114 3 118 0 115 3 118 0 116 3 118 0 117 3 118 0 118 3 118 0 119 3 118 0 120 3 118 0 121 3 118 0 122 3 118 0 123 3 118 0 124 3 118 0 125 3 118 0 126 3 118 0 127 3 118 0 128 3 118 0 129 3 118 0 130 3 118 0 131 3 118 0 132 3 118 0 133 3 118 0 134 3 118 0 135 3 118 0 137] 
#[0 9 133 0 43] 
#[0 3 122 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 126 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 130 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 134 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 3 138 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 142 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 146 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 150 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 154 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 158 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 162 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 166 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 0 190 0 1 0 190 0 2 0 190 0 4 0 190 0 6 0 190 0 7 0 190 0 9 0 190 0 10 0 190 0 11 0 190 0 13 0 190 0 16 0 190 0 17 0 190 0 20 0 190 0 21 0 190 0 24 0 190 0 26 0 190 0 27 0 190 0 28 0 190 0 29 0 190 0 31 0 190 0 33 0 190 0 34 0 190 0 35 0 190 0 36 0 190 0 37 0 190 0 38 0 190 0 39 0 190 0 42 0 190 0 43 0 190 0 44 0 190 0 46 0 190 0 48 0 190 0 50 0 190 0 61 0 190 0 70 0 190 0 86 0 190 0 110 0 190 0 115 0 190 0 122 0 190 0 125 0 190 0 126 0 190 0 129 0 190 0 132 0 190 0 133 0 190 0 134 0 190 0 135 9 137 1 140] 
#[0 3 170 0 10 0 16 0 26 0 27 0 32 0 34 0 36 0 43 0 110 0 115 0 134 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 6 17 0 22 6 21 0 23 2 253 0 28 0 10 0 41 3 1 0 42 6 25 0 43 4 13 0 49 0 247 0 57 3 13 0 64 0 10 0 65 6 29 0 67 6 33 0 68 3 17 0 71 3 21 0 72 3 25 0 75 0 251 0 77 3 33 0 78 3 37 0 79 0 10 0 81 0 10 0 82 0 255 0 85 1 3 0 86 1 7 0 87 1 11 0 88 1 15 0 89 1 19 0 90 1 23 0 91 1 27 0 92 1 31 0 93 1 35 0 94 1 39 0 95 1 43 0 96 1 47 0 97 1 51 0 98 1 55 0 99 1 59 0 100 1 63 0 101 1 67 0 102 1 71 0 103 1 75 0 104 1 79 0 105 1 83 0 106 1 87 0 107 2 139 0 108 1 95 0 109 1 99 0 110 1 103 0 111 1 107 0 112 1 111 0 113 1 115 0 114 1 119 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 123 0 137 3 97 0 165 3 101 0 166 3 101 0 167 9 141 0 178 9 145 0 182 3 109 0 234 5 253 0 237 0 29 0 239 6 41 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 6 45 1 5 6 49 1 8 6 53 1 9 6 57 1 10 6 61 1 11 6 65 1 12 6 69 1 13 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 6 17 0 22 6 21 0 23 2 253 0 28 0 10 0 41 3 1 0 42 4 13 0 49 0 247 0 57 3 13 0 64 0 10 0 65 6 29 0 67 6 33 0 68 3 17 0 71 3 21 0 72 3 25 0 75 0 251 0 77 3 33 0 78 3 37 0 79 0 10 0 81 0 10 0 82 0 255 0 85 1 3 0 86 1 7 0 87 1 11 0 88 1 15 0 89 1 19 0 90 1 23 0 91 1 27 0 92 1 31 0 93 1 35 0 94 1 39 0 95 1 43 0 96 1 47 0 97 1 51 0 98 1 55 0 99 1 59 0 100 1 63 0 101 1 67 0 102 1 71 0 103 2 143 0 104 1 79 0 105 1 83 0 106 1 87 0 107 2 139 0 108 1 95 0 109 1 99 0 110 1 103 0 111 1 107 0 112 1 111 0 113 1 115 0 114 1 119 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 6 193 0 135 1 123 0 137 3 97 0 165 3 101 0 166 3 101 0 167 9 153 0 178 9 157 0 183 3 109 0 234 5 253 0 237 0 29 0 239 6 41 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 6 197 1 5 6 49 1 8 6 53 1 9 6 57 1 10 6 61 1 11 6 65 1 12 6 69 1 13 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 9 161 0 10 9 165 0 16] 
#[0 9 169 0 10] 
#[0 3 174 0 10] 
#[0 3 178 0 10] 
#[1 3 182 0 10 3 182 0 16 9 173 0 170] 
#[1 9 177 0 57 9 181 0 65 9 185 0 77 9 201 0 81 2 93 0 82 9 221 0 85 9 221 0 86 9 189 0 87 9 221 0 88 1 29 0 89 9 221 0 90 9 221 0 91 9 221 0 92 9 221 0 93 4 85 0 94 9 221 0 95 9 221 0 96 9 221 0 97 9 221 0 98 9 193 0 99 9 221 0 100 9 221 0 101 9 221 0 102 9 221 0 103 9 221 0 104 9 221 0 105 9 221 0 106 9 221 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 9 197 0 153 9 201 0 154 9 201 0 156 9 209 0 179 9 213 0 180 9 217 0 181 9 221 1 97 9 225 1 98 2 85 1 100 9 229 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 9 221 1 199] 
#[0 9 233 0 10] 
#[1 2 67 0 1 2 67 0 2 2 67 0 4 2 186 0 5 2 67 0 6 2 67 0 7 2 186 0 8 2 67 0 9 2 67 0 10 2 67 0 11 2 186 0 12 2 67 0 13 2 186 0 14 2 186 0 15 2 67 0 16 2 67 0 17 2 186 0 18 2 186 0 19 2 67 0 20 2 67 0 21 2 67 0 24 2 186 0 25 2 67 0 26 2 67 0 27 2 67 0 28 2 67 0 29 2 186 0 30 2 67 0 31 2 186 0 32 2 67 0 33 2 67 0 34 2 67 0 35 2 67 0 36 2 67 0 37 2 67 0 38 2 67 0 39 2 186 0 40 2 67 0 42 2 67 0 43 2 67 0 44 2 186 0 45 2 67 0 46 2 186 0 47 2 67 0 48 2 67 0 50 2 186 0 51 2 67 0 61 2 67 0 70 2 67 0 86 2 67 0 110 2 67 0 115 2 67 0 122 2 67 0 125 2 67 0 126 2 67 0 129 2 67 0 132 2 67 0 133 2 67 0 134 2 67 0 135] 
#[1 3 186 0 16 3 186 0 35 9 237 0 236] 
#[0 9 241 0 89 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 100] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 9 245 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 9 249 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 3 190 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 9 253 0 9] 
#[0 10 1 0 9] 
#[1 1 167 0 1 0 150 0 2 2 229 0 3 0 150 0 4 0 150 0 5 0 150 0 6 0 150 0 7 0 150 0 8 1 171 0 9 0 150 0 11 0 150 0 12 0 150 0 13 1 175 0 14 0 150 0 15 0 150 0 16 1 179 0 17 1 183 0 18 0 150 0 19 0 27 0 20 0 150 0 21 0 150 0 24 0 150 0 25 0 150 0 26 1 187 0 28 0 150 0 29 0 150 0 30 0 150 0 31 0 150 0 32 0 150 0 33 0 150 0 35 0 150 0 36 0 150 0 37 0 150 0 38 0 150 0 39 0 150 0 40 1 191 0 42 0 150 0 43 0 150 0 44 0 150 0 45 0 150 0 46 0 150 0 47 0 150 0 48 4 13 0 49 0 150 0 50 0 150 0 51 3 9 0 57 0 150 0 61 3 13 0 64 10 5 0 67 0 150 0 70 3 17 0 71 3 21 0 72 6 165 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 195 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 0 150 0 135 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 6 169 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 6 169 1 86 6 169 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 3 194 0 16 10 9 0 26 3 194 0 43 3 194 0 61 3 194 0 135] 
#[0 10 13 0 43] 
#[1 3 198 0 16 3 198 0 43 3 198 0 135 10 17 1 7] 
#[0 3 202 0 16 0 43 0 61 0 135] 
#[0 3 206 0 16 0 43 0 61 0 135] 
#[0 3 210 0 16 0 43 0 61 0 135] 
#[0 3 214 0 16 0 43 0 61 0 135] 
#[0 3 218 0 16 0 43 0 61 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 6 17 0 22 6 21 0 23 2 253 0 28 3 1 0 42 10 21 0 43 4 13 0 49 3 9 0 57 3 13 0 64 6 29 0 67 6 33 0 68 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 37 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 41 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 10 25 1 5 6 49 1 8 6 53 1 9 6 57 1 10 6 61 1 11 6 65 1 12 6 69 1 13 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 6 17 0 22 6 21 0 23 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 6 29 0 67 6 33 0 68 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 37 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 10 29 0 135 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 41 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 10 33 1 5 6 49 1 8 6 53 1 9 6 57 1 10 6 61 1 11 6 65 1 12 6 69 1 13 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 10 37 0 42 10 41 0 134] 
#[1 1 201 0 9 10 45 1 28] 
#[1 1 201 0 9 10 49 1 28] 
#[0 3 222 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 10 53 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 10 57 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 10 61 1 98 1 13 1 199] 
#[1 3 102 0 1 3 102 0 3 3 102 0 9 3 102 0 14 3 102 0 17 3 102 0 18 3 102 0 28 3 102 0 42 3 102 0 49 3 102 0 57 3 102 0 64 3 102 0 71 3 102 0 72 3 102 0 75 3 102 0 77 3 102 0 79 2 93 0 82 3 102 0 85 3 102 0 86 3 102 0 87 3 102 0 88 2 147 0 89 3 102 0 90 3 102 0 91 3 102 0 92 3 102 0 93 2 151 0 94 3 102 0 95 3 102 0 96 3 102 0 97 3 102 0 98 3 102 0 99 3 102 0 100 3 102 0 101 3 102 0 102 3 102 0 103 3 102 0 104 3 102 0 105 3 102 0 106 3 102 0 107 2 155 0 108 2 159 0 109 2 163 0 110 2 167 0 111 2 171 0 112 2 175 0 113 2 179 0 114 2 183 0 115 3 102 0 116 3 102 0 117 3 102 0 118 3 102 0 119 3 102 0 120 3 102 0 121 3 102 0 123 3 102 0 124 3 102 0 127 3 102 0 128 3 102 0 130 3 102 0 131 3 102 0 134 2 187 0 137 2 85 1 100 2 213 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 217 1 165 2 109 1 174 2 117 1 175 2 117 1 176] 
#[0 3 226 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 10 65 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 10 69 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 10 73 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 10 77 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 10 81 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 3 230 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 10 85 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 10 89 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 10 93 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 10 97 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 10 101 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 10 105 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 10 109 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 10 113 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 6 165 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 10 117 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 10 117 1 86 10 117 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 3 234 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 2 191 0 1 2 191 0 2 2 191 0 4 3 238 0 5 2 191 0 6 2 191 0 7 3 238 0 8 2 191 0 9 2 191 0 10 2 191 0 11 3 238 0 12 2 191 0 13 3 238 0 14 3 238 0 15 2 191 0 16 2 191 0 17 3 238 0 18 3 238 0 19 2 191 0 20 2 191 0 21 2 191 0 24 3 238 0 25 2 191 0 26 2 191 0 27 2 191 0 28 2 191 0 29 3 238 0 30 2 191 0 31 3 238 0 32 2 191 0 33 2 191 0 34 2 191 0 35 2 191 0 36 2 191 0 37 2 191 0 38 2 191 0 39 3 238 0 40 2 191 0 42 2 191 0 43 2 191 0 44 3 238 0 45 2 191 0 46 3 238 0 47 2 191 0 48 2 191 0 50 3 238 0 51 2 191 0 61 2 191 0 70 2 191 0 86 2 191 0 110 2 191 0 115 2 191 0 122 2 191 0 125 2 191 0 126 2 191 0 129 2 191 0 132 2 191 0 133 2 191 0 134 2 191 0 135] 
#[1 1 201 0 9 10 121 1 28] 
#[0 3 246 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 1 201 0 9 6 101 0 20 1 193 0 28 6 113 0 42 6 149 1 28 6 149 1 91 6 153 1 95 6 157 1 164] 
#[0 3 250 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 8 13 0 14 0 18 1 89 1 92] 
#[1 3 254 0 122 3 254 0 126 10 125 1 194] 
#[1 3 254 0 125 3 254 0 126 10 129 1 194] 
#[1 4 2 0 129 4 2 0 133 10 133 1 197] 
#[1 4 2 0 132 4 2 0 133 10 137 1 197] 
#[0 4 6 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 10 141 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 10 145 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 10 149 0 11 10 153 0 34 4 237 0 134 10 157 0 164] 
#[0 10 161 0 11] 
#[0 4 10 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 4 14 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 4 18 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 4 22 0 10 0 16 0 26 0 27 0 32 0 34 0 36 0 43 0 110 0 115 0 134 0 135] 
#[1 4 26 0 10 2 195 0 16 10 169 0 246] 
#[1 4 30 0 10 2 199 0 16 10 177 1 30] 
#[1 10 193 0 1 1 201 0 9 6 101 0 20 1 193 0 28 10 185 0 36 10 189 0 37 6 113 0 42 10 193 1 28 10 193 1 90 10 193 1 91 10 205 1 95 10 205 1 96 10 209 1 164] 
#[1 2 203 0 1 4 34 0 2 4 34 0 4 4 34 0 6 4 34 0 7 2 207 0 9 4 34 0 10 4 34 0 11 4 34 0 13 4 34 0 16 4 34 0 17 2 211 0 20 4 34 0 21 4 34 0 24 4 34 0 26 4 34 0 27 2 215 0 28 4 34 0 29 4 34 0 31 4 34 0 33 4 34 0 34 4 34 0 35 2 219 0 36 2 223 0 37 4 34 0 38 4 34 0 39 2 227 0 42 4 34 0 43 4 34 0 44 4 34 0 46 4 34 0 48 4 34 0 50 4 34 0 61 4 34 0 70 4 34 0 86 4 34 0 110 4 34 0 115 4 34 0 122 4 34 0 125 4 34 0 126 4 34 0 129 4 34 0 132 4 34 0 133 4 34 0 134 4 34 0 135 10 213 1 28 10 213 1 90 10 213 1 91 10 213 1 95 10 213 1 96 10 209 1 164] 
#[0 4 38 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 4 42 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[0 4 46 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 41 0 42 0 43 0 44 0 46 0 48 0 50 0 56 0 57 0 61 0 62 0 65 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 10 221 0 10] 
#[1 4 50 0 10 2 231 0 16 10 177 1 30] 
#[1 10 225 0 42 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 10 229 1 34 10 233 1 35 1 13 1 97 10 233 1 98 1 13 1 199] 
#[1 10 225 0 42 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 10 241 1 34 10 233 1 35 1 13 1 97 10 233 1 98 1 13 1 199] 
#[1 10 225 0 42 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 10 245 1 34 10 233 1 35 1 13 1 97 10 233 1 98 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 10 249 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 10 253 0 165 3 101 0 166 3 101 0 167 3 109 0 234 11 1 0 243 11 1 0 244 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 11 1 1 16 3 121 1 17 11 1 1 20 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 11 1 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 11 21 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 11 25 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 4 54 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 58 0 1 4 58 0 2 4 58 0 4 4 58 0 6 4 58 0 7 4 58 0 9 4 58 0 10 4 58 0 11 4 58 0 13 4 58 0 16 4 58 0 17 4 58 0 20 4 58 0 21 4 58 0 24 4 58 0 26 4 58 0 27 4 58 0 28 4 58 0 29 4 58 0 31 4 58 0 33 4 58 0 34 4 58 0 35 4 58 0 36 4 58 0 37 4 58 0 38 2 235 0 39 4 58 0 42 4 58 0 43 4 58 0 44 4 58 0 46 4 58 0 48 4 58 0 50 4 58 0 61 4 58 0 70 4 58 0 86 4 58 0 110 4 58 0 115 4 58 0 122 4 58 0 125 4 58 0 126 4 58 0 129 4 58 0 132 4 58 0 133 4 58 0 134 4 58 0 135 11 29 1 43] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 11 33 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 4 62 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 66 0 1 4 66 0 2 4 66 0 4 4 66 0 6 4 66 0 7 4 66 0 9 4 66 0 10 4 66 0 11 4 66 0 13 4 66 0 16 4 66 0 17 4 66 0 20 4 66 0 21 4 66 0 24 4 66 0 26 4 66 0 27 4 66 0 28 4 66 0 29 4 66 0 31 4 66 0 33 4 66 0 34 4 66 0 35 4 66 0 36 4 66 0 37 4 66 0 38 4 66 0 39 4 66 0 42 4 66 0 43 4 66 0 44 4 66 0 46 2 239 0 48 4 66 0 50 4 66 0 61 4 66 0 70 4 66 0 86 4 66 0 110 4 66 0 115 4 66 0 122 4 66 0 125 4 66 0 126 4 66 0 129 4 66 0 132 4 66 0 133 4 66 0 134 4 66 0 135 11 37 1 46] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 11 41 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 4 70 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 74 0 1 4 74 0 2 4 74 0 4 4 74 0 6 2 243 0 7 4 74 0 9 4 74 0 10 4 74 0 11 4 74 0 13 4 74 0 16 4 74 0 17 4 74 0 20 4 74 0 21 4 74 0 24 4 74 0 26 4 74 0 27 4 74 0 28 4 74 0 29 4 74 0 31 4 74 0 33 4 74 0 34 4 74 0 35 4 74 0 36 4 74 0 37 4 74 0 38 4 74 0 39 4 74 0 42 4 74 0 43 4 74 0 44 4 74 0 46 4 74 0 48 4 74 0 50 4 74 0 61 4 74 0 70 4 74 0 86 4 74 0 110 4 74 0 115 4 74 0 122 4 74 0 125 4 74 0 126 4 74 0 129 4 74 0 132 4 74 0 133 4 74 0 134 4 74 0 135 11 45 1 49] 
#[0 4 78 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 82 0 1 2 247 0 2 4 82 0 4 4 82 0 6 4 82 0 7 4 82 0 9 4 82 0 10 4 82 0 11 4 82 0 13 4 82 0 16 4 82 0 17 4 82 0 20 4 82 0 21 4 82 0 24 4 82 0 26 4 82 0 27 4 82 0 28 4 82 0 29 4 82 0 31 2 251 0 33 4 82 0 34 4 82 0 35 4 82 0 36 4 82 0 37 4 82 0 38 4 82 0 39 4 82 0 42 4 82 0 43 4 82 0 44 4 82 0 46 4 82 0 48 4 82 0 50 4 82 0 61 4 82 0 70 4 82 0 86 4 82 0 110 4 82 0 115 4 82 0 122 4 82 0 125 4 82 0 126 4 82 0 129 4 82 0 132 4 82 0 133 4 82 0 134 4 82 0 135 11 49 1 52 7 69 1 54] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 10 85 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 11 53 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 3 118 0 1 3 118 0 3 3 118 0 9 3 118 0 14 3 118 0 17 3 118 0 18 3 118 0 28 9 125 0 32 3 118 0 42 3 118 0 49 3 118 0 57 3 118 0 64 3 118 0 71 3 118 0 72 3 118 0 75 3 118 0 77 3 118 0 79 3 118 0 85 3 118 0 86 3 118 0 87 3 118 0 88 3 118 0 89 3 118 0 90 3 118 0 91 3 118 0 92 3 118 0 93 3 118 0 94 3 118 0 95 3 118 0 96 3 118 0 97 3 118 0 98 3 118 0 99 3 118 0 100 3 118 0 101 3 118 0 102 3 118 0 103 3 118 0 104 3 118 0 105 3 118 0 106 3 118 0 107 3 118 0 108 3 118 0 109 3 118 0 110 3 118 0 111 3 118 0 112 3 118 0 113 3 118 0 114 3 118 0 115 3 118 0 116 3 118 0 117 3 118 0 118 3 118 0 119 3 118 0 120 3 118 0 121 3 118 0 123 3 118 0 124 3 118 0 127 3 118 0 128 3 118 0 130 3 118 0 131 3 118 0 134 3 118 0 137] 
#[1 11 57 0 1 4 86 0 82 4 86 0 89 4 86 0 94 4 86 0 108 4 86 0 109 4 86 0 110 4 86 0 111 4 86 0 112 4 86 0 113 4 86 0 114 4 86 0 115 4 86 0 137] 
#[0 4 90 0 82 0 89 0 94 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 4 94 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 98 0 1 4 98 0 2 4 98 0 4 4 98 0 6 4 98 0 7 4 98 0 9 4 98 0 10 4 98 0 11 4 98 0 13 4 98 0 16 4 98 0 17 4 98 0 20 4 98 0 21 4 98 0 24 4 98 0 26 4 98 0 27 2 255 0 28 4 98 0 29 3 3 0 31 4 98 0 33 4 98 0 34 3 7 0 35 4 98 0 36 4 98 0 37 4 98 0 38 4 98 0 39 4 98 0 42 4 98 0 43 4 98 0 44 4 98 0 46 4 98 0 48 4 98 0 50 4 98 0 61 3 11 0 70 3 15 0 86 4 98 0 110 4 98 0 115 4 98 0 122 4 98 0 125 4 98 0 126 4 98 0 129 4 98 0 132 4 98 0 133 4 98 0 134 4 98 0 135 11 61 1 56 7 93 1 58 7 97 1 101 7 101 1 102 7 105 1 103 7 109 1 104] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 10 93 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 11 65 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 4 102 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 11 73 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 11 69 1 160 11 73 1 161 11 77 1 162 2 101 1 163 2 109 1 174 11 81 1 175 11 81 1 176] 
#[0 4 106 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 11 73 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 11 85 1 160 11 73 1 161 11 77 1 162 2 101 1 163 2 109 1 174 11 81 1 175 11 81 1 176] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 10 77 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 11 89 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 4 110 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 114 0 1 4 114 0 2 4 114 0 4 4 114 0 6 4 114 0 7 4 114 0 9 4 114 0 10 4 114 0 11 4 114 0 13 4 114 0 16 4 114 0 17 4 114 0 20 4 114 0 21 4 114 0 24 4 114 0 26 4 114 0 27 4 114 0 28 4 114 0 29 4 114 0 31 4 114 0 33 4 114 0 34 4 114 0 35 4 114 0 36 4 114 0 37 4 114 0 38 4 114 0 39 4 114 0 42 4 114 0 43 4 114 0 44 3 19 0 46 4 114 0 48 4 114 0 50 4 114 0 61 4 114 0 70 4 114 0 86 4 114 0 110 4 114 0 115 4 114 0 122 4 114 0 125 4 114 0 126 4 114 0 129 4 114 0 132 4 114 0 133 4 114 0 134 4 114 0 135 11 93 1 60] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 10 69 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 11 97 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 4 118 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 122 0 1 4 122 0 2 4 122 0 4 4 122 0 6 4 122 0 7 4 122 0 9 4 122 0 10 4 122 0 11 4 122 0 13 4 122 0 16 4 122 0 17 4 122 0 20 4 122 0 21 4 122 0 24 4 122 0 26 4 122 0 27 4 122 0 28 4 122 0 29 4 122 0 31 4 122 0 33 4 122 0 34 4 122 0 35 4 122 0 36 4 122 0 37 4 122 0 38 4 122 0 39 4 122 0 42 4 122 0 43 3 23 0 44 4 122 0 46 4 122 0 48 4 122 0 50 4 122 0 61 4 122 0 70 4 122 0 86 4 122 0 110 4 122 0 115 4 122 0 122 4 122 0 125 4 122 0 126 4 122 0 129 4 122 0 132 4 122 0 133 4 122 0 134 4 122 0 135 11 101 1 63] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 10 53 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 11 105 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 4 126 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 130 0 1 4 130 0 2 4 130 0 4 3 27 0 6 4 130 0 7 4 130 0 9 4 130 0 10 4 130 0 11 4 130 0 13 4 130 0 16 4 130 0 17 4 130 0 20 4 130 0 21 4 130 0 24 4 130 0 26 4 130 0 27 4 130 0 28 4 130 0 29 4 130 0 31 4 130 0 33 4 130 0 34 4 130 0 35 4 130 0 36 4 130 0 37 4 130 0 38 4 130 0 39 4 130 0 42 4 130 0 43 4 130 0 44 4 130 0 46 4 130 0 48 4 130 0 50 4 130 0 61 4 130 0 70 4 130 0 86 4 130 0 110 4 130 0 115 4 130 0 122 4 130 0 125 4 130 0 126 4 130 0 129 4 130 0 132 4 130 0 133 4 130 0 134 4 130 0 135 11 109 1 66] 
#[0 9 129 0 35] 
#[0 4 134 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 138 0 1 4 138 0 2 4 138 0 4 4 138 0 6 4 138 0 7 4 138 0 9 4 138 0 10 4 138 0 11 4 138 0 13 4 138 0 16 4 138 0 17 4 138 0 20 4 138 0 21 4 138 0 24 4 138 0 26 4 138 0 27 4 138 0 28 3 31 0 29 4 138 0 31 4 138 0 33 4 138 0 34 3 35 0 35 4 138 0 36 4 138 0 37 4 138 0 38 4 138 0 39 4 138 0 42 4 138 0 43 4 138 0 44 4 138 0 46 4 138 0 48 4 138 0 50 4 138 0 61 4 138 0 70 4 138 0 86 4 138 0 110 4 138 0 115 4 138 0 122 4 138 0 125 4 138 0 126 4 138 0 129 4 138 0 132 4 138 0 133 4 138 0 134 4 138 0 135 11 113 1 70 7 161 1 72] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 10 101 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 11 117 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 4 142 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 146 0 1 4 146 0 2 4 146 0 4 4 146 0 6 4 146 0 7 4 146 0 9 4 146 0 10 4 146 0 11 3 39 0 13 4 146 0 16 3 43 0 17 4 146 0 20 4 146 0 21 4 146 0 24 4 146 0 26 4 146 0 27 4 146 0 28 4 146 0 29 4 146 0 31 4 146 0 33 4 146 0 34 4 146 0 35 4 146 0 36 4 146 0 37 4 146 0 38 4 146 0 39 4 146 0 42 4 146 0 43 4 146 0 44 4 146 0 46 4 146 0 48 4 146 0 50 4 146 0 61 4 146 0 70 4 146 0 86 4 146 0 110 4 146 0 115 4 146 0 122 4 146 0 125 4 146 0 126 4 146 0 129 4 146 0 132 4 146 0 133 4 146 0 134 4 146 0 135 11 121 1 74 7 173 1 76] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 10 109 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 11 125 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 4 150 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 154 0 1 4 154 0 2 3 47 0 4 4 154 0 6 4 154 0 7 4 154 0 9 4 154 0 10 3 51 0 11 4 154 0 13 4 154 0 16 4 154 0 17 4 154 0 20 4 154 0 21 3 55 0 24 4 154 0 26 4 154 0 27 4 154 0 28 4 154 0 29 4 154 0 31 4 154 0 33 4 154 0 34 4 154 0 35 4 154 0 36 4 154 0 37 4 154 0 38 4 154 0 39 4 154 0 42 4 154 0 43 4 154 0 44 4 154 0 46 4 154 0 48 3 59 0 50 4 154 0 61 4 154 0 70 4 154 0 86 4 154 0 110 4 154 0 115 4 154 0 122 4 154 0 125 4 154 0 126 4 154 0 129 4 154 0 132 4 154 0 133 4 154 0 134 4 154 0 135 11 129 1 78 7 185 1 80] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 6 165 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 11 133 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 11 133 1 86 11 133 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 4 158 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 4 162 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 4 166 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 2 34 0 1 2 34 0 9 2 34 0 20 2 34 0 28 2 34 0 36 2 34 0 37 2 34 0 42 6 237 1 37 6 245 1 94] 
#[0 4 170 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 4 174 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 178 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 182 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 186 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 190 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 194 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 198 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 202 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 11 137 0 35] 
#[0 4 206 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 210 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 214 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 218 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 11 141 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 4 222 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 226 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 4 230 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 4 234 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 238 0 10 0 16] 
#[0 11 145 0 71] 
#[1 1 70 0 9 11 149 0 20] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 6 17 0 22 6 21 0 23 2 253 0 28 3 1 0 42 11 153 0 43 4 13 0 49 3 9 0 57 3 13 0 64 6 29 0 67 6 33 0 68 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 37 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 41 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 11 157 1 5 6 49 1 8 6 53 1 9 6 57 1 10 6 61 1 11 6 65 1 12 6 69 1 13 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 6 17 0 22 6 21 0 23 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 6 29 0 67 6 33 0 68 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 37 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 11 161 0 135 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 41 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 11 165 1 5 6 49 1 8 6 53 1 9 6 57 1 10 6 61 1 11 6 65 1 12 6 69 1 13 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 4 242 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 2 85 0 89 11 169 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 11 173 0 224 2 85 1 100 11 177 1 162 2 101 1 163] 
#[1 2 85 0 89 11 169 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 11 181 1 162 2 101 1 163] 
#[1 2 85 0 89 11 169 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 11 185 1 162 2 101 1 163 11 189 1 168] 
#[1 2 85 0 89 11 169 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 11 185 1 162 2 101 1 163 11 193 1 168] 
#[1 4 246 0 41 4 246 0 57 4 246 0 65 4 246 0 81 4 246 0 82 4 246 0 85 4 246 0 86 4 246 0 87 4 246 0 88 4 246 0 89 4 246 0 90 4 246 0 91 4 246 0 92 4 246 0 93 4 246 0 94 4 246 0 95 4 246 0 96 4 246 0 97 4 246 0 98 4 246 0 99 4 246 0 100 4 246 0 101 4 246 0 102 4 246 0 103 4 246 0 104 4 246 0 105 4 246 0 106 4 246 0 107 4 246 0 108 4 246 0 109 4 246 0 110 4 246 0 111 4 246 0 112 4 246 0 113 4 246 0 114 4 246 0 115 4 246 0 135 4 246 0 137 11 197 0 187] 
#[1 8 57 0 84 8 61 0 96 11 201 0 134 11 205 0 189 11 209 0 190] 
#[1 8 61 0 96 11 213 0 134 11 217 0 190] 
#[0 11 221 0 134] 
#[0 4 250 0 32 0 63 0 84 0 96 0 134] 
#[0 4 254 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 11 225 0 16 5 2 0 27 11 229 0 204] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 11 233 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 11 237 0 27] 
#[1 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 11 241 0 232 11 245 0 237 0 29 0 239] 
#[1 8 61 0 96 11 249 0 134 11 253 0 190] 
#[0 12 1 0 134] 
#[1 8 57 0 84 8 61 0 96 12 5 0 134 12 9 0 189 12 13 0 190] 
#[0 5 6 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 12 17 0 27] 
#[1 8 49 0 32 8 53 0 63 8 57 0 84 8 61 0 96 12 21 0 134 12 25 0 188 12 29 0 189 12 33 0 190] 
#[0 5 10 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 12 37 0 134] 
#[1 2 93 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 12 41 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[1 2 93 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 12 45 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[0 12 49 0 113] 
#[0 5 14 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[1 5 18 0 16 5 18 0 27 5 18 0 111 5 18 0 114 12 53 1 148] 
#[0 12 57 0 27] 
#[0 5 22 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 5 26 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 5 30 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 5 34 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 0 10 0 41 0 10 0 82 0 10 0 89 0 10 0 94 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 8 185 0 237 0 29 0 239 12 61 1 178 8 193 1 181] 
#[1 0 10 0 41 0 10 0 82 0 10 0 89 0 10 0 94 0 10 0 104 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 12 65 0 237 0 29 0 239 12 69 1 187] 
#[1 2 93 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 12 73 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 12 77 1 188] 
#[1 12 81 0 10 12 85 0 16] 
#[1 5 38 0 10 5 38 0 16 5 38 0 43 12 89 1 180] 
#[0 12 93 0 10] 
#[0 5 42 0 10] 
#[0 5 46 0 10] 
#[0 5 50 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 5 54 0 16 5 54 0 27 12 97 0 160] 
#[0 12 101 0 27] 
#[1 5 58 0 16 5 58 0 27 12 105 0 32] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 213 0 157 12 109 0 158 1 13 1 97 8 221 1 98 1 13 1 199] 
#[1 2 246 0 16 2 246 0 27 12 113 0 32 12 117 0 150] 
#[1 2 85 0 89 11 169 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 11 185 1 162 2 101 1 163 12 121 1 168] 
#[1 5 62 0 41 5 62 0 57 5 62 0 65 5 62 0 81 5 62 0 82 5 62 0 85 5 62 0 86 5 62 0 87 5 62 0 88 5 62 0 89 5 62 0 90 5 62 0 91 5 62 0 92 5 62 0 93 5 62 0 94 5 62 0 95 5 62 0 96 5 62 0 97 5 62 0 98 5 62 0 99 5 62 0 100 5 62 0 101 5 62 0 102 5 62 0 103 5 62 0 104 5 62 0 105 5 62 0 106 5 62 0 107 5 62 0 108 5 62 0 109 5 62 0 110 5 62 0 111 5 62 0 112 5 62 0 113 5 62 0 114 5 62 0 115 5 62 0 135 5 62 0 137 12 125 0 195] 
#[0 12 129 0 134] 
#[1 8 61 0 96 12 133 0 113 12 137 0 134 12 141 0 190] 
#[0 5 66 0 27 0 34 0 110 0 115 0 134] 
#[1 2 93 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 12 145 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[0 12 149 0 32] 
#[0 5 70 0 9 0 28] 
#[0 12 153 0 27] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 12 157 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 12 161 0 16 12 165 0 27 12 169 0 149] 
#[0 12 173 0 27] 
#[1 4 237 0 134 12 177 0 164] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 12 181 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 5 74 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 56 0 57 0 58 0 59 0 60 0 61 0 62 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137 1 200] 
#[1 4 237 0 134 12 185 0 164] 
#[0 5 78 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 41 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 52 0 53 0 54 0 55 0 56 0 57 0 58 0 59 0 60 0 61 0 62 0 64 0 65 0 66 0 67 0 68 0 70 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137 1 200] 
#[1 2 250 0 1 2 250 0 3 2 250 0 9 2 250 0 14 2 250 0 17 2 250 0 18 2 250 0 27 2 250 0 28 2 250 0 41 2 250 0 42 2 250 0 49 2 250 0 52 2 250 0 53 2 250 0 57 2 250 0 58 2 250 0 60 2 250 0 64 2 250 0 65 2 250 0 67 2 250 0 68 2 250 0 71 2 250 0 72 2 250 0 73 2 250 0 74 2 250 0 75 2 250 0 76 2 250 0 77 2 250 0 78 2 250 0 79 2 250 0 80 2 250 0 81 2 250 0 82 2 250 0 83 2 250 0 85 2 250 0 86 2 250 0 87 2 250 0 88 2 250 0 89 2 250 0 90 2 250 0 91 2 250 0 92 2 250 0 93 2 250 0 94 2 250 0 95 2 250 0 96 2 250 0 97 2 250 0 98 2 250 0 99 2 250 0 100 2 250 0 101 2 250 0 102 2 250 0 103 2 250 0 104 2 250 0 105 2 250 0 106 2 250 0 107 2 250 0 108 2 250 0 109 2 250 0 110 2 250 0 111 2 250 0 112 2 250 0 113 2 250 0 114 2 250 0 115 2 250 0 116 2 250 0 117 2 250 0 118 2 250 0 119 2 250 0 120 2 250 0 121 2 250 0 123 2 250 0 124 2 250 0 127 2 250 0 128 2 250 0 130 2 250 0 131 2 250 0 134 12 189 0 135 2 250 0 137 12 193 1 106 9 53 1 107] 
#[0 5 82 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 13 13 0 27 2 253 0 28 0 10 0 41 3 1 0 42 4 13 0 49 12 201 0 52 12 205 0 53 0 247 0 57 12 209 0 58 12 213 0 60 3 13 0 64 0 10 0 65 12 217 0 67 12 221 0 68 3 17 0 71 3 21 0 72 12 225 0 73 12 229 0 74 3 25 0 75 12 233 0 76 3 29 0 77 3 33 0 78 3 37 0 79 12 237 0 80 0 10 0 81 0 10 0 82 12 241 0 83 0 255 0 85 1 3 0 86 1 7 0 87 1 11 0 88 1 15 0 89 1 19 0 90 1 23 0 91 1 27 0 92 1 31 0 93 1 35 0 94 1 39 0 95 1 43 0 96 1 47 0 97 1 51 0 98 1 55 0 99 1 59 0 100 1 63 0 101 1 67 0 102 1 71 0 103 1 75 0 104 1 79 0 105 1 83 0 106 1 87 0 107 3 63 0 108 3 67 0 109 1 99 0 110 1 103 0 111 1 107 0 112 1 111 0 113 1 115 0 114 1 119 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 12 253 0 134 1 123 0 137 13 13 0 164 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 13 5 0 237 0 29 0 239 13 9 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 4 33 1 98 4 53 1 99 1 81 1 100 13 13 1 108 13 13 1 109 13 13 1 110 13 13 1 112 13 13 1 113 13 13 1 114 13 13 1 117 13 13 1 118 13 13 1 119 13 13 1 123 13 13 1 124 13 13 1 129 13 61 1 130 13 13 1 131 13 13 1 132 13 13 1 133 13 13 1 134 13 13 1 135 13 85 1 136 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 77 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 9 141 0 178 9 145 0 182 5 253 0 237 0 29 0 239] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 77 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 3 71 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 9 153 0 178 9 157 0 183 5 253 0 237 0 29 0 239] 
#[0 1 190 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 5 86 0 27 0 34 0 110 0 115 0 134] 
#[1 5 1 0 9 13 93 0 166 13 93 0 167] 
#[0 5 90 0 27 0 34 0 110 0 115 0 134] 
#[0 5 94 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 5 98 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 5 102 0 27 0 111 0 114] 
#[0 5 106 0 27 0 111 0 114] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 1 17 1 98 13 97 1 138 13 101 1 158 1 13 1 199] 
#[1 13 105 0 27 5 65 0 111 5 69 0 114 5 73 1 145] 
#[1 1 50 0 27 1 50 0 111 1 50 0 114 13 109 1 144] 
#[0 5 110 0 9 0 27 0 41 0 56 0 57 0 62 0 65 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 5 114 0 9 0 27 0 41 0 56 0 57 0 62 0 65 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[1 2 93 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 13 113 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[0 5 118 0 16 0 35] 
#[0 5 122 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[1 5 126 0 1 5 126 0 2 5 126 0 3 5 126 0 4 5 126 0 6 5 126 0 7 5 126 0 9 5 126 0 10 5 126 0 11 5 126 0 13 5 126 0 14 5 126 0 16 5 126 0 17 5 126 0 18 5 126 0 20 5 126 0 21 5 126 0 24 5 126 0 26 5 126 0 27 5 126 0 28 5 126 0 29 5 126 0 31 5 126 0 33 5 126 0 34 3 75 0 35 5 126 0 36 5 126 0 37 5 126 0 38 5 126 0 39 5 126 0 42 5 126 0 43 5 126 0 44 5 126 0 46 5 126 0 48 5 126 0 49 5 126 0 50 5 126 0 57 5 126 0 61 5 126 0 64 5 126 0 70 5 126 0 71 5 126 0 72 5 126 0 75 5 126 0 77 5 126 0 79 5 126 0 85 5 126 0 86 5 126 0 87 5 126 0 88 5 126 0 89 5 126 0 90 5 126 0 91 5 126 0 92 5 126 0 93 5 126 0 94 5 126 0 95 5 126 0 96 5 126 0 97 5 126 0 98 5 126 0 99 5 126 0 100 5 126 0 101 5 126 0 102 5 126 0 103 5 126 0 104 5 126 0 105 5 126 0 106 5 126 0 107 5 126 0 108 5 126 0 109 5 126 0 110 5 126 0 111 5 126 0 112 5 126 0 113 5 126 0 114 5 126 0 115 5 126 0 116 5 126 0 117 5 126 0 118 5 126 0 119 5 126 0 120 5 126 0 121 5 126 0 122 5 126 0 123 5 126 0 124 5 126 0 125 5 126 0 126 5 126 0 127 5 126 0 128 5 126 0 129 5 126 0 130 5 126 0 131 5 126 0 132 5 126 0 133 5 126 0 134 5 126 0 135 5 126 0 137] 
#[1 5 130 0 1 5 130 0 2 5 130 0 4 5 130 0 6 5 130 0 7 5 130 0 9 5 130 0 10 5 130 0 11 5 130 0 13 5 130 0 16 5 130 0 17 5 130 0 20 5 130 0 21 5 130 0 24 5 130 0 26 5 130 0 27 5 130 0 28 5 130 0 29 5 130 0 31 13 121 0 32 5 130 0 33 5 130 0 34 5 130 0 35 5 130 0 36 5 130 0 37 5 130 0 38 5 130 0 39 5 130 0 42 5 130 0 43 5 130 0 44 5 130 0 46 5 130 0 48 5 130 0 50 5 130 0 61 5 130 0 70 5 130 0 86 5 130 0 110 5 130 0 115 5 130 0 122 5 130 0 125 5 130 0 126 5 130 0 129 5 130 0 132 5 130 0 133 5 130 0 134 5 130 0 135] 
#[1 5 134 0 1 5 134 0 2 5 134 0 4 5 134 0 6 5 134 0 7 5 134 0 9 5 134 0 10 5 134 0 11 5 134 0 13 5 134 0 16 5 134 0 17 3 79 0 20 5 134 0 21 5 134 0 24 5 134 0 26 5 134 0 27 5 134 0 28 5 134 0 29 5 134 0 31 5 134 0 33 5 134 0 34 5 134 0 35 5 134 0 36 5 134 0 37 5 134 0 38 5 134 0 39 5 134 0 42 5 134 0 43 5 134 0 44 5 134 0 46 5 134 0 48 5 134 0 50 5 134 0 61 5 134 0 70 5 134 0 86 5 134 0 110 5 134 0 115 5 134 0 122 5 134 0 125 5 134 0 126 5 134 0 129 5 134 0 132 5 134 0 133 5 134 0 134 5 134 0 135 2 153 1 139] 
#[1 5 138 0 16 13 125 0 32 5 138 0 43] 
#[1 5 142 0 16 5 142 0 43 13 129 0 174] 
#[1 0 134 0 1 0 134 0 2 0 134 0 4 0 134 0 5 0 134 0 6 0 134 0 7 0 134 0 8 0 134 0 9 0 134 0 11 0 134 0 12 0 134 0 13 0 134 0 14 0 134 0 15 0 134 0 16 0 134 0 17 0 134 0 18 0 134 0 19 0 134 0 20 0 134 0 21 0 134 0 24 0 134 0 25 0 134 0 26 0 134 0 28 0 134 0 29 0 134 0 30 0 134 0 31 0 134 0 32 0 134 0 33 0 134 0 35 0 134 0 36 0 134 0 37 0 134 0 38 0 134 0 39 0 134 0 40 0 10 0 41 0 134 0 42 0 134 0 44 0 134 0 45 0 134 0 46 0 134 0 47 0 134 0 48 0 134 0 50 0 134 0 51 0 10 0 57 0 10 0 65 0 134 0 70 0 10 0 77 0 10 0 81 0 10 0 82 0 10 0 85 3 83 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 134 0 135 0 10 0 137 13 133 0 178 5 253 0 237 0 29 0 239] 
#[1 5 146 0 16 13 137 0 26 13 141 0 32 5 146 0 135] 
#[1 5 150 0 16 5 150 0 135 13 145 0 177] 
#[0 5 154 0 10 0 16 0 26 0 27 0 32 0 34 0 36 0 43 0 110 0 115 0 134 0 135] 
#[1 13 149 0 10 9 57 0 42 9 61 0 134 13 153 0 171 13 153 0 172 13 153 0 175] 
#[0 5 158 0 10 0 16 0 26 0 27 0 32 0 34 0 36 0 43 0 110 0 115 0 134 0 135] 
#[1 5 162 0 10 3 87 0 16 13 161 0 169] 
#[1 5 166 0 77 2 93 0 82 5 166 0 85 5 166 0 86 5 166 0 87 5 166 0 88 3 91 0 89 5 166 0 90 5 166 0 91 5 166 0 92 5 166 0 93 3 95 0 94 5 166 0 95 5 166 0 96 5 166 0 97 5 166 0 98 5 166 0 99 5 166 0 100 5 166 0 101 5 166 0 102 5 166 0 103 5 166 0 104 5 166 0 105 5 166 0 106 5 166 0 107 3 99 0 108 3 103 0 109 3 107 0 110 3 111 0 111 3 115 0 112 3 119 0 113 3 123 0 114 3 127 0 115 3 131 0 137 2 85 1 100 13 165 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[1 5 170 0 77 2 93 0 82 5 170 0 85 5 170 0 86 5 170 0 87 5 170 0 88 3 135 0 89 5 170 0 90 5 170 0 91 5 170 0 92 5 170 0 93 3 139 0 94 5 170 0 95 5 170 0 96 5 170 0 97 5 170 0 98 5 170 0 99 5 170 0 100 5 170 0 101 5 170 0 102 5 170 0 103 5 170 0 104 5 170 0 105 5 170 0 106 5 170 0 107 3 143 0 108 3 147 0 109 3 151 0 110 3 155 0 111 3 159 0 112 3 163 0 113 3 167 0 114 3 171 0 115 3 175 0 137 2 85 1 100 13 169 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[0 13 173 0 20] 
#[1 0 62 0 9 0 62 0 10 0 62 0 16 0 62 0 26 0 62 0 28 0 62 0 32 0 62 0 43 9 177 0 57 9 181 0 65 13 177 0 81 2 93 0 82 13 181 0 85 13 181 0 86 13 181 0 87 13 181 0 88 1 29 0 89 13 181 0 90 13 181 0 91 13 181 0 92 13 181 0 93 4 85 0 94 13 181 0 95 13 181 0 96 13 181 0 97 13 181 0 98 9 193 0 99 13 181 0 100 13 181 0 101 13 181 0 102 13 181 0 103 13 181 0 104 13 181 0 105 13 181 0 106 13 181 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 0 62 0 135 1 65 0 137 13 177 0 154 13 177 0 156 13 181 1 97 13 185 1 98 2 85 1 100 13 189 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 13 181 1 199] 
#[1 0 114 0 9 0 114 0 10 0 114 0 16 0 114 0 26 0 114 0 28 0 114 0 32 0 114 0 43 13 193 0 65 0 114 0 69 13 197 0 81 2 93 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 0 114 0 135 2 85 0 137 13 197 0 156 2 85 1 100 13 197 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[0 5 174 0 10 0 16 0 26 0 32 0 43 0 135] 
#[1 13 201 0 77 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 13 205 1 98 1 13 1 199] 
#[0 5 178 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 5 182 0 10 0 16 0 26 0 32 0 43 0 135] 
#[0 5 186 0 10 0 16 0 26 0 32 0 43 0 135] 
#[0 5 190 0 10 0 16 0 26 0 32 0 43 0 135] 
#[1 5 1 0 9 0 186 0 10 0 186 0 16 0 186 0 26 4 121 0 28 0 186 0 32 0 186 0 43 0 186 0 135 13 209 0 165 3 101 0 166 3 101 0 167 3 109 0 234] 
#[0 5 194 0 10 0 16 0 26 0 32 0 43 0 135] 
#[1 1 138 0 77 0 83 0 85 0 87 0 86 0 91 0 87 0 95 0 88 0 99 0 89 0 103 0 90 0 107 0 91 0 111 0 92 0 115 0 93 0 119 0 94 3 179 0 95 0 127 0 96 0 131 0 97 0 135 0 98 0 139 0 99 0 143 0 100 0 147 0 101 0 151 0 102 0 155 0 103 0 159 0 104 3 183 0 105 0 167 0 106 0 171 0 107 0 175 0 108 0 179 0 109 0 183 0 110 0 187 0 111 0 191 0 112 0 195 0 113 0 199 0 114 0 203 0 115 0 207 0 137 13 213 1 97 13 213 1 199] 
#[0 5 198 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 13 217 0 16 13 221 0 35 13 225 0 235] 
#[1 5 202 0 16 5 202 0 35 13 229 0 63] 
#[0 5 206 0 16 0 43 0 61 0 135] 
#[0 5 210 0 16 0 43 0 61 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 13 233 0 27 2 253 0 28 0 10 0 41 3 1 0 42 4 13 0 49 0 247 0 57 3 13 0 64 0 10 0 65 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 0 10 0 81 0 10 0 82 0 255 0 85 1 3 0 86 1 7 0 87 1 11 0 88 1 15 0 89 1 19 0 90 1 23 0 91 1 27 0 92 1 31 0 93 1 35 0 94 1 39 0 95 1 43 0 96 1 47 0 97 1 51 0 98 1 55 0 99 1 59 0 100 1 63 0 101 1 67 0 102 1 71 0 103 1 75 0 104 1 79 0 105 1 83 0 106 1 87 0 107 1 91 0 108 1 95 0 109 1 99 0 110 1 103 0 111 1 107 0 112 1 111 0 113 1 115 0 114 1 119 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 123 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 13 237 0 237 0 29 0 239 13 241 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 13 245 1 110 13 249 1 115 13 253 1 116 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 14 1 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 14 5 0 9] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 14 9 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 5 214 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 14 13 0 16 5 218 0 43 5 218 0 135 14 17 1 6] 
#[0 5 222 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 14 21 0 43] 
#[0 5 226 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 14 25 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 6 17 0 22 6 21 0 23 2 253 0 28 3 1 0 42 14 29 0 43 4 13 0 49 3 9 0 57 3 13 0 64 6 29 0 67 6 33 0 68 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 37 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 41 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 14 33 1 5 6 49 1 8 6 53 1 9 6 57 1 10 6 61 1 11 6 65 1 12 6 69 1 13 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 6 17 0 22 6 21 0 23 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 6 29 0 67 6 33 0 68 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 37 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 14 37 0 135 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 41 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 14 41 1 5 6 49 1 8 6 53 1 9 6 57 1 10 6 61 1 11 6 65 1 12 6 69 1 13 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 5 230 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 5 234 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 145 0 4 1 201 0 9 6 145 0 11 6 141 0 13 6 141 0 17 6 101 0 20 6 145 0 24 1 193 0 28 6 137 0 29 7 149 0 35 6 113 0 42 6 145 0 50 6 149 1 28 6 137 1 72 6 141 1 76 6 145 1 80 6 149 1 91 6 153 1 95 6 157 1 164] 
#[0 5 238 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 5 242 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 14 45 0 43] 
#[1 6 145 0 4 6 97 0 6 1 201 0 9 6 145 0 11 6 141 0 13 6 141 0 17 6 101 0 20 6 145 0 24 1 193 0 28 6 137 0 29 7 149 0 35 6 113 0 42 6 145 0 50 6 149 1 28 6 137 1 72 6 141 1 76 6 145 1 80 6 149 1 91 6 153 1 95 6 157 1 164] 
#[0 5 246 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 145 0 4 6 97 0 6 1 201 0 9 6 145 0 11 6 141 0 13 6 141 0 17 6 101 0 20 6 145 0 24 1 193 0 28 6 137 0 29 7 149 0 35 6 113 0 42 6 117 0 44 6 145 0 50 6 149 1 28 6 137 1 72 6 141 1 76 6 145 1 80 6 149 1 91 6 153 1 95 6 157 1 164] 
#[0 5 250 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 145 0 4 6 97 0 6 1 201 0 9 6 145 0 11 6 141 0 13 6 141 0 17 6 101 0 20 6 145 0 24 6 105 0 28 6 137 0 29 6 133 0 31 5 161 0 35 6 113 0 42 6 117 0 44 6 121 0 46 6 145 0 50 6 149 1 28 6 133 1 58 6 137 1 72 6 141 1 76 6 145 1 80 6 149 1 91 6 153 1 95 6 157 1 164] 
#[0 5 254 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 145 0 4 6 97 0 6 1 201 0 9 6 145 0 11 6 141 0 13 6 141 0 17 6 101 0 20 6 145 0 24 1 193 0 28 6 137 0 29 7 149 0 35 6 113 0 42 6 117 0 44 6 121 0 46 6 145 0 50 6 149 1 28 6 137 1 72 6 141 1 76 6 145 1 80 6 149 1 91 6 153 1 95 6 157 1 164] 
#[0 6 2 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 145 0 4 1 201 0 9 6 145 0 11 6 141 0 13 6 141 0 17 6 101 0 20 6 145 0 24 1 193 0 28 6 113 0 42 6 145 0 50 6 149 1 28 6 141 1 76 6 145 1 80 6 149 1 91 6 153 1 95 6 157 1 164] 
#[0 6 6 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 145 0 4 1 201 0 9 6 145 0 11 6 101 0 20 6 145 0 24 1 193 0 28 6 113 0 42 6 145 0 50 6 149 1 28 6 145 1 80 6 149 1 91 6 153 1 95 6 157 1 164] 
#[0 6 10 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 14 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 18 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 14 49 0 122 14 53 0 126 14 57 1 193] 
#[1 14 61 0 125 14 53 0 126 14 57 1 193] 
#[1 14 65 0 129 14 69 0 133 14 73 1 196] 
#[1 14 77 0 132 14 69 0 133 14 73 1 196] 
#[0 6 22 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 26 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 237 0 134 14 81 0 164] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 14 85 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 6 30 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 237 0 134 14 89 0 164] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 14 93 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 6 34 0 10 0 16] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 14 97 1 32 1 13 1 97 14 101 1 98 4 41 1 130 1 13 1 199] 
#[0 6 38 0 10 0 16] 
#[0 6 42 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 14 105 0 42] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 14 109 1 98 1 13 1 199] 
#[0 6 46 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 50 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 54 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 3 187 0 1 6 62 0 2 6 62 0 4 6 62 0 5 6 62 0 6 6 62 0 7 6 62 0 8 3 187 0 9 6 62 0 10 6 62 0 11 6 62 0 12 6 62 0 13 6 62 0 14 6 62 0 15 6 62 0 16 6 62 0 17 6 62 0 18 6 62 0 19 3 187 0 20 6 62 0 21 6 62 0 24 6 62 0 25 6 62 0 26 6 62 0 27 3 187 0 28 6 62 0 29 6 62 0 30 6 62 0 31 6 62 0 32 6 62 0 33 6 62 0 34 6 62 0 35 3 187 0 36 3 187 0 37 6 62 0 38 6 62 0 39 6 62 0 40 3 187 0 42 6 62 0 43 6 62 0 44 6 62 0 45 6 62 0 46 6 62 0 47 6 62 0 48 6 62 0 50 6 62 0 51 6 62 0 61 6 62 0 70 6 62 0 86 6 62 0 110 6 62 0 115 6 62 0 122 6 62 0 125 6 62 0 126 6 62 0 129 6 62 0 132 6 62 0 133 6 62 0 134 6 62 0 135] 
#[1 6 66 0 1 6 66 0 2 6 66 0 4 6 66 0 6 6 66 0 7 3 191 0 9 6 66 0 10 6 66 0 11 6 66 0 13 6 66 0 16 6 66 0 17 6 66 0 20 6 66 0 21 6 66 0 24 6 66 0 26 6 66 0 27 6 66 0 28 6 66 0 29 6 66 0 31 6 66 0 33 6 66 0 34 6 66 0 35 6 66 0 36 6 66 0 37 6 66 0 38 6 66 0 39 6 66 0 42 6 66 0 43 6 66 0 44 6 66 0 46 6 66 0 48 6 66 0 50 6 66 0 61 6 66 0 70 6 66 0 86 6 66 0 110 6 66 0 115 6 66 0 122 6 66 0 125 6 66 0 126 6 66 0 129 6 66 0 132 6 66 0 133 6 66 0 134 6 66 0 135 10 121 1 28] 
#[0 6 70 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 58 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 74 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 41 0 42 0 43 0 44 0 46 0 48 0 50 0 56 0 57 0 61 0 62 0 65 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 14 113 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 6 78 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 2 34 0 1 2 34 0 2 2 34 0 4 8 9 0 5 2 34 0 6 2 34 0 7 8 9 0 8 2 34 0 9 2 34 0 10 2 34 0 11 8 9 0 12 2 34 0 13 8 9 0 15 2 34 0 16 2 34 0 17 8 9 0 19 2 34 0 20 2 34 0 21 2 34 0 24 8 9 0 25 2 34 0 26 2 34 0 27 2 34 0 28 2 34 0 29 8 9 0 30 2 34 0 31 7 237 0 32 2 34 0 33 2 34 0 34 3 195 0 35 2 34 0 36 2 34 0 37 2 34 0 38 2 34 0 39 8 9 0 40 2 34 0 42 2 34 0 43 2 34 0 44 8 9 0 45 2 34 0 46 8 9 0 47 2 34 0 48 2 34 0 50 8 9 0 51 2 34 0 61 2 34 0 70 2 34 0 86 2 34 0 110 2 34 0 115 2 34 0 122 2 34 0 125 2 34 0 126 2 34 0 129 2 34 0 132 2 34 0 133 2 34 0 134 2 34 0 135 14 117 1 36 14 121 1 37 14 117 1 38 14 129 1 39 8 9 1 40] 
#[0 6 82 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 15 0 16 0 17 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 86 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 90 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 10 249 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 10 253 0 165 3 101 0 166 3 101 0 167 3 109 0 234 14 133 0 243 14 133 0 244 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 14 133 1 16 3 121 1 17 14 133 1 20 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 14 133 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 11 21 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 14 137 0 34 14 141 0 110 6 209 0 115 4 237 0 134 6 221 0 164 6 217 1 18 14 145 1 21 6 221 1 23] 
#[0 14 149 0 26] 
#[0 6 94 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 98 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 102 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 106 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 8 9 0 5 8 9 0 8 8 9 0 12 8 13 0 14 8 9 0 15 8 13 0 18 8 9 0 19 8 9 0 25 8 9 0 30 7 237 0 32 7 241 0 35 8 9 0 40 8 9 0 45 8 9 0 47 8 9 0 51 14 153 1 39 8 9 1 40 8 13 1 89 8 13 1 92] 
#[0 6 110 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 114 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 118 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 122 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 126 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 130 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 134 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 138 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 142 0 82 0 89 0 94 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 6 146 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 150 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 154 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 5 29 0 94 2 109 1 174 5 33 1 175] 
#[1 6 158 0 1 6 158 0 2 6 158 0 4 6 158 0 6 6 158 0 7 6 158 0 9 6 158 0 10 6 158 0 11 6 158 0 13 6 158 0 16 6 158 0 17 6 158 0 20 6 158 0 21 6 158 0 24 6 158 0 26 6 158 0 27 6 158 0 28 6 158 0 29 6 158 0 31 6 158 0 33 6 158 0 34 6 158 0 35 6 158 0 36 6 158 0 37 6 158 0 38 6 158 0 39 6 158 0 42 6 158 0 43 6 158 0 44 6 158 0 46 6 158 0 48 6 158 0 50 6 158 0 55 6 158 0 61 6 158 0 70 6 158 0 86 1 146 0 94 6 158 0 110 6 158 0 115 6 158 0 122 6 158 0 125 6 158 0 126 6 158 0 129 6 158 0 132 6 158 0 133 6 158 0 134 6 158 0 135] 
#[1 6 162 0 1 6 162 0 2 6 162 0 4 6 162 0 6 6 162 0 7 6 162 0 9 6 162 0 10 6 162 0 11 6 162 0 13 6 162 0 16 6 162 0 17 6 162 0 20 6 162 0 21 6 162 0 24 6 162 0 26 6 162 0 27 6 162 0 28 6 162 0 29 6 162 0 31 6 162 0 33 6 162 0 34 6 162 0 35 3 199 0 36 6 162 0 37 6 162 0 38 6 162 0 39 6 162 0 42 6 162 0 43 6 162 0 44 6 162 0 46 6 162 0 48 6 162 0 50 6 162 0 55 6 162 0 61 6 162 0 70 6 162 0 86 6 162 0 110 6 162 0 115 6 162 0 122 6 162 0 125 6 162 0 126 6 162 0 129 6 162 0 132 6 162 0 133 6 162 0 134 6 162 0 135] 
#[0 6 166 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 170 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 174 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 178 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 182 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 186 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 190 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 194 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 198 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 202 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 206 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 210 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 214 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 14 161 0 32 14 165 0 35] 
#[0 6 218 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 222 0 1 6 222 0 2 6 222 0 4 6 222 0 6 6 222 0 7 3 203 0 9 6 222 0 10 6 222 0 11 6 222 0 13 6 222 0 16 6 222 0 17 6 222 0 20 6 222 0 21 6 222 0 24 6 222 0 26 6 222 0 27 6 222 0 28 6 222 0 29 6 222 0 31 6 222 0 33 6 222 0 34 6 222 0 35 6 222 0 36 6 222 0 37 6 222 0 38 6 222 0 39 6 222 0 42 6 222 0 43 6 222 0 44 6 222 0 46 6 222 0 48 6 222 0 50 6 222 0 61 6 222 0 70 6 222 0 86 6 222 0 110 6 222 0 115 6 222 0 122 6 222 0 125 6 222 0 126 6 222 0 129 6 222 0 132 6 222 0 133 6 222 0 134 6 222 0 135 14 169 1 28] 
#[1 14 173 0 71 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 5 117 1 98 1 13 1 199] 
#[0 6 226 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 14 177 0 43] 
#[0 6 230 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 14 181 0 135] 
#[1 1 102 0 16 1 102 0 27 4 165 0 36 1 102 0 84 1 102 0 96 1 102 0 134] 
#[0 14 185 0 27] 
#[1 8 57 0 84 14 189 0 189] 
#[0 6 234 0 84 0 96 0 134] 
#[1 6 238 0 16 6 238 0 27 6 238 0 96 6 238 0 134 14 193 1 170] 
#[0 6 242 0 27 0 96 0 134] 
#[0 6 246 0 27 0 134] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 14 197 0 135 0 10 0 137 14 201 0 186 14 205 0 237 0 29 0 239] 
#[1 4 246 0 41 4 246 0 57 4 246 0 65 4 246 0 81 4 246 0 82 4 246 0 85 4 246 0 86 4 246 0 87 4 246 0 88 4 246 0 89 4 246 0 90 4 246 0 91 4 246 0 92 4 246 0 93 4 246 0 94 4 246 0 95 4 246 0 96 4 246 0 97 4 246 0 98 4 246 0 99 4 246 0 100 4 246 0 101 4 246 0 102 4 246 0 103 4 246 0 104 4 246 0 105 4 246 0 106 4 246 0 107 4 246 0 108 4 246 0 109 4 246 0 110 4 246 0 111 4 246 0 112 4 246 0 113 4 246 0 114 4 246 0 115 4 246 0 135 4 246 0 137 14 209 0 187] 
#[1 8 61 0 96 14 213 0 134 14 217 0 190] 
#[0 14 221 0 134] 
#[1 4 246 0 41 4 246 0 57 4 246 0 65 4 246 0 81 4 246 0 82 4 246 0 85 4 246 0 86 4 246 0 87 4 246 0 88 4 246 0 89 4 246 0 90 4 246 0 91 4 246 0 92 4 246 0 93 4 246 0 94 4 246 0 95 4 246 0 96 4 246 0 97 4 246 0 98 4 246 0 99 4 246 0 100 4 246 0 101 4 246 0 102 4 246 0 103 4 246 0 104 4 246 0 105 4 246 0 106 4 246 0 107 4 246 0 108 4 246 0 109 4 246 0 110 4 246 0 111 4 246 0 112 4 246 0 113 4 246 0 114 4 246 0 115 4 246 0 135 4 246 0 137 14 225 0 187] 
#[0 14 229 0 134] 
#[1 4 246 0 41 4 246 0 57 4 246 0 65 4 246 0 81 4 246 0 82 4 246 0 85 4 246 0 86 4 246 0 87 4 246 0 88 4 246 0 89 4 246 0 90 4 246 0 91 4 246 0 92 4 246 0 93 4 246 0 94 4 246 0 95 4 246 0 96 4 246 0 97 4 246 0 98 4 246 0 99 4 246 0 100 4 246 0 101 4 246 0 102 4 246 0 103 4 246 0 104 4 246 0 105 4 246 0 106 4 246 0 107 4 246 0 108 4 246 0 109 4 246 0 110 4 246 0 111 4 246 0 112 4 246 0 113 4 246 0 114 4 246 0 115 4 246 0 135 4 246 0 137 14 233 0 187] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 14 237 0 206 1 13 1 97 4 97 1 98 1 13 1 199] 
#[0 6 250 0 16 0 27] 
#[0 6 254 0 16 0 27] 
#[0 7 2 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 7 6 0 16 7 6 0 27 7 6 0 135 14 241 0 227] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 14 245 1 98 1 13 1 199] 
#[1 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 14 249 0 232 11 245 0 237 0 29 0 239] 
#[0 14 253 0 134] 
#[1 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 15 1 0 232 11 245 0 237 0 29 0 239] 
#[1 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 15 5 0 232 11 245 0 237 0 29 0 239] 
#[1 8 61 0 96 15 9 0 134 15 13 0 190] 
#[0 15 17 0 134] 
#[0 7 10 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 4 246 0 41 4 246 0 57 4 246 0 65 4 246 0 81 4 246 0 82 4 246 0 85 4 246 0 86 4 246 0 87 4 246 0 88 4 246 0 89 4 246 0 90 4 246 0 91 4 246 0 92 4 246 0 93 4 246 0 94 4 246 0 95 4 246 0 96 4 246 0 97 4 246 0 98 4 246 0 99 4 246 0 100 4 246 0 101 4 246 0 102 4 246 0 103 4 246 0 104 4 246 0 105 4 246 0 106 4 246 0 107 4 246 0 108 4 246 0 109 4 246 0 110 4 246 0 111 4 246 0 112 4 246 0 113 4 246 0 114 4 246 0 115 4 246 0 135 4 246 0 137 15 21 0 187] 
#[1 8 57 0 84 8 61 0 96 15 25 0 134 15 29 0 189 15 33 0 190] 
#[1 8 61 0 96 15 37 0 134 15 41 0 190] 
#[0 15 45 0 134] 
#[1 7 14 0 41 7 14 0 57 7 14 0 65 7 14 0 81 7 14 0 82 7 14 0 85 7 14 0 86 7 14 0 87 7 14 0 88 7 14 0 89 7 14 0 90 7 14 0 91 7 14 0 92 7 14 0 93 7 14 0 94 7 14 0 95 7 14 0 96 7 14 0 97 7 14 0 98 7 14 0 99 7 14 0 100 7 14 0 101 7 14 0 102 7 14 0 103 7 14 0 104 7 14 0 105 7 14 0 106 7 14 0 107 7 14 0 108 7 14 0 109 7 14 0 110 7 14 0 111 7 14 0 112 7 14 0 113 7 14 0 114 7 14 0 115 7 14 0 135 7 14 0 137 15 49 0 199] 
#[0 15 53 0 134] 
#[0 15 57 0 134] 
#[1 2 93 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 15 61 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[1 15 65 0 16 7 18 0 27 7 18 0 111 7 18 0 114 15 69 1 147] 
#[0 7 22 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 15 73 0 16 15 77 0 43] 
#[1 2 93 0 82 2 85 0 89 2 173 0 94 15 81 0 104 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 15 85 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 15 89 1 188] 
#[1 7 26 0 16 7 26 0 135 15 93 1 186] 
#[1 7 30 0 10 7 30 0 16 7 30 0 43 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 15 97 1 98 1 13 1 199] 
#[0 7 34 0 10 0 16 0 43] 
#[0 7 38 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 15 101 0 10 8 177 0 42 8 181 0 134 15 105 1 182 15 105 1 183 15 105 1 184] 
#[1 7 42 0 10 3 207 0 16 7 42 0 43 15 113 1 179] 
#[0 7 46 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 15 117 0 16 7 50 0 27 15 121 0 159] 
#[0 7 54 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 15 125 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 15 129 0 27] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 15 133 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 12 161 0 16 15 137 0 27 12 169 0 149] 
#[1 8 61 0 96 15 141 0 134 15 145 0 190] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 15 149 0 135 0 10 0 137 15 153 0 194 15 157 0 237 0 29 0 239] 
#[1 5 62 0 41 5 62 0 57 5 62 0 65 5 62 0 81 5 62 0 82 5 62 0 85 5 62 0 86 5 62 0 87 5 62 0 88 5 62 0 89 5 62 0 90 5 62 0 91 5 62 0 92 5 62 0 93 5 62 0 94 5 62 0 95 5 62 0 96 5 62 0 97 5 62 0 98 5 62 0 99 5 62 0 100 5 62 0 101 5 62 0 102 5 62 0 103 5 62 0 104 5 62 0 105 5 62 0 106 5 62 0 107 5 62 0 108 5 62 0 109 5 62 0 110 5 62 0 111 5 62 0 112 5 62 0 113 5 62 0 114 5 62 0 115 5 62 0 135 5 62 0 137 15 161 0 195] 
#[1 2 85 0 89 11 169 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 11 185 1 162 2 101 1 163 15 165 1 168] 
#[1 5 62 0 41 5 62 0 57 5 62 0 65 5 62 0 81 5 62 0 82 5 62 0 85 5 62 0 86 5 62 0 87 5 62 0 88 5 62 0 89 5 62 0 90 5 62 0 91 5 62 0 92 5 62 0 93 5 62 0 94 5 62 0 95 5 62 0 96 5 62 0 97 5 62 0 98 5 62 0 99 5 62 0 100 5 62 0 101 5 62 0 102 5 62 0 103 5 62 0 104 5 62 0 105 5 62 0 106 5 62 0 107 5 62 0 108 5 62 0 109 5 62 0 110 5 62 0 111 5 62 0 112 5 62 0 113 5 62 0 114 5 62 0 115 5 62 0 135 5 62 0 137 15 169 0 195] 
#[0 15 173 0 134] 
#[0 15 177 0 27] 
#[1 2 93 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 15 181 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[0 7 58 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 2 246 0 16 2 246 0 27 15 185 0 150] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 15 189 0 157 1 13 1 97 8 221 1 98 1 13 1 199] 
#[0 7 62 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 7 66 0 16 0 27] 
#[0 7 70 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 56 0 57 0 58 0 59 0 60 0 61 0 62 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137 1 200] 
#[0 7 74 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 56 0 57 0 58 0 59 0 60 0 61 0 62 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137 1 200] 
#[0 15 193 0 27] 
#[0 7 78 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 56 0 57 0 58 0 59 0 60 0 61 0 62 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137 1 200] 
#[0 7 82 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 41 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 52 0 53 0 54 0 55 0 56 0 57 0 58 0 59 0 60 0 61 0 62 0 64 0 65 0 66 0 67 0 68 0 70 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137 1 200] 
#[0 7 86 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 90 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 15 197 0 9] 
#[1 15 201 0 27 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 15 205 1 98 1 13 1 199] 
#[1 15 209 0 27 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 15 213 1 98 1 13 1 199] 
#[1 2 250 0 1 2 250 0 3 2 250 0 9 2 250 0 14 2 250 0 17 2 250 0 18 2 250 0 27 2 250 0 28 2 250 0 41 2 250 0 42 2 250 0 49 2 250 0 52 2 250 0 53 2 250 0 57 2 250 0 58 2 250 0 60 2 250 0 64 2 250 0 65 2 250 0 67 2 250 0 68 2 250 0 71 2 250 0 72 2 250 0 73 2 250 0 74 2 250 0 75 2 250 0 76 2 250 0 77 2 250 0 78 2 250 0 79 2 250 0 80 2 250 0 81 2 250 0 82 2 250 0 83 2 250 0 85 2 250 0 86 2 250 0 87 2 250 0 88 2 250 0 89 2 250 0 90 2 250 0 91 2 250 0 92 2 250 0 93 2 250 0 94 2 250 0 95 2 250 0 96 2 250 0 97 2 250 0 98 2 250 0 99 2 250 0 100 2 250 0 101 2 250 0 102 2 250 0 103 2 250 0 104 2 250 0 105 2 250 0 106 2 250 0 107 2 250 0 108 2 250 0 109 2 250 0 110 2 250 0 111 2 250 0 112 2 250 0 113 2 250 0 114 2 250 0 115 2 250 0 116 2 250 0 117 2 250 0 118 2 250 0 119 2 250 0 120 2 250 0 121 2 250 0 123 2 250 0 124 2 250 0 127 2 250 0 128 2 250 0 130 2 250 0 131 2 250 0 134 2 250 0 137 15 217 1 106 9 53 1 107] 
#[0 15 221 0 9] 
#[0 15 225 0 9] 
#[0 15 229 0 27] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 15 233 0 27 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 15 237 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 15 241 0 9] 
#[1 4 237 0 134 15 245 0 164] 
#[0 15 249 0 9] 
#[1 1 167 0 1 0 150 0 2 2 229 0 3 0 150 0 4 0 150 0 5 0 150 0 6 0 150 0 7 0 150 0 8 1 171 0 9 0 150 0 11 0 150 0 12 0 150 0 13 1 175 0 14 0 150 0 15 1 179 0 17 1 183 0 18 0 150 0 19 0 27 0 20 0 150 0 21 0 150 0 24 0 150 0 25 0 150 0 26 0 150 0 27 1 187 0 28 0 150 0 29 0 150 0 30 0 150 0 31 0 150 0 32 0 150 0 33 0 150 0 35 0 150 0 36 0 150 0 37 0 150 0 38 0 150 0 39 0 150 0 40 1 191 0 42 0 150 0 44 0 150 0 45 0 150 0 46 0 150 0 47 0 150 0 48 4 13 0 49 0 150 0 50 0 150 0 51 3 9 0 57 3 13 0 64 15 253 0 67 0 150 0 70 3 17 0 71 3 21 0 72 6 165 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 195 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 6 169 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 6 169 1 86 6 169 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 3 211 0 1 0 154 0 2 2 229 0 3 0 154 0 4 0 154 0 5 0 154 0 6 0 154 0 7 0 154 0 8 3 215 0 9 3 219 0 11 0 154 0 12 0 154 0 13 3 223 0 14 0 154 0 15 3 227 0 17 3 231 0 18 0 154 0 19 0 31 0 20 0 154 0 21 0 154 0 24 0 154 0 25 0 154 0 26 0 154 0 27 3 235 0 28 0 154 0 29 0 154 0 30 0 154 0 31 0 154 0 32 0 154 0 33 0 154 0 35 0 154 0 36 0 154 0 37 0 154 0 38 0 154 0 39 0 154 0 40 3 239 0 42 0 154 0 44 0 154 0 45 0 154 0 46 0 154 0 47 0 154 0 48 4 13 0 49 0 154 0 50 0 154 0 51 3 9 0 57 3 13 0 64 0 154 0 70 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 3 243 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 16 5 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 3 247 0 1 3 251 0 3 3 255 0 9 4 3 0 14 4 7 0 17 4 11 0 18 6 17 0 22 6 21 0 23 2 250 0 27 4 15 0 28 2 250 0 41 4 19 0 42 4 23 0 49 2 250 0 52 2 250 0 53 4 27 0 57 2 250 0 58 2 250 0 60 4 31 0 64 2 250 0 65 4 35 0 67 4 39 0 68 4 43 0 71 4 47 0 72 2 250 0 73 2 250 0 74 4 51 0 75 2 250 0 76 4 55 0 77 4 59 0 78 4 63 0 79 2 250 0 80 2 250 0 81 2 250 0 82 2 250 0 83 4 67 0 85 4 71 0 86 4 75 0 87 4 79 0 88 4 83 0 89 4 87 0 90 4 91 0 91 4 95 0 92 4 99 0 93 4 103 0 94 4 107 0 95 4 111 0 96 4 115 0 97 4 119 0 98 4 123 0 99 4 127 0 100 4 131 0 101 4 135 0 102 4 139 0 103 4 143 0 104 4 147 0 105 4 151 0 106 4 155 0 107 4 159 0 108 4 163 0 109 4 167 0 110 4 171 0 111 4 175 0 112 4 179 0 113 4 183 0 114 4 187 0 115 4 191 0 116 4 195 0 117 4 199 0 118 4 203 0 119 4 207 0 120 4 211 0 121 4 215 0 123 4 219 0 124 4 223 0 127 4 227 0 128 4 231 0 130 4 235 0 131 4 239 0 134 16 9 0 135 4 243 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 41 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 6 197 1 5 6 49 1 8 6 53 1 9 6 57 1 10 6 61 1 11 6 65 1 12 6 69 1 13 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 9 45 1 105 9 49 1 106 9 53 1 107 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 7 94 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 9 177 0 57 9 181 0 65 16 21 0 81 2 93 0 82 2 81 0 85 2 81 0 86 16 13 0 87 2 81 0 88 1 29 0 89 2 81 0 90 2 81 0 91 2 81 0 92 2 81 0 93 2 9 0 94 2 81 0 95 2 81 0 96 2 81 0 97 2 81 0 98 9 193 0 99 2 81 0 100 2 81 0 101 2 81 0 102 2 81 0 103 2 81 0 104 2 81 0 105 2 81 0 106 2 81 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 16 17 0 153 16 21 0 154 16 21 0 156 16 25 0 161 2 81 1 97 2 85 1 100 16 29 1 111 16 33 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 2 81 1 199] 
#[0 16 37 0 27] 
#[0 7 98 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 102 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 106 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 110 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 114 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 118 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 122 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 126 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 130 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 134 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 138 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 142 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 146 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 7 150 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 154 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 158 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 162 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 166 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 16 41 0 27] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 77 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 13 133 0 178 5 253 0 237 0 29 0 239] 
#[0 7 170 0 27 0 34 0 110 0 115 0 134] 
#[1 7 174 0 10 16 45 0 33] 
#[0 16 49 0 10] 
#[0 7 178 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 16 53 0 27 5 65 0 111 5 69 0 114 5 73 1 145] 
#[0 7 182 0 16 0 35] 
#[0 7 186 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 7 190 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 16 57 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 16 61 0 16 16 65 0 43 16 69 0 173] 
#[1 7 194 0 16 16 73 0 26 16 77 0 32 7 194 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 16 81 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 16 85 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 16 89 0 16 16 93 0 135 16 97 0 176] 
#[0 7 198 0 10 0 16 0 26 0 27 0 32 0 34 0 36 0 43 0 110 0 115 0 134 0 135] 
#[0 16 101 0 10] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 77 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 16 105 0 178 5 253 0 237 0 29 0 239] 
#[0 7 202 0 10 0 16] 
#[0 7 206 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 7 210 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 16 109 1 98 1 13 1 199] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 16 113 1 98 1 13 1 199] 
#[1 5 1 0 9 0 186 0 10 0 186 0 16 0 186 0 26 4 121 0 28 0 186 0 32 0 186 0 43 0 186 0 135 16 117 0 165 3 101 0 166 3 101 0 167 3 109 0 234] 
#[0 7 214 0 10 0 16 0 26 0 32 0 43 0 135] 
#[1 0 83 0 85 0 87 0 86 0 91 0 87 0 95 0 88 0 99 0 89 0 103 0 90 0 107 0 91 0 111 0 92 0 115 0 93 0 119 0 94 3 179 0 95 0 127 0 96 0 131 0 97 0 135 0 98 0 139 0 99 0 143 0 100 0 147 0 101 0 151 0 102 0 155 0 103 0 159 0 104 3 183 0 105 0 167 0 106 0 171 0 107 0 175 0 108 0 179 0 109 0 183 0 110 0 187 0 111 0 191 0 112 0 195 0 113 0 199 0 114 0 203 0 115 0 207 0 137 16 121 1 97 16 121 1 199] 
#[1 7 218 0 77 2 93 0 82 7 218 0 85 7 218 0 86 7 218 0 87 7 218 0 88 4 247 0 89 7 218 0 90 7 218 0 91 7 218 0 92 7 218 0 93 4 251 0 94 7 218 0 95 7 218 0 96 7 218 0 97 7 218 0 98 7 218 0 99 7 218 0 100 7 218 0 101 7 218 0 102 7 218 0 103 7 218 0 104 7 218 0 105 7 218 0 106 7 218 0 107 4 255 0 108 5 3 0 109 5 7 0 110 5 11 0 111 5 15 0 112 5 19 0 113 5 23 0 114 5 27 0 115 5 31 0 137 2 85 1 100 16 125 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[0 7 222 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 16 129 0 20] 
#[0 7 226 0 10 0 16 0 26 0 27 0 32 0 43 0 69 0 135] 
#[1 7 230 0 10 7 230 0 16 7 230 0 26 7 230 0 32 16 133 0 36 7 230 0 43 7 230 0 135] 
#[1 5 1 0 9 4 121 0 28 16 137 0 165 3 101 0 166 3 101 0 167 3 109 0 234] 
#[1 0 10 0 41 0 10 0 89 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 16 141 0 233 6 13 0 237 0 29 0 239] 
#[0 7 234 0 9 0 32 0 63 0 84 0 96 0 113 0 134] 
#[0 7 238 0 16 0 35] 
#[1 11 73 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 16 145 1 160 11 73 1 161 11 77 1 162 2 101 1 163 2 109 1 174 11 81 1 175 11 81 1 176] 
#[0 7 242 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[1 9 177 0 57 9 181 0 65 16 21 0 81 2 93 0 82 1 13 0 85 1 13 0 86 16 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 85 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 9 193 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 16 149 0 153 16 21 0 154 16 21 0 156 1 13 1 97 16 153 1 98 2 85 1 100 16 29 1 111 16 21 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 1 13 1 199] 
#[0 16 157 0 27] 
#[0 7 246 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 16 161 0 10] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 16 165 0 27 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 16 169 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 16 173 0 10] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 13 233 0 27 2 253 0 28 0 10 0 41 3 1 0 42 4 13 0 49 0 247 0 57 3 13 0 64 0 10 0 65 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 0 10 0 81 0 10 0 82 0 255 0 85 1 3 0 86 1 7 0 87 1 11 0 88 1 15 0 89 1 19 0 90 1 23 0 91 1 27 0 92 1 31 0 93 1 35 0 94 1 39 0 95 1 43 0 96 1 47 0 97 1 51 0 98 1 55 0 99 1 59 0 100 1 63 0 101 1 67 0 102 1 71 0 103 1 75 0 104 1 79 0 105 1 83 0 106 1 87 0 107 1 91 0 108 1 95 0 109 1 99 0 110 1 103 0 111 1 107 0 112 1 111 0 113 1 115 0 114 1 119 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 123 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 13 237 0 237 0 29 0 239 13 241 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 13 245 1 110 16 177 1 115 13 253 1 116 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 7 250 0 16 0 43 0 61 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 6 17 0 22 6 21 0 23 2 253 0 28 3 1 0 42 7 254 0 43 4 13 0 49 3 9 0 57 3 13 0 64 6 29 0 67 6 33 0 68 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 37 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 7 254 0 135 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 41 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 16 181 1 8 6 53 1 9 6 57 1 10 6 61 1 11 6 65 1 12 6 69 1 13 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 8 2 0 16 0 43 0 135] 
#[0 8 6 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 8 10 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 8 14 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 16 185 0 43] 
#[0 8 18 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 16 189 0 135] 
#[0 8 22 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 8 26 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 16 193 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 8 30 0 122 0 125 0 126] 
#[0 8 34 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[0 8 38 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 16 197 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 8 42 0 129 0 132 0 133] 
#[0 8 46 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[0 8 50 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 8 54 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 8 58 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 8 62 0 10 0 16] 
#[0 8 66 0 10 0 16] 
#[0 8 21 0 26] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 16 201 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 8 70 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 16 205 0 43] 
#[0 8 74 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 5 35 0 1 8 78 0 2 8 78 0 4 8 78 0 6 8 78 0 7 5 39 0 9 8 78 0 10 8 78 0 11 8 78 0 13 8 78 0 16 8 78 0 17 5 43 0 20 8 78 0 21 8 78 0 24 8 78 0 26 8 78 0 27 5 47 0 28 8 78 0 29 8 78 0 31 8 78 0 33 8 78 0 34 8 78 0 35 5 51 0 36 5 55 0 37 8 78 0 38 8 78 0 39 5 59 0 42 8 78 0 43 8 78 0 44 8 78 0 46 8 78 0 48 8 78 0 50 8 78 0 61 8 78 0 70 8 78 0 86 8 78 0 110 8 78 0 115 8 78 0 122 8 78 0 125 8 78 0 126 8 78 0 129 8 78 0 132 8 78 0 133 8 78 0 134 8 78 0 135 10 193 1 28 10 193 1 90 10 193 1 91 16 209 1 95 16 209 1 96 10 209 1 164] 
#[0 8 82 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 10 249 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 10 253 0 165 3 101 0 166 3 101 0 167 3 109 0 234 16 213 0 243 16 213 0 244 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 16 213 1 16 3 121 1 17 16 213 1 20 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 16 213 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 11 21 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 8 86 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 16 217 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 10 253 0 165 3 101 0 166 3 101 0 167 3 109 0 234 10 145 0 241 16 221 0 243 16 221 0 244 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 16 221 1 16 3 121 1 17 16 221 1 20 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 16 225 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 16 229 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 10 149 0 11 16 233 0 34 4 237 0 134 10 157 0 164] 
#[0 8 90 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 10 249 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 10 253 0 165 3 101 0 166 3 101 0 167 3 109 0 234 16 237 0 243 16 237 0 244 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 16 237 1 16 3 121 1 17 16 237 1 20 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 16 237 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 11 21 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 10 249 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 10 253 0 165 3 101 0 166 3 101 0 167 3 109 0 234 16 241 0 243 16 241 0 244 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 16 241 1 16 3 121 1 17 16 241 1 20 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 16 241 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 11 21 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 8 94 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 8 98 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 16 245 0 32] 
#[0 8 102 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 8 106 0 1 8 106 0 2 8 106 0 4 8 106 0 6 8 106 0 7 5 63 0 9 8 106 0 10 8 106 0 11 8 106 0 13 8 106 0 16 8 106 0 17 8 106 0 20 8 106 0 21 8 106 0 24 8 106 0 26 8 106 0 27 8 106 0 28 8 106 0 29 8 106 0 31 8 106 0 33 8 106 0 34 8 106 0 35 8 106 0 36 8 106 0 37 8 106 0 38 8 106 0 39 8 106 0 42 8 106 0 43 8 106 0 44 8 106 0 46 8 106 0 48 8 106 0 50 8 106 0 61 8 106 0 70 8 106 0 86 8 106 0 110 8 106 0 115 8 106 0 122 8 106 0 125 8 106 0 126 8 106 0 129 8 106 0 132 8 106 0 133 8 106 0 134 8 106 0 135 16 249 1 28] 
#[0 8 110 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 8 114 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 8 118 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 8 122 0 27 8 61 0 96 16 253 0 190] 
#[1 17 1 0 16 8 126 0 27 8 126 0 96 8 126 0 134 17 5 1 169] 
#[0 8 130 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 8 134 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[1 17 9 0 57 17 13 0 65 17 45 0 81 2 93 0 82 17 17 0 85 2 81 0 86 17 21 0 87 2 81 0 88 1 29 0 89 2 81 0 90 2 81 0 91 17 25 0 92 17 29 0 93 2 9 0 94 2 13 0 95 2 81 0 96 2 81 0 97 2 81 0 98 17 33 0 99 2 81 0 100 17 37 0 101 2 81 0 102 2 81 0 103 2 81 0 104 2 25 0 105 17 41 0 106 2 81 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 17 45 0 156 17 49 0 161 17 53 0 191 17 57 0 201 17 61 0 202 17 65 0 207 17 69 0 210 17 73 0 211 17 77 0 212 17 81 0 213 17 57 0 221 17 61 0 222 17 93 0 223 2 81 1 97 17 97 1 100 17 101 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 2 81 1 199] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 17 105 0 135 0 10 0 137 14 201 0 186 14 205 0 237 0 29 0 239] 
#[1 4 246 0 41 4 246 0 57 4 246 0 65 4 246 0 81 4 246 0 82 4 246 0 85 4 246 0 86 4 246 0 87 4 246 0 88 4 246 0 89 4 246 0 90 4 246 0 91 4 246 0 92 4 246 0 93 4 246 0 94 4 246 0 95 4 246 0 96 4 246 0 97 4 246 0 98 4 246 0 99 4 246 0 100 4 246 0 101 4 246 0 102 4 246 0 103 4 246 0 104 4 246 0 105 4 246 0 106 4 246 0 107 4 246 0 108 4 246 0 109 4 246 0 110 4 246 0 111 4 246 0 112 4 246 0 113 4 246 0 114 4 246 0 115 4 246 0 135 4 246 0 137 17 109 0 187] 
#[0 17 113 0 134] 
#[1 4 246 0 41 4 246 0 57 4 246 0 65 4 246 0 81 4 246 0 82 4 246 0 85 4 246 0 86 4 246 0 87 4 246 0 88 4 246 0 89 4 246 0 90 4 246 0 91 4 246 0 92 4 246 0 93 4 246 0 94 4 246 0 95 4 246 0 96 4 246 0 97 4 246 0 98 4 246 0 99 4 246 0 100 4 246 0 101 4 246 0 102 4 246 0 103 4 246 0 104 4 246 0 105 4 246 0 106 4 246 0 107 4 246 0 108 4 246 0 109 4 246 0 110 4 246 0 111 4 246 0 112 4 246 0 113 4 246 0 114 4 246 0 115 4 246 0 135 4 246 0 137 17 117 0 187] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 17 121 0 135 0 10 0 137 14 201 0 186 14 205 0 237 0 29 0 239] 
#[1 4 246 0 41 4 246 0 57 4 246 0 65 4 246 0 81 4 246 0 82 4 246 0 85 4 246 0 86 4 246 0 87 4 246 0 88 4 246 0 89 4 246 0 90 4 246 0 91 4 246 0 92 4 246 0 93 4 246 0 94 4 246 0 95 4 246 0 96 4 246 0 97 4 246 0 98 4 246 0 99 4 246 0 100 4 246 0 101 4 246 0 102 4 246 0 103 4 246 0 104 4 246 0 105 4 246 0 106 4 246 0 107 4 246 0 108 4 246 0 109 4 246 0 110 4 246 0 111 4 246 0 112 4 246 0 113 4 246 0 114 4 246 0 115 4 246 0 135 4 246 0 137 17 125 0 187] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 17 129 0 135 0 10 0 137 14 201 0 186 14 205 0 237 0 29 0 239] 
#[0 8 138 0 16 0 27] 
#[1 17 133 0 16 17 137 0 27 8 142 0 135 17 141 0 226 17 149 0 228 17 149 0 229] 
#[1 1 201 0 9 8 146 0 16 17 153 0 20 8 146 0 27 1 193 0 28 8 146 0 135 17 157 1 28 17 157 1 91 17 161 1 164] 
#[1 7 6 0 16 7 6 0 27 7 6 0 135 17 165 0 227] 
#[1 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 17 169 0 232 11 245 0 237 0 29 0 239] 
#[1 7 6 0 16 7 6 0 27 7 6 0 135 17 173 0 227] 
#[1 7 6 0 16 7 6 0 27 7 6 0 135 17 177 0 227] 
#[1 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 17 181 0 232 11 245 0 237 0 29 0 239] 
#[0 17 185 0 134] 
#[1 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 17 189 0 232 11 245 0 237 0 29 0 239] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 17 193 0 135 0 10 0 137 14 201 0 186 14 205 0 237 0 29 0 239] 
#[1 4 246 0 41 4 246 0 57 4 246 0 65 4 246 0 81 4 246 0 82 4 246 0 85 4 246 0 86 4 246 0 87 4 246 0 88 4 246 0 89 4 246 0 90 4 246 0 91 4 246 0 92 4 246 0 93 4 246 0 94 4 246 0 95 4 246 0 96 4 246 0 97 4 246 0 98 4 246 0 99 4 246 0 100 4 246 0 101 4 246 0 102 4 246 0 103 4 246 0 104 4 246 0 105 4 246 0 106 4 246 0 107 4 246 0 108 4 246 0 109 4 246 0 110 4 246 0 111 4 246 0 112 4 246 0 113 4 246 0 114 4 246 0 115 4 246 0 135 4 246 0 137 17 197 0 187] 
#[1 8 61 0 96 17 201 0 134 17 205 0 190] 
#[0 17 209 0 134] 
#[1 4 246 0 41 4 246 0 57 4 246 0 65 4 246 0 81 4 246 0 82 4 246 0 85 4 246 0 86 4 246 0 87 4 246 0 88 4 246 0 89 4 246 0 90 4 246 0 91 4 246 0 92 4 246 0 93 4 246 0 94 4 246 0 95 4 246 0 96 4 246 0 97 4 246 0 98 4 246 0 99 4 246 0 100 4 246 0 101 4 246 0 102 4 246 0 103 4 246 0 104 4 246 0 105 4 246 0 106 4 246 0 107 4 246 0 108 4 246 0 109 4 246 0 110 4 246 0 111 4 246 0 112 4 246 0 113 4 246 0 114 4 246 0 115 4 246 0 135 4 246 0 137 17 213 0 187] 
#[0 17 217 0 134] 
#[1 4 246 0 41 4 246 0 57 4 246 0 65 4 246 0 81 4 246 0 82 4 246 0 85 4 246 0 86 4 246 0 87 4 246 0 88 4 246 0 89 4 246 0 90 4 246 0 91 4 246 0 92 4 246 0 93 4 246 0 94 4 246 0 95 4 246 0 96 4 246 0 97 4 246 0 98 4 246 0 99 4 246 0 100 4 246 0 101 4 246 0 102 4 246 0 103 4 246 0 104 4 246 0 105 4 246 0 106 4 246 0 107 4 246 0 108 4 246 0 109 4 246 0 110 4 246 0 111 4 246 0 112 4 246 0 113 4 246 0 114 4 246 0 115 4 246 0 135 4 246 0 137 17 221 0 187] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 17 225 0 135 0 10 0 137 17 229 0 198 17 233 0 237 0 29 0 239] 
#[1 7 14 0 41 7 14 0 57 7 14 0 65 7 14 0 81 7 14 0 82 7 14 0 85 7 14 0 86 7 14 0 87 7 14 0 88 7 14 0 89 7 14 0 90 7 14 0 91 7 14 0 92 7 14 0 93 7 14 0 94 7 14 0 95 7 14 0 96 7 14 0 97 7 14 0 98 7 14 0 99 7 14 0 100 7 14 0 101 7 14 0 102 7 14 0 103 7 14 0 104 7 14 0 105 7 14 0 106 7 14 0 107 7 14 0 108 7 14 0 109 7 14 0 110 7 14 0 111 7 14 0 112 7 14 0 113 7 14 0 114 7 14 0 115 7 14 0 135 7 14 0 137 17 237 0 199] 
#[1 7 14 0 41 7 14 0 57 7 14 0 65 7 14 0 81 7 14 0 82 7 14 0 85 7 14 0 86 7 14 0 87 7 14 0 88 7 14 0 89 7 14 0 90 7 14 0 91 7 14 0 92 7 14 0 93 7 14 0 94 7 14 0 95 7 14 0 96 7 14 0 97 7 14 0 98 7 14 0 99 7 14 0 100 7 14 0 101 7 14 0 102 7 14 0 103 7 14 0 104 7 14 0 105 7 14 0 106 7 14 0 107 7 14 0 108 7 14 0 109 7 14 0 110 7 14 0 111 7 14 0 112 7 14 0 113 7 14 0 114 7 14 0 115 7 14 0 135 7 14 0 137 17 241 0 199] 
#[0 17 245 0 134] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 17 249 1 98 1 13 1 199] 
#[0 8 150 0 16 0 27 0 111 0 114] 
#[0 17 253 0 43] 
#[0 8 154 0 10] 
#[1 2 93 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 15 85 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 18 1 1 188] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 15 97 1 98 1 13 1 199] 
#[0 8 158 0 16 0 135] 
#[1 18 5 0 16 18 9 0 135 18 13 1 185] 
#[0 8 162 0 10 0 16 0 43 0 135] 
#[0 8 166 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 18 17 0 10] 
#[1 0 10 0 41 0 10 0 82 0 10 0 89 0 10 0 94 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 8 185 0 237 0 29 0 239 18 21 1 181] 
#[0 8 170 0 10 0 16 0 43] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 18 25 0 157 1 13 1 97 8 221 1 98 1 13 1 199] 
#[0 8 174 0 16 0 27] 
#[0 8 178 0 16 0 27] 
#[0 8 182 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 2 246 0 16 2 246 0 27 18 29 0 150] 
#[0 8 186 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 5 62 0 41 5 62 0 57 5 62 0 65 5 62 0 81 5 62 0 82 5 62 0 85 5 62 0 86 5 62 0 87 5 62 0 88 5 62 0 89 5 62 0 90 5 62 0 91 5 62 0 92 5 62 0 93 5 62 0 94 5 62 0 95 5 62 0 96 5 62 0 97 5 62 0 98 5 62 0 99 5 62 0 100 5 62 0 101 5 62 0 102 5 62 0 103 5 62 0 104 5 62 0 105 5 62 0 106 5 62 0 107 5 62 0 108 5 62 0 109 5 62 0 110 5 62 0 111 5 62 0 112 5 62 0 113 5 62 0 114 5 62 0 115 5 62 0 135 5 62 0 137 18 33 0 195] 
#[0 18 37 0 134] 
#[0 8 190 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 8 194 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[1 17 9 0 57 17 13 0 65 17 45 0 81 2 93 0 82 17 17 0 85 2 81 0 86 17 21 0 87 2 81 0 88 1 29 0 89 2 81 0 90 2 81 0 91 17 25 0 92 17 29 0 93 2 9 0 94 2 13 0 95 2 81 0 96 2 81 0 97 2 81 0 98 17 33 0 99 2 81 0 100 17 37 0 101 2 81 0 102 2 81 0 103 2 81 0 104 2 25 0 105 17 41 0 106 2 81 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 17 45 0 156 17 49 0 161 18 45 0 191 18 45 0 196 17 57 0 201 17 61 0 202 17 65 0 207 17 69 0 210 17 73 0 211 17 77 0 212 17 81 0 213 17 57 0 221 17 61 0 222 17 93 0 223 2 81 1 97 17 97 1 100 17 101 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 2 81 1 199] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 18 49 0 135 0 10 0 137 15 153 0 194 15 157 0 237 0 29 0 239] 
#[1 8 61 0 96 18 53 0 134 18 57 0 190] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 18 61 0 135 0 10 0 137 15 153 0 194 15 157 0 237 0 29 0 239] 
#[1 5 62 0 41 5 62 0 57 5 62 0 65 5 62 0 81 5 62 0 82 5 62 0 85 5 62 0 86 5 62 0 87 5 62 0 88 5 62 0 89 5 62 0 90 5 62 0 91 5 62 0 92 5 62 0 93 5 62 0 94 5 62 0 95 5 62 0 96 5 62 0 97 5 62 0 98 5 62 0 99 5 62 0 100 5 62 0 101 5 62 0 102 5 62 0 103 5 62 0 104 5 62 0 105 5 62 0 106 5 62 0 107 5 62 0 108 5 62 0 109 5 62 0 110 5 62 0 111 5 62 0 112 5 62 0 113 5 62 0 114 5 62 0 115 5 62 0 135 5 62 0 137 18 65 0 195] 
#[0 8 198 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 18 69 0 27] 
#[1 12 161 0 16 18 73 0 27 12 169 0 149] 
#[0 8 202 0 16 0 27] 
#[0 8 206 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 56 0 57 0 58 0 59 0 60 0 61 0 62 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137 1 200] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 18 77 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 8 210 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 18 81 0 27] 
#[0 8 214 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 18 85 0 27] 
#[0 18 89 0 83] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 13 233 0 27 2 253 0 28 0 10 0 41 3 1 0 42 4 13 0 49 0 247 0 57 3 13 0 64 0 10 0 65 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 0 10 0 81 0 10 0 82 0 255 0 85 1 3 0 86 1 7 0 87 1 11 0 88 1 15 0 89 1 19 0 90 1 23 0 91 1 27 0 92 1 31 0 93 1 35 0 94 1 39 0 95 1 43 0 96 1 47 0 97 1 51 0 98 1 55 0 99 1 59 0 100 1 63 0 101 1 67 0 102 1 71 0 103 1 75 0 104 1 79 0 105 1 83 0 106 1 87 0 107 1 91 0 108 1 95 0 109 1 99 0 110 1 103 0 111 1 107 0 112 1 111 0 113 1 115 0 114 1 119 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 123 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 13 237 0 237 0 29 0 239 13 241 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 13 245 1 110 18 93 1 115 13 253 1 116 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 18 97 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 8 218 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 8 222 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 18 101 0 27] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 18 105 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 18 109 0 55 18 113 0 66 18 117 0 113 18 121 1 125 18 125 1 126 18 129 1 127 18 133 1 128] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 18 137 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 18 141 0 9] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 18 145 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 18 149 0 27] 
#[1 5 67 0 1 4 6 0 2 5 78 0 3 4 6 0 4 4 6 0 6 4 6 0 7 5 67 0 9 4 6 0 11 4 6 0 13 5 78 0 14 5 67 0 17 5 78 0 18 4 6 0 20 4 6 0 21 4 6 0 24 5 67 0 27 5 67 0 28 4 6 0 29 4 6 0 31 4 6 0 33 4 6 0 35 4 6 0 36 4 6 0 37 4 6 0 38 4 6 0 39 5 78 0 41 5 67 0 42 4 6 0 44 4 6 0 46 4 6 0 48 5 78 0 49 4 6 0 50 5 78 0 52 5 78 0 53 5 78 0 54 5 78 0 57 5 78 0 58 5 78 0 59 5 78 0 60 5 78 0 61 5 78 0 64 5 78 0 65 5 78 0 67 5 78 0 68 4 6 0 70 5 78 0 71 5 78 0 72 5 78 0 73 5 78 0 74 5 78 0 75 5 78 0 76 5 78 0 77 5 78 0 78 5 78 0 79 5 78 0 80 5 78 0 81 5 78 0 82 5 78 0 83 5 78 0 85 5 67 0 86 5 78 0 87 5 78 0 88 5 78 0 89 5 78 0 90 5 78 0 91 5 78 0 92 5 78 0 93 5 78 0 94 5 78 0 95 5 78 0 96 5 78 0 97 5 78 0 98 5 78 0 99 5 78 0 100 5 78 0 101 5 78 0 102 5 78 0 103 5 78 0 104 5 78 0 105 5 78 0 106 5 78 0 107 5 78 0 108 5 78 0 109 5 78 0 110 5 78 0 111 5 78 0 112 5 78 0 113 5 78 0 114 5 78 0 115 5 78 0 116 5 78 0 117 5 78 0 118 5 78 0 119 5 78 0 120 5 78 0 121 5 78 0 123 5 78 0 124 5 78 0 127 5 78 0 128 5 78 0 130 5 78 0 131 5 78 0 134 5 78 0 135 5 78 0 137] 
#[1 0 62 0 9 0 62 0 28 9 177 0 57 9 181 0 65 0 62 0 69 13 177 0 81 2 93 0 82 2 85 0 89 2 173 0 94 18 153 0 99 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 13 177 0 154 13 177 0 156 2 85 1 100 13 177 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[1 2 246 0 16 2 246 0 27 18 157 0 32 18 161 0 150] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 13 205 1 98 1 13 1 199] 
#[1 4 225 0 34 4 229 0 110 4 233 0 115 4 237 0 134 18 165 0 163 4 245 0 164] 
#[0 18 169 0 27] 
#[1 0 83 0 85 0 87 0 86 0 91 0 87 0 95 0 88 0 99 0 89 0 103 0 90 0 107 0 91 0 111 0 92 0 115 0 93 0 119 0 94 3 179 0 95 0 127 0 96 0 131 0 97 0 135 0 98 0 139 0 99 0 143 0 100 0 147 0 101 0 151 0 102 0 155 0 103 0 159 0 104 3 183 0 105 0 167 0 106 0 171 0 107 0 175 0 108 0 179 0 109 0 183 0 110 0 187 0 111 0 191 0 112 0 195 0 113 0 199 0 114 0 203 0 115 0 207 0 137 5 25 1 97 5 25 1 199] 
#[0 8 226 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 8 230 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 18 173 0 254 3 149 0 255 3 153 1 0 4 61 1 192 4 65 1 195] 
#[1 1 161 0 118 1 161 0 119 1 161 0 120 1 161 0 123 1 161 0 127 1 161 0 130 1 157 1 1 1 161 1 2 18 177 1 154 1 161 1 191] 
#[0 8 234 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 8 238 0 16 0 43] 
#[1 0 10 0 41 18 181 0 43 0 10 0 57 0 10 0 65 0 10 0 77 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 9 141 0 178 18 185 0 182 5 253 0 237 0 29 0 239] 
#[0 8 242 0 10] 
#[0 8 246 0 16 0 43] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 18 189 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 18 193 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 8 250 0 16 0 135] 
#[0 8 254 0 16 0 135] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 77 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 3 71 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 18 197 0 135 0 10 0 137 9 153 0 178 18 201 0 183 5 253 0 237 0 29 0 239] 
#[0 9 2 0 10] 
#[0 9 6 0 16 0 135] 
#[0 9 10 0 10 0 16 0 26 0 27 0 32 0 34 0 36 0 43 0 110 0 115 0 134 0 135] 
#[0 9 14 0 10 0 16] 
#[1 5 1 0 9 9 18 0 10 9 18 0 16 9 18 0 26 4 121 0 28 9 18 0 32 9 18 0 43 9 18 0 135 18 205 0 165 3 101 0 166 3 101 0 167 3 109 0 234] 
#[0 9 22 0 10 0 16 0 26 0 27 0 32 0 43 0 69 0 135] 
#[1 9 26 0 10 9 26 0 16 9 26 0 26 9 26 0 32 18 209 0 36 9 26 0 43 9 26 0 135] 
#[1 5 1 0 9 4 121 0 28 18 213 0 165 3 101 0 166 3 101 0 167 3 109 0 234] 
#[0 9 30 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 18 217 1 98 1 13 1 199] 
#[0 9 34 0 10 0 16 0 26 0 32 0 43 0 135] 
#[1 9 38 0 10 9 38 0 16 9 38 0 26 9 38 0 32 18 221 0 36 9 38 0 43 9 38 0 135] 
#[0 9 42 0 16 0 35] 
#[0 9 46 0 16 0 35] 
#[1 2 246 0 16 2 246 0 27 18 157 0 32 18 225 0 69 18 161 0 150] 
#[0 18 229 0 69] 
#[0 9 50 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 6 17 0 22 6 21 0 23 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 6 29 0 67 6 33 0 68 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 37 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 41 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 18 233 1 8 6 53 1 9 6 57 1 10 6 61 1 11 6 65 1 12 6 69 1 13 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 9 54 0 10 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 113 0 241 18 237 0 245 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 18 241 0 27] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 6 17 0 22 6 21 0 23 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 6 29 0 67 6 33 0 68 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 37 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 41 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 18 245 1 8 6 53 1 9 6 57 1 10 6 61 1 11 6 65 1 12 6 69 1 13 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 18 249 0 10] 
#[0 9 58 0 16 0 43 0 135] 
#[0 9 62 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 9 66 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 9 70 0 122 0 125 0 126] 
#[0 9 74 0 129 0 132 0 133] 
#[0 18 253 0 43] 
#[0 9 78 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 15 0 16 0 17 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 58 0 1 6 58 0 2 6 58 0 4 8 9 0 5 6 58 0 6 6 58 0 7 8 9 0 8 6 58 0 9 6 58 0 10 6 58 0 11 8 9 0 12 6 58 0 13 8 9 0 15 6 58 0 16 6 58 0 17 8 9 0 19 6 58 0 20 6 58 0 21 6 58 0 24 8 9 0 25 6 58 0 26 6 58 0 27 6 58 0 28 6 58 0 29 8 9 0 30 6 58 0 31 7 237 0 32 6 58 0 33 6 58 0 34 5 71 0 35 6 58 0 36 6 58 0 37 6 58 0 38 6 58 0 39 8 9 0 40 6 58 0 42 6 58 0 43 6 58 0 44 8 9 0 45 6 58 0 46 8 9 0 47 6 58 0 48 6 58 0 50 8 9 0 51 6 58 0 61 6 58 0 70 6 58 0 86 6 58 0 110 6 58 0 115 6 58 0 122 6 58 0 125 6 58 0 126 6 58 0 129 6 58 0 132 6 58 0 133 6 58 0 134 6 58 0 135 19 1 1 38 14 129 1 39 8 9 1 40] 
#[0 9 82 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 16 217 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 10 253 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 161 0 241 14 133 0 243 14 133 0 244 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 14 133 1 16 3 121 1 17 14 133 1 20 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 16 225 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 16 229 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 9 86 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 5 75 0 1 5 75 0 2 5 75 0 4 5 75 0 6 5 75 0 7 5 75 0 9 5 75 0 10 5 75 0 11 5 75 0 13 5 75 0 16 5 75 0 17 5 75 0 20 5 79 0 21 5 75 0 24 5 75 0 26 5 75 0 27 5 75 0 28 5 75 0 29 5 75 0 31 5 75 0 33 5 75 0 34 5 75 0 35 5 75 0 36 5 75 0 37 5 83 0 38 5 75 0 39 5 75 0 42 5 75 0 43 5 75 0 44 5 75 0 46 5 75 0 48 5 75 0 50 5 75 0 61 5 75 0 70 5 75 0 86 5 75 0 110 5 75 0 115 5 75 0 122 5 75 0 125 5 75 0 126 5 75 0 129 5 75 0 132 5 75 0 133 5 75 0 134 5 75 0 135] 
#[1 8 9 0 5 8 9 0 8 8 9 0 12 8 13 0 14 8 9 0 15 8 13 0 18 8 9 0 19 8 9 0 25 8 9 0 30 7 237 0 32 7 241 0 35 8 9 0 40 8 9 0 45 8 9 0 47 8 9 0 51 19 5 1 39 8 9 1 40 8 13 1 89 8 13 1 92] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 16 217 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 10 253 0 165 3 101 0 166 3 101 0 167 3 109 0 234 14 85 0 241 19 9 0 243 19 9 0 244 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 19 9 1 16 3 121 1 17 19 9 1 20 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 16 225 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 16 229 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 9 90 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 9 94 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 9 98 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 9 102 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 9 106 0 27] 
#[1 2 85 0 89 11 169 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 19 13 1 162 2 101 1 163] 
#[0 9 110 0 16 0 27 0 96 0 134] 
#[1 19 25 0 89 19 17 0 93 19 25 0 108 19 25 0 109 19 25 0 110 19 25 0 111 19 25 0 112 19 25 0 113 19 25 0 114 19 25 0 115 19 25 0 137 19 21 0 213 19 25 1 100] 
#[1 2 93 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 85 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 8 213 0 157 19 29 0 158 1 13 1 97 8 221 1 98 2 85 1 100 19 33 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 1 13 1 199] 
#[1 0 54 0 9 0 54 0 28 4 137 0 65 19 41 0 81 2 93 0 82 19 37 0 87 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 19 41 0 155 19 41 0 156 2 85 1 100 19 41 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[1 0 62 0 9 0 62 0 28 19 49 0 81 2 93 0 82 2 85 0 89 2 173 0 94 19 45 0 99 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 19 49 0 156 2 85 1 100 19 49 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[1 0 82 0 9 0 82 0 28 19 53 0 57 4 137 0 65 19 69 0 81 2 93 0 82 2 81 0 85 2 81 0 86 19 57 0 87 2 81 0 88 1 29 0 89 2 81 0 90 2 81 0 91 2 81 0 92 19 61 0 93 2 9 0 94 2 13 0 95 2 81 0 96 2 81 0 97 2 81 0 98 2 81 0 99 2 81 0 100 17 37 0 101 2 81 0 102 2 81 0 103 2 81 0 104 2 25 0 105 19 65 0 106 2 81 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 19 69 0 155 19 69 0 156 19 73 0 161 19 77 0 207 19 81 0 210 19 85 0 211 19 89 0 212 17 81 0 213 19 93 0 221 19 97 0 223 2 81 1 97 17 97 1 100 17 101 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 2 81 1 199] 
#[1 0 86 0 9 0 86 0 28 19 25 0 89 19 25 0 108 19 25 0 109 19 25 0 110 19 25 0 111 19 25 0 112 19 25 0 113 19 25 0 114 19 25 0 115 19 25 0 137 19 101 0 213 19 25 1 100] 
#[1 0 114 0 9 0 114 0 28 19 105 0 65 19 109 0 81 2 93 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 19 109 0 156 2 85 1 100 19 109 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[1 19 113 0 4 19 113 0 6 0 122 0 9 19 113 0 11 19 113 0 13 19 113 0 17 19 113 0 24 5 87 0 28 19 113 0 29 19 113 0 31 19 113 0 33 5 161 0 35 5 165 0 42 19 113 0 44 19 113 0 46 19 113 0 49 19 113 0 50 19 113 0 208 19 113 0 209 19 113 1 58 19 113 1 68 19 113 1 72 19 113 1 76 19 113 1 80] 
#[1 0 142 0 9 0 142 0 28 19 117 0 57 19 121 0 65 19 129 0 81 2 93 0 82 2 81 0 85 2 81 0 86 2 81 0 87 2 81 0 88 1 29 0 89 2 81 0 90 2 81 0 91 2 81 0 92 2 81 0 93 2 9 0 94 2 13 0 95 2 81 0 96 2 81 0 97 2 81 0 98 19 125 0 99 2 81 0 100 2 81 0 101 2 81 0 102 2 81 0 103 2 81 0 104 2 25 0 105 2 81 0 106 2 81 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 19 129 0 156 19 133 0 161 19 137 0 210 19 141 0 211 2 81 1 97 2 85 1 100 2 89 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 2 81 1 199] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 213 0 157 19 145 0 158 1 13 1 97 8 221 1 98 1 13 1 199] 
#[1 9 114 0 27 9 118 0 34 9 118 0 110 9 118 0 115 9 118 0 134] 
#[0 9 122 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[1 4 225 0 34 4 229 0 110 4 233 0 115 4 237 0 134 19 149 0 163 4 245 0 164] 
#[0 19 153 0 27] 
#[1 9 126 0 27 9 130 0 34 9 130 0 110 9 130 0 115 9 130 0 134] 
#[1 9 134 0 27 9 138 0 34 9 138 0 110 9 138 0 115 9 138 0 134] 
#[1 9 142 0 27 9 146 0 34 9 146 0 110 9 146 0 115 9 146 0 134] 
#[1 19 157 0 26 9 150 0 27 9 154 0 34 9 154 0 110 9 154 0 115 9 154 0 134 19 161 0 214 19 165 0 215] 
#[1 5 1 0 9 19 169 0 166 19 169 0 167] 
#[0 9 158 0 34 0 110 0 115 0 134] 
#[0 9 162 0 27] 
#[1 19 157 0 26 9 166 0 27 19 173 0 214 19 177 0 215] 
#[1 9 170 0 9 19 181 0 20 1 2 0 28 1 2 0 36 1 2 0 85 1 2 0 86 1 2 0 87 1 2 0 88 1 2 0 89 1 2 0 90 1 2 0 91 1 2 0 92 1 2 0 93 1 2 0 94 1 2 0 95 1 2 0 96 1 2 0 97 1 2 0 98 1 2 0 99 1 2 0 100 1 2 0 101 1 2 0 102 1 2 0 103 1 2 0 104 1 2 0 105 1 2 0 106 1 2 0 107 1 2 0 108 1 2 0 109 1 2 0 110 1 2 0 111 1 2 0 112 1 2 0 113 1 2 0 114 1 2 0 115 1 2 0 137] 
#[1 0 83 0 85 0 87 0 86 0 91 0 87 0 95 0 88 0 99 0 89 0 103 0 90 0 107 0 91 0 111 0 92 0 115 0 93 0 119 0 94 0 123 0 95 0 127 0 96 0 131 0 97 0 135 0 98 0 139 0 99 0 143 0 100 5 91 0 101 0 151 0 102 0 155 0 103 0 159 0 104 0 163 0 105 0 167 0 106 0 171 0 107 0 175 0 108 0 179 0 109 0 183 0 110 0 187 0 111 0 191 0 112 0 195 0 113 0 199 0 114 0 203 0 115 0 207 0 137 5 25 1 97 5 25 1 199] 
#[0 9 174 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 19 189 0 135 0 10 0 137 14 201 0 186 14 205 0 237 0 29 0 239] 
#[1 4 246 0 41 4 246 0 57 4 246 0 65 4 246 0 81 4 246 0 82 4 246 0 85 4 246 0 86 4 246 0 87 4 246 0 88 4 246 0 89 4 246 0 90 4 246 0 91 4 246 0 92 4 246 0 93 4 246 0 94 4 246 0 95 4 246 0 96 4 246 0 97 4 246 0 98 4 246 0 99 4 246 0 100 4 246 0 101 4 246 0 102 4 246 0 103 4 246 0 104 4 246 0 105 4 246 0 106 4 246 0 107 4 246 0 108 4 246 0 109 4 246 0 110 4 246 0 111 4 246 0 112 4 246 0 113 4 246 0 114 4 246 0 115 4 246 0 135 4 246 0 137 19 193 0 187] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 19 197 0 135 0 10 0 137 14 201 0 186 14 205 0 237 0 29 0 239] 
#[0 9 178 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 19 201 0 135 0 10 0 137 14 201 0 186 14 205 0 237 0 29 0 239] 
#[0 9 182 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 17 137 0 27 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 8 142 0 135 0 10 0 137 19 205 0 228 19 205 0 229 19 209 0 232 11 245 0 237 0 29 0 239] 
#[1 9 186 0 41 9 186 0 57 9 186 0 65 9 186 0 81 9 186 0 82 9 186 0 85 9 186 0 86 9 186 0 87 9 186 0 88 9 186 0 89 9 186 0 90 9 186 0 91 9 186 0 92 9 186 0 93 9 186 0 94 9 186 0 95 9 186 0 96 9 186 0 97 9 186 0 98 9 186 0 99 9 186 0 100 9 186 0 101 9 186 0 102 9 186 0 103 9 186 0 104 9 186 0 105 9 186 0 106 9 186 0 107 9 186 0 108 9 186 0 109 9 186 0 110 9 186 0 111 9 186 0 112 9 186 0 113 9 186 0 114 9 186 0 115 9 186 0 135 9 186 0 137 19 213 0 231] 
#[0 9 190 0 16 0 27 0 135] 
#[0 9 194 0 135] 
#[0 19 217 0 135] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 19 221 1 98 1 13 1 199] 
#[0 9 198 0 16 0 27 0 135] 
#[1 1 201 0 9 19 225 0 20 10 121 1 28] 
#[1 19 229 0 16 17 137 0 27 8 142 0 135 17 141 0 226 19 233 0 228 19 233 0 229] 
#[1 7 6 0 16 7 6 0 27 7 6 0 135 19 237 0 227] 
#[1 19 241 0 16 17 137 0 27 8 142 0 135 17 141 0 226 19 245 0 228 19 245 0 229] 
#[1 19 249 0 16 17 137 0 27 8 142 0 135 17 141 0 226 19 253 0 228 19 253 0 229] 
#[1 7 6 0 16 7 6 0 27 7 6 0 135 20 1 0 227] 
#[1 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 20 5 0 232 11 245 0 237 0 29 0 239] 
#[1 7 6 0 16 7 6 0 27 7 6 0 135 20 9 0 227] 
#[0 9 202 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 20 13 0 135 0 10 0 137 14 201 0 186 14 205 0 237 0 29 0 239] 
#[1 4 246 0 41 4 246 0 57 4 246 0 65 4 246 0 81 4 246 0 82 4 246 0 85 4 246 0 86 4 246 0 87 4 246 0 88 4 246 0 89 4 246 0 90 4 246 0 91 4 246 0 92 4 246 0 93 4 246 0 94 4 246 0 95 4 246 0 96 4 246 0 97 4 246 0 98 4 246 0 99 4 246 0 100 4 246 0 101 4 246 0 102 4 246 0 103 4 246 0 104 4 246 0 105 4 246 0 106 4 246 0 107 4 246 0 108 4 246 0 109 4 246 0 110 4 246 0 111 4 246 0 112 4 246 0 113 4 246 0 114 4 246 0 115 4 246 0 135 4 246 0 137 20 17 0 187] 
#[0 20 21 0 134] 
#[1 4 246 0 41 4 246 0 57 4 246 0 65 4 246 0 81 4 246 0 82 4 246 0 85 4 246 0 86 4 246 0 87 4 246 0 88 4 246 0 89 4 246 0 90 4 246 0 91 4 246 0 92 4 246 0 93 4 246 0 94 4 246 0 95 4 246 0 96 4 246 0 97 4 246 0 98 4 246 0 99 4 246 0 100 4 246 0 101 4 246 0 102 4 246 0 103 4 246 0 104 4 246 0 105 4 246 0 106 4 246 0 107 4 246 0 108 4 246 0 109 4 246 0 110 4 246 0 111 4 246 0 112 4 246 0 113 4 246 0 114 4 246 0 115 4 246 0 135 4 246 0 137 20 25 0 187] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 20 29 0 135 0 10 0 137 14 201 0 186 14 205 0 237 0 29 0 239] 
#[1 4 246 0 41 4 246 0 57 4 246 0 65 4 246 0 81 4 246 0 82 4 246 0 85 4 246 0 86 4 246 0 87 4 246 0 88 4 246 0 89 4 246 0 90 4 246 0 91 4 246 0 92 4 246 0 93 4 246 0 94 4 246 0 95 4 246 0 96 4 246 0 97 4 246 0 98 4 246 0 99 4 246 0 100 4 246 0 101 4 246 0 102 4 246 0 103 4 246 0 104 4 246 0 105 4 246 0 106 4 246 0 107 4 246 0 108 4 246 0 109 4 246 0 110 4 246 0 111 4 246 0 112 4 246 0 113 4 246 0 114 4 246 0 115 4 246 0 135 4 246 0 137 20 33 0 187] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 20 37 0 135 0 10 0 137 14 201 0 186 14 205 0 237 0 29 0 239] 
#[0 9 206 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 9 210 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[1 17 9 0 57 17 13 0 65 17 45 0 81 2 93 0 82 17 17 0 85 2 81 0 86 17 21 0 87 2 81 0 88 1 29 0 89 2 81 0 90 2 81 0 91 17 25 0 92 17 29 0 93 2 9 0 94 2 13 0 95 2 81 0 96 2 81 0 97 2 81 0 98 17 33 0 99 2 81 0 100 17 37 0 101 2 81 0 102 2 81 0 103 2 81 0 104 2 25 0 105 17 41 0 106 2 81 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 17 45 0 156 17 49 0 161 20 45 0 191 20 45 0 200 17 57 0 201 17 61 0 202 17 65 0 207 17 69 0 210 17 73 0 211 17 77 0 212 17 81 0 213 17 57 0 221 17 61 0 222 17 93 0 223 2 81 1 97 17 97 1 100 17 101 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 2 81 1 199] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 20 49 0 135 0 10 0 137 17 229 0 198 17 233 0 237 0 29 0 239] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 20 53 0 135 0 10 0 137 17 229 0 198 17 233 0 237 0 29 0 239] 
#[1 7 14 0 41 7 14 0 57 7 14 0 65 7 14 0 81 7 14 0 82 7 14 0 85 7 14 0 86 7 14 0 87 7 14 0 88 7 14 0 89 7 14 0 90 7 14 0 91 7 14 0 92 7 14 0 93 7 14 0 94 7 14 0 95 7 14 0 96 7 14 0 97 7 14 0 98 7 14 0 99 7 14 0 100 7 14 0 101 7 14 0 102 7 14 0 103 7 14 0 104 7 14 0 105 7 14 0 106 7 14 0 107 7 14 0 108 7 14 0 109 7 14 0 110 7 14 0 111 7 14 0 112 7 14 0 113 7 14 0 114 7 14 0 115 7 14 0 135 7 14 0 137 20 57 0 199] 
#[0 9 214 0 16 0 27 0 111 0 114] 
#[0 9 218 0 10] 
#[0 9 222 0 16 0 135] 
#[1 0 10 0 41 0 10 0 82 0 10 0 89 0 10 0 94 0 10 0 104 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 20 61 0 135 0 10 0 137 12 65 0 237 0 29 0 239 20 65 1 187] 
#[0 9 226 0 10] 
#[0 9 230 0 16 0 135] 
#[0 9 234 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 9 238 0 10 0 16 0 43] 
#[0 9 242 0 16 0 27] 
#[1 12 161 0 16 20 69 0 27 12 169 0 149] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 20 73 0 135 0 10 0 137 15 153 0 194 15 157 0 237 0 29 0 239] 
#[1 5 62 0 41 5 62 0 57 5 62 0 65 5 62 0 81 5 62 0 82 5 62 0 85 5 62 0 86 5 62 0 87 5 62 0 88 5 62 0 89 5 62 0 90 5 62 0 91 5 62 0 92 5 62 0 93 5 62 0 94 5 62 0 95 5 62 0 96 5 62 0 97 5 62 0 98 5 62 0 99 5 62 0 100 5 62 0 101 5 62 0 102 5 62 0 103 5 62 0 104 5 62 0 105 5 62 0 106 5 62 0 107 5 62 0 108 5 62 0 109 5 62 0 110 5 62 0 111 5 62 0 112 5 62 0 113 5 62 0 114 5 62 0 115 5 62 0 135 5 62 0 137 20 77 0 195] 
#[0 9 246 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[0 9 250 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[0 9 254 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 5 62 0 41 5 62 0 57 5 62 0 65 5 62 0 81 5 62 0 82 5 62 0 85 5 62 0 86 5 62 0 87 5 62 0 88 5 62 0 89 5 62 0 90 5 62 0 91 5 62 0 92 5 62 0 93 5 62 0 94 5 62 0 95 5 62 0 96 5 62 0 97 5 62 0 98 5 62 0 99 5 62 0 100 5 62 0 101 5 62 0 102 5 62 0 103 5 62 0 104 5 62 0 105 5 62 0 106 5 62 0 107 5 62 0 108 5 62 0 109 5 62 0 110 5 62 0 111 5 62 0 112 5 62 0 113 5 62 0 114 5 62 0 115 5 62 0 135 5 62 0 137 20 81 0 195] 
#[0 20 85 0 134] 
#[0 10 2 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 20 89 0 135 0 10 0 137 15 153 0 194 15 157 0 237 0 29 0 239] 
#[0 10 6 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 10 10 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 20 93 0 10 20 97 0 16] 
#[0 10 14 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 10 18 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 20 101 0 9] 
#[0 20 105 0 10] 
#[0 20 109 0 10] 
#[0 10 22 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 20 113 0 10] 
#[0 20 117 0 9] 
#[1 4 237 0 134 20 121 0 164] 
#[1 11 73 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 2 85 1 100 20 125 1 160 11 73 1 161 11 77 1 162 2 101 1 163 2 109 1 174 11 81 1 175 11 81 1 176] 
#[1 10 26 0 1 10 26 0 3 10 26 0 9 10 26 0 14 10 26 0 17 10 26 0 18 10 26 0 27 10 26 0 28 10 26 0 41 10 26 0 42 10 26 0 49 10 26 0 52 10 26 0 53 10 26 0 54 18 109 0 55 10 26 0 57 10 26 0 58 10 26 0 59 10 26 0 60 10 26 0 61 10 26 0 64 10 26 0 65 10 26 0 66 10 26 0 67 10 26 0 68 10 26 0 71 10 26 0 72 10 26 0 73 10 26 0 74 10 26 0 75 10 26 0 76 10 26 0 77 10 26 0 78 10 26 0 79 10 26 0 80 10 26 0 81 10 26 0 82 10 26 0 83 10 26 0 85 10 26 0 86 10 26 0 87 10 26 0 88 10 26 0 89 10 26 0 90 10 26 0 91 10 26 0 92 10 26 0 93 10 26 0 94 10 26 0 95 10 26 0 96 10 26 0 97 10 26 0 98 10 26 0 99 10 26 0 100 10 26 0 101 10 26 0 102 10 26 0 103 10 26 0 104 10 26 0 105 10 26 0 106 10 26 0 107 10 26 0 108 10 26 0 109 10 26 0 110 10 26 0 111 10 26 0 112 5 95 0 113 10 26 0 114 10 26 0 115 10 26 0 116 10 26 0 117 10 26 0 118 10 26 0 119 10 26 0 120 10 26 0 121 10 26 0 123 10 26 0 124 10 26 0 127 10 26 0 128 10 26 0 130 10 26 0 131 10 26 0 134 10 26 0 135 10 26 0 137 18 121 1 125 20 129 1 126 18 129 1 127] 
#[1 10 30 0 1 10 30 0 3 10 30 0 9 10 30 0 14 10 30 0 17 10 30 0 18 10 30 0 27 10 30 0 28 10 30 0 41 10 30 0 42 10 30 0 49 10 30 0 52 10 30 0 53 10 30 0 54 10 30 0 57 10 30 0 58 10 30 0 59 10 30 0 60 10 30 0 61 10 30 0 64 10 30 0 65 18 113 0 66 10 30 0 67 10 30 0 68 10 30 0 71 10 30 0 72 10 30 0 73 10 30 0 74 10 30 0 75 10 30 0 76 10 30 0 77 10 30 0 78 10 30 0 79 10 30 0 80 10 30 0 81 10 30 0 82 10 30 0 83 10 30 0 85 10 30 0 86 10 30 0 87 10 30 0 88 10 30 0 89 10 30 0 90 10 30 0 91 10 30 0 92 10 30 0 93 10 30 0 94 10 30 0 95 10 30 0 96 10 30 0 97 10 30 0 98 10 30 0 99 10 30 0 100 10 30 0 101 10 30 0 102 10 30 0 103 10 30 0 104 10 30 0 105 10 30 0 106 10 30 0 107 10 30 0 108 10 30 0 109 10 30 0 110 10 30 0 111 10 30 0 112 10 30 0 113 10 30 0 114 10 30 0 115 10 30 0 116 10 30 0 117 10 30 0 118 10 30 0 119 10 30 0 120 10 30 0 121 10 30 0 123 10 30 0 124 10 30 0 127 10 30 0 128 10 30 0 130 10 30 0 131 10 30 0 134 10 30 0 135 10 30 0 137 20 133 1 128] 
#[1 4 237 0 134 20 137 0 164] 
#[0 10 34 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 20 141 0 10] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 13 233 0 27 2 253 0 28 0 10 0 41 3 1 0 42 4 13 0 49 0 247 0 57 3 13 0 64 0 10 0 65 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 0 10 0 81 0 10 0 82 0 255 0 85 1 3 0 86 1 7 0 87 1 11 0 88 1 15 0 89 1 19 0 90 1 23 0 91 1 27 0 92 1 31 0 93 1 35 0 94 1 39 0 95 1 43 0 96 1 47 0 97 1 51 0 98 1 55 0 99 1 59 0 100 1 63 0 101 1 67 0 102 1 71 0 103 1 75 0 104 1 79 0 105 1 83 0 106 1 87 0 107 1 91 0 108 1 95 0 109 1 99 0 110 1 103 0 111 1 107 0 112 1 111 0 113 1 115 0 114 1 119 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 123 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 13 237 0 237 0 29 0 239 13 241 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 13 245 1 110 20 145 1 115 13 253 1 116 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 20 149 0 27] 
#[0 10 38 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 13 193 0 65 13 197 0 81 2 93 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 13 197 0 156 2 85 1 100 13 197 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 20 153 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 12 161 0 16 10 42 0 27 12 169 0 149] 
#[0 10 46 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 10 50 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 10 54 0 10] 
#[0 10 58 0 27 0 68 0 86 0 88 0 111 0 114] 
#[0 10 62 0 10] 
#[0 10 66 0 16 0 43] 
#[0 10 70 0 16 0 135] 
#[0 10 74 0 16 0 135] 
#[0 10 78 0 10] 
#[0 10 82 0 16 0 135] 
#[1 10 86 0 10 10 86 0 16 10 86 0 26 10 86 0 32 20 157 0 36 10 86 0 43 10 86 0 135] 
#[0 10 90 0 10 0 16 0 26 0 32 0 43 0 135] 
#[1 10 94 0 10 10 94 0 16 10 94 0 26 10 94 0 32 20 161 0 36 10 94 0 43 10 94 0 135] 
#[1 5 1 0 9 10 98 0 10 10 98 0 16 10 98 0 26 4 121 0 28 10 98 0 32 10 98 0 43 10 98 0 135 20 165 0 165 3 101 0 166 3 101 0 167 3 109 0 234] 
#[0 10 102 0 10 0 16 0 26 0 32 0 43 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 20 169 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 20 173 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 10 106 0 16 0 43 0 61 0 135] 
#[0 10 110 0 10] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 10 114 0 10 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 3 113 0 241 20 177 0 245 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 10 118 0 16 10 118 0 43 5 99 0 61 10 118 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 6 17 0 22 6 21 0 23 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 6 29 0 67 6 33 0 68 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 37 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 41 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 20 185 1 8 6 53 1 9 6 57 1 10 6 61 1 11 6 65 1 12 6 69 1 13 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 10 122 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 10 126 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 16 217 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 10 253 0 165 3 101 0 166 3 101 0 167 3 109 0 234 11 141 0 241 16 241 0 243 16 241 0 244 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 16 241 1 16 3 121 1 17 16 241 1 20 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 16 225 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 16 229 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 10 130 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 10 134 0 16 0 27 0 96 0 134] 
#[1 19 25 0 89 19 25 0 108 19 25 0 109 19 25 0 110 19 25 0 111 19 25 0 112 19 25 0 113 19 25 0 114 19 25 0 115 19 25 0 137 20 189 0 213 19 25 1 100] 
#[1 5 1 0 9 20 193 0 166 20 193 0 167] 
#[1 9 170 0 9 20 197 0 20] 
#[0 10 138 0 27] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 213 0 157 20 201 0 158 1 13 1 97 8 221 1 98 1 13 1 199] 
#[1 20 205 0 81 2 93 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 20 205 0 156 2 85 1 100 20 205 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 8 153 1 98 20 209 1 146 1 13 1 199] 
#[1 20 213 0 65 20 217 0 81 2 93 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 20 217 0 156 2 85 1 100 20 217 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 213 0 157 20 221 0 158 1 13 1 97 8 221 1 98 1 13 1 199] 
#[1 19 25 0 89 20 225 0 93 19 25 0 108 19 25 0 109 19 25 0 110 19 25 0 111 19 25 0 112 19 25 0 113 19 25 0 114 19 25 0 115 19 25 0 137 19 21 0 213 19 25 1 100] 
#[1 0 62 0 9 0 62 0 28 20 229 0 81 2 93 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 20 229 0 156 2 85 1 100 20 229 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[1 0 86 0 9 0 86 0 28 19 25 0 89 19 25 0 108 19 25 0 109 19 25 0 110 19 25 0 111 19 25 0 112 19 25 0 113 19 25 0 114 19 25 0 115 19 25 0 137 20 233 0 213 19 25 1 100] 
#[1 0 142 0 9 0 142 0 28 4 137 0 65 20 237 0 81 2 93 0 82 2 81 0 85 2 81 0 86 2 81 0 87 2 81 0 88 1 29 0 89 2 81 0 90 2 81 0 91 2 81 0 92 2 81 0 93 2 9 0 94 2 13 0 95 2 81 0 96 2 81 0 97 2 81 0 98 2 81 0 99 2 81 0 100 2 81 0 101 2 81 0 102 2 81 0 103 2 81 0 104 2 25 0 105 2 81 0 106 2 81 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 20 237 0 155 20 237 0 156 20 241 0 161 20 245 0 210 20 249 0 211 2 81 1 97 2 85 1 100 2 89 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 2 81 1 199] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 8 153 1 98 20 253 1 146 1 13 1 199] 
#[0 10 142 0 27] 
#[0 10 146 0 27] 
#[0 10 150 0 27] 
#[0 10 154 0 27] 
#[0 10 158 0 27] 
#[0 10 162 0 27] 
#[0 10 166 0 27] 
#[1 5 1 0 9 21 1 0 166 21 1 0 167] 
#[1 2 93 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 85 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 8 213 0 157 21 5 0 158 1 13 1 97 8 221 1 98 2 85 1 100 21 9 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 1 13 1 199] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 213 0 157 21 13 0 158 1 13 1 97 8 221 1 98 1 13 1 199] 
#[1 5 1 0 9 21 17 0 166 21 17 0 167] 
#[1 2 93 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 85 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 21 21 0 203 4 93 0 206 1 13 1 97 4 97 1 98 2 85 1 100 21 25 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 1 13 1 199] 
#[1 2 93 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 85 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 21 29 0 203 4 93 0 206 1 13 1 97 4 97 1 98 2 85 1 100 21 33 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 1 13 1 199] 
#[1 0 114 0 9 0 114 0 28 21 37 0 65 21 41 0 81 2 93 0 82 2 85 0 89 2 173 0 94 2 85 0 108 2 85 0 109 2 85 0 110 2 85 0 111 2 85 0 112 2 85 0 113 2 85 0 114 2 85 0 115 2 85 0 137 21 41 0 156 2 85 1 100 21 41 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 213 0 157 21 45 0 158 1 13 1 97 8 221 1 98 1 13 1 199] 
#[0 10 170 0 34 0 110 0 115 0 134] 
#[0 10 174 0 34 0 110 0 115 0 134] 
#[0 10 178 0 34 0 110 0 115 0 134] 
#[0 10 182 0 27] 
#[0 10 186 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[0 10 190 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[1 12 201 0 52 21 49 0 75 21 53 0 77 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 21 57 0 218 21 57 0 219 1 13 1 97 21 65 1 98 21 57 1 136 1 13 1 199] 
#[0 10 194 0 27] 
#[1 10 198 0 27 10 202 0 34 10 202 0 110 10 202 0 115 10 202 0 134] 
#[0 10 206 0 26 0 27 0 34 0 110 0 115 0 134] 
#[0 10 210 0 27] 
#[0 10 214 0 27] 
#[1 21 73 0 71 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 1 13 1 97 21 77 1 98 9 65 1 100 1 13 1 199] 
#[1 21 81 0 4 21 81 0 6 0 122 0 9 21 81 0 11 21 81 0 13 21 81 0 17 21 81 0 24 5 87 0 28 21 81 0 29 21 81 0 31 21 81 0 33 5 161 0 35 5 165 0 42 21 81 0 44 21 81 0 46 21 81 0 49 21 81 0 50 21 81 0 208 21 81 0 209 21 81 1 58 21 81 1 68 21 81 1 72 21 81 1 76 21 81 1 80] 
#[0 10 218 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 21 85 0 135 0 10 0 137 14 201 0 186 14 205 0 237 0 29 0 239] 
#[0 10 222 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 10 226 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 21 89 0 135] 
#[0 10 230 0 16 0 27 0 135] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 10 234 0 135 0 10 0 137 21 93 0 230 21 97 0 237 0 29 0 239] 
#[0 10 238 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 1 201 0 9 21 101 1 28] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 21 105 1 98 1 13 1 199] 
#[1 17 137 0 27 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 8 142 0 135 0 10 0 137 21 109 0 228 21 109 0 229 19 209 0 232 11 245 0 237 0 29 0 239] 
#[0 21 113 0 135] 
#[1 21 117 0 16 17 137 0 27 8 142 0 135 17 141 0 226 21 121 0 228 21 121 0 229] 
#[1 17 137 0 27 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 8 142 0 135 0 10 0 137 21 125 0 228 21 125 0 229 19 209 0 232 11 245 0 237 0 29 0 239] 
#[0 21 129 0 135] 
#[1 17 137 0 27 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 8 142 0 135 0 10 0 137 21 133 0 228 21 133 0 229 19 209 0 232 11 245 0 237 0 29 0 239] 
#[0 21 137 0 135] 
#[1 21 141 0 16 17 137 0 27 8 142 0 135 17 141 0 226 21 145 0 228 21 145 0 229] 
#[1 7 6 0 16 7 6 0 27 7 6 0 135 21 149 0 227] 
#[1 21 153 0 16 17 137 0 27 8 142 0 135 17 141 0 226 21 157 0 228 21 157 0 229] 
#[0 10 242 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 21 161 0 135 0 10 0 137 14 201 0 186 14 205 0 237 0 29 0 239] 
#[1 4 246 0 41 4 246 0 57 4 246 0 65 4 246 0 81 4 246 0 82 4 246 0 85 4 246 0 86 4 246 0 87 4 246 0 88 4 246 0 89 4 246 0 90 4 246 0 91 4 246 0 92 4 246 0 93 4 246 0 94 4 246 0 95 4 246 0 96 4 246 0 97 4 246 0 98 4 246 0 99 4 246 0 100 4 246 0 101 4 246 0 102 4 246 0 103 4 246 0 104 4 246 0 105 4 246 0 106 4 246 0 107 4 246 0 108 4 246 0 109 4 246 0 110 4 246 0 111 4 246 0 112 4 246 0 113 4 246 0 114 4 246 0 115 4 246 0 135 4 246 0 137 21 165 0 187] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 21 169 0 135 0 10 0 137 14 201 0 186 14 205 0 237 0 29 0 239] 
#[0 10 246 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 21 173 0 135 0 10 0 137 14 201 0 186 14 205 0 237 0 29 0 239] 
#[0 10 250 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 10 254 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[0 11 2 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[0 11 6 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 11 10 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 21 177 0 135 0 10 0 137 17 229 0 198 17 233 0 237 0 29 0 239] 
#[0 11 14 0 10] 
#[0 11 18 0 16 0 135] 
#[0 11 22 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 11 26 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 21 181 0 135 0 10 0 137 15 153 0 194 15 157 0 237 0 29 0 239] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 21 185 0 135 0 10 0 137 15 153 0 194 15 157 0 237 0 29 0 239] 
#[1 5 62 0 41 5 62 0 57 5 62 0 65 5 62 0 81 5 62 0 82 5 62 0 85 5 62 0 86 5 62 0 87 5 62 0 88 5 62 0 89 5 62 0 90 5 62 0 91 5 62 0 92 5 62 0 93 5 62 0 94 5 62 0 95 5 62 0 96 5 62 0 97 5 62 0 98 5 62 0 99 5 62 0 100 5 62 0 101 5 62 0 102 5 62 0 103 5 62 0 104 5 62 0 105 5 62 0 106 5 62 0 107 5 62 0 108 5 62 0 109 5 62 0 110 5 62 0 111 5 62 0 112 5 62 0 113 5 62 0 114 5 62 0 115 5 62 0 135 5 62 0 137 21 189 0 195] 
#[0 11 30 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 11 34 0 16 0 27 0 34 0 110 0 115 0 134] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 21 193 0 10 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 21 197 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 21 201 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[1 2 250 0 1 2 250 0 3 2 250 0 9 2 250 0 14 2 250 0 17 2 250 0 18 2 250 0 27 2 250 0 28 2 250 0 41 2 250 0 42 2 250 0 49 2 250 0 52 2 250 0 53 2 250 0 57 2 250 0 58 2 250 0 60 2 250 0 64 2 250 0 65 2 250 0 67 2 250 0 68 2 250 0 71 2 250 0 72 2 250 0 73 2 250 0 74 2 250 0 75 2 250 0 76 2 250 0 77 2 250 0 78 2 250 0 79 2 250 0 80 2 250 0 81 2 250 0 82 2 250 0 83 2 250 0 85 2 250 0 86 2 250 0 87 2 250 0 88 2 250 0 89 2 250 0 90 2 250 0 91 2 250 0 92 2 250 0 93 2 250 0 94 2 250 0 95 2 250 0 96 2 250 0 97 2 250 0 98 2 250 0 99 2 250 0 100 2 250 0 101 2 250 0 102 2 250 0 103 2 250 0 104 2 250 0 105 2 250 0 106 2 250 0 107 2 250 0 108 2 250 0 109 2 250 0 110 2 250 0 111 2 250 0 112 2 250 0 113 2 250 0 114 2 250 0 115 2 250 0 116 2 250 0 117 2 250 0 118 2 250 0 119 2 250 0 120 2 250 0 121 2 250 0 123 2 250 0 124 2 250 0 127 2 250 0 128 2 250 0 130 2 250 0 131 2 250 0 134 2 250 0 137 21 205 1 105 9 49 1 106 9 53 1 107] 
#[1 2 250 0 1 2 250 0 3 2 250 0 9 2 250 0 14 2 250 0 17 2 250 0 18 2 250 0 27 2 250 0 28 2 250 0 41 2 250 0 42 2 250 0 49 2 250 0 52 2 250 0 53 2 250 0 57 2 250 0 58 2 250 0 60 2 250 0 64 2 250 0 65 2 250 0 67 2 250 0 68 2 250 0 71 2 250 0 72 2 250 0 73 2 250 0 74 2 250 0 75 2 250 0 76 2 250 0 77 2 250 0 78 2 250 0 79 2 250 0 80 2 250 0 81 2 250 0 82 2 250 0 83 2 250 0 85 2 250 0 86 2 250 0 87 2 250 0 88 2 250 0 89 2 250 0 90 2 250 0 91 2 250 0 92 2 250 0 93 2 250 0 94 2 250 0 95 2 250 0 96 2 250 0 97 2 250 0 98 2 250 0 99 2 250 0 100 2 250 0 101 2 250 0 102 2 250 0 103 2 250 0 104 2 250 0 105 2 250 0 106 2 250 0 107 2 250 0 108 2 250 0 109 2 250 0 110 2 250 0 111 2 250 0 112 2 250 0 113 2 250 0 114 2 250 0 115 2 250 0 116 2 250 0 117 2 250 0 118 2 250 0 119 2 250 0 120 2 250 0 121 2 250 0 123 2 250 0 124 2 250 0 127 2 250 0 128 2 250 0 130 2 250 0 131 2 250 0 134 2 250 0 137 21 209 1 105 9 49 1 106 9 53 1 107] 
#[0 21 213 0 134] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 21 217 1 98 1 13 1 199] 
#[0 11 38 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 18 109 0 55 4 237 0 134 21 221 0 164 21 225 1 127] 
#[0 11 42 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 66 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 11 46 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 11 50 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 55 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 66 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 2 250 0 1 2 250 0 3 2 250 0 9 2 250 0 14 2 250 0 17 2 250 0 18 2 250 0 27 2 250 0 28 2 250 0 41 2 250 0 42 2 250 0 49 2 250 0 52 2 250 0 53 2 250 0 57 2 250 0 58 2 250 0 60 2 250 0 64 2 250 0 65 2 250 0 67 2 250 0 68 2 250 0 71 2 250 0 72 2 250 0 73 2 250 0 74 2 250 0 75 2 250 0 76 2 250 0 77 2 250 0 78 2 250 0 79 2 250 0 80 2 250 0 81 2 250 0 82 2 250 0 83 2 250 0 85 2 250 0 86 2 250 0 87 2 250 0 88 2 250 0 89 2 250 0 90 2 250 0 91 2 250 0 92 2 250 0 93 2 250 0 94 2 250 0 95 2 250 0 96 2 250 0 97 2 250 0 98 2 250 0 99 2 250 0 100 2 250 0 101 2 250 0 102 2 250 0 103 2 250 0 104 2 250 0 105 2 250 0 106 2 250 0 107 2 250 0 108 2 250 0 109 2 250 0 110 2 250 0 111 2 250 0 112 2 250 0 113 2 250 0 114 2 250 0 115 2 250 0 116 2 250 0 117 2 250 0 118 2 250 0 119 2 250 0 120 2 250 0 121 2 250 0 123 2 250 0 124 2 250 0 127 2 250 0 128 2 250 0 130 2 250 0 131 2 250 0 134 2 250 0 137 21 229 1 105 9 49 1 106 9 53 1 107] 
#[0 21 233 0 10] 
#[0 11 54 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 2 246 0 16 2 246 0 27 21 237 0 150] 
#[0 11 58 0 10 0 16 0 26 0 32 0 43 0 135] 
#[0 11 62 0 10 0 16 0 26 0 32 0 43 0 135] 
#[1 11 66 0 10 11 66 0 16 11 66 0 26 11 66 0 32 21 241 0 36 11 66 0 43 11 66 0 135] 
#[0 11 70 0 10] 
#[0 11 74 0 10] 
#[0 11 78 0 10] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 6 17 0 22 6 21 0 23 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 6 29 0 67 6 33 0 68 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 37 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 6 41 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 21 245 1 8 6 53 1 9 6 57 1 10 6 61 1 11 6 65 1 12 6 69 1 13 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 11 82 0 16 0 43 0 61 0 135] 
#[1 5 1 0 9 21 249 0 166 21 249 0 167] 
#[0 11 86 0 26 0 27] 
#[1 21 73 0 71 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 21 77 1 98 1 13 1 199] 
#[0 11 90 0 27] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 8 153 1 98 21 253 1 146 1 13 1 199] 
#[0 11 94 0 27] 
#[1 2 93 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 85 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 1 13 1 97 8 153 1 98 2 85 1 100 22 1 1 146 22 5 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 1 13 1 199] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 213 0 157 22 9 0 158 1 13 1 97 8 221 1 98 1 13 1 199] 
#[0 11 98 0 27] 
#[1 19 25 0 89 19 25 0 108 19 25 0 109 19 25 0 110 19 25 0 111 19 25 0 112 19 25 0 113 19 25 0 114 19 25 0 115 19 25 0 137 22 13 0 213 19 25 1 100] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 8 153 1 98 22 17 1 146 1 13 1 199] 
#[1 5 1 0 9 22 21 0 166 22 21 0 167] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 8 153 1 98 22 25 1 146 1 13 1 199] 
#[0 11 102 0 27] 
#[0 11 106 0 27] 
#[0 11 110 0 27] 
#[0 11 114 0 27] 
#[1 22 29 0 32 11 118 0 34 11 118 0 110 11 118 0 115 11 118 0 134] 
#[0 11 122 0 27] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 213 0 157 22 33 0 158 1 13 1 97 8 221 1 98 1 13 1 199] 
#[0 11 126 0 27] 
#[0 11 130 0 27 0 34 0 110 0 115 0 134] 
#[0 11 134 0 27] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 22 37 0 203 4 93 0 206 1 13 1 97 4 97 1 98 1 13 1 199] 
#[0 11 138 0 27] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 22 41 0 203 4 93 0 206 1 13 1 97 4 97 1 98 1 13 1 199] 
#[1 2 93 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 85 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 8 213 0 157 22 45 0 158 1 13 1 97 8 221 1 98 2 85 1 100 22 49 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 1 13 1 199] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 213 0 157 22 53 0 158 1 13 1 97 8 221 1 98 1 13 1 199] 
#[0 11 142 0 27] 
#[1 1 201 0 9 22 57 0 20 22 61 1 28] 
#[1 1 201 0 9 22 65 0 20 22 69 1 28] 
#[1 11 146 0 16 11 146 0 27 11 146 0 34 11 146 0 110 11 146 0 115 11 146 0 134 22 73 0 217] 
#[0 11 150 0 16 0 27 0 34 0 110 0 115 0 134] 
#[0 22 77 0 32] 
#[0 11 154 0 16 0 27 0 34 0 110 0 115 0 134] 
#[0 11 158 0 9] 
#[0 11 162 0 9] 
#[1 5 1 0 9 22 81 0 166 22 81 0 167] 
#[0 11 166 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 11 170 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 11 174 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[1 17 9 0 57 17 13 0 65 17 45 0 81 2 93 0 82 17 17 0 85 2 81 0 86 17 21 0 87 2 81 0 88 1 29 0 89 2 81 0 90 2 81 0 91 17 25 0 92 17 29 0 93 2 9 0 94 2 13 0 95 2 81 0 96 2 81 0 97 2 81 0 98 17 33 0 99 2 81 0 100 17 37 0 101 2 81 0 102 2 81 0 103 2 81 0 104 2 25 0 105 17 41 0 106 2 81 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 17 45 0 156 17 49 0 161 22 85 0 191 17 57 0 201 17 61 0 202 17 65 0 207 17 69 0 210 17 73 0 211 17 77 0 212 17 81 0 213 17 57 0 221 17 61 0 222 17 93 0 223 2 81 1 97 17 97 1 100 17 101 1 159 2 93 1 161 2 93 1 162 2 101 1 163 2 109 1 174 2 117 1 175 2 117 1 176 2 81 1 199] 
#[0 11 178 0 16 0 27 0 135] 
#[1 1 201 0 9 22 89 1 28] 
#[0 22 93 0 135] 
#[0 11 182 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 17 137 0 27 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 8 142 0 135 0 10 0 137 22 97 0 228 22 97 0 229 19 209 0 232 11 245 0 237 0 29 0 239] 
#[0 22 101 0 135] 
#[0 22 105 0 135] 
#[0 11 186 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 22 109 0 135] 
#[0 11 190 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 17 137 0 27 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 8 142 0 135 0 10 0 137 22 113 0 228 22 113 0 229 19 209 0 232 11 245 0 237 0 29 0 239] 
#[0 22 117 0 135] 
#[1 22 121 0 16 17 137 0 27 8 142 0 135 17 141 0 226 22 125 0 228 22 125 0 229] 
#[1 17 137 0 27 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 8 142 0 135 0 10 0 137 22 129 0 228 22 129 0 229 19 209 0 232 11 245 0 237 0 29 0 239] 
#[0 22 133 0 135] 
#[0 11 194 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 22 137 0 135 0 10 0 137 14 201 0 186 14 205 0 237 0 29 0 239] 
#[0 11 198 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 11 202 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 11 206 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 11 210 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 11 214 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 22 141 0 135 0 10 0 137 15 153 0 194 15 157 0 237 0 29 0 239] 
#[0 11 218 0 16 0 27 0 34 0 110 0 115 0 134] 
#[1 22 145 0 10 22 149 0 16] 
#[0 22 153 0 10] 
#[1 5 103 0 1 5 103 0 3 5 103 0 9 5 103 0 14 5 103 0 17 5 103 0 18 5 103 0 27 5 103 0 28 5 103 0 41 5 103 0 42 5 103 0 49 5 103 0 52 5 103 0 53 11 222 0 54 5 103 0 57 5 103 0 58 11 222 0 59 5 103 0 60 11 222 0 61 5 103 0 64 5 103 0 65 5 103 0 67 5 103 0 68 5 103 0 71 5 103 0 72 5 103 0 73 5 103 0 74 5 103 0 75 5 103 0 76 5 103 0 77 5 103 0 78 5 103 0 79 5 103 0 80 5 103 0 81 5 103 0 82 5 103 0 83 5 103 0 85 5 103 0 86 5 103 0 87 5 103 0 88 5 103 0 89 5 103 0 90 5 103 0 91 5 103 0 92 5 103 0 93 5 103 0 94 5 103 0 95 5 103 0 96 5 103 0 97 5 103 0 98 5 103 0 99 5 103 0 100 5 103 0 101 5 103 0 102 5 103 0 103 5 103 0 104 5 103 0 105 5 103 0 106 5 103 0 107 5 103 0 108 5 103 0 109 5 103 0 110 5 103 0 111 5 103 0 112 5 103 0 113 5 103 0 114 5 103 0 115 5 103 0 116 5 103 0 117 5 103 0 118 5 103 0 119 5 103 0 120 5 103 0 121 5 103 0 123 5 103 0 124 5 103 0 127 5 103 0 128 5 103 0 130 5 103 0 131 5 103 0 134 11 222 0 135 5 103 0 137 12 193 1 106 9 53 1 107] 
#[1 5 107 0 1 5 107 0 3 5 107 0 9 5 107 0 14 5 107 0 17 5 107 0 18 5 107 0 27 5 107 0 28 5 107 0 41 5 107 0 42 5 107 0 49 5 107 0 52 5 107 0 53 11 226 0 54 5 107 0 57 5 107 0 58 11 226 0 59 5 107 0 60 5 111 0 61 5 107 0 64 5 107 0 65 5 107 0 67 5 107 0 68 5 107 0 71 5 107 0 72 5 107 0 73 5 107 0 74 5 107 0 75 5 107 0 76 5 107 0 77 5 107 0 78 5 107 0 79 5 107 0 80 5 107 0 81 5 107 0 82 5 107 0 83 5 107 0 85 5 107 0 86 5 107 0 87 5 107 0 88 5 107 0 89 5 107 0 90 5 107 0 91 5 107 0 92 5 107 0 93 5 107 0 94 5 107 0 95 5 107 0 96 5 107 0 97 5 107 0 98 5 107 0 99 5 107 0 100 5 107 0 101 5 107 0 102 5 107 0 103 5 107 0 104 5 107 0 105 5 107 0 106 5 107 0 107 5 107 0 108 5 107 0 109 5 107 0 110 5 107 0 111 5 107 0 112 5 107 0 113 5 107 0 114 5 107 0 115 5 107 0 116 5 107 0 117 5 107 0 118 5 107 0 119 5 107 0 120 5 107 0 121 5 107 0 123 5 107 0 124 5 107 0 127 5 107 0 128 5 107 0 130 5 107 0 131 5 107 0 134 11 226 0 135 5 107 0 137 12 193 1 106 9 53 1 107] 
#[1 11 230 0 54 11 230 0 59 11 230 0 85 11 230 0 86 11 230 0 87 11 230 0 88 11 230 0 89 11 230 0 90 11 230 0 91 11 230 0 92 11 230 0 93 11 230 0 94 11 230 0 95 11 230 0 96 11 230 0 97 11 230 0 98 11 230 0 99 11 230 0 100 11 230 0 101 11 230 0 102 11 230 0 103 11 230 0 104 11 230 0 105 11 230 0 106 11 230 0 107 11 230 0 108 11 230 0 109 11 230 0 110 11 230 0 111 11 230 0 112 11 230 0 113 11 230 0 114 11 230 0 115 11 230 0 135 11 230 0 137 22 161 1 120] 
#[1 22 165 0 10 22 169 0 16] 
#[0 11 234 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 55 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 66 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 4 237 0 134 22 173 0 164] 
#[1 5 115 0 1 5 115 0 3 5 115 0 9 5 115 0 14 5 115 0 17 5 115 0 18 5 115 0 27 5 115 0 28 5 115 0 41 5 115 0 42 5 115 0 49 5 115 0 52 5 115 0 53 11 238 0 54 5 115 0 57 5 115 0 58 11 238 0 59 5 115 0 60 11 238 0 61 5 115 0 64 5 115 0 65 5 115 0 67 5 115 0 68 5 115 0 71 5 115 0 72 5 115 0 73 5 115 0 74 5 115 0 75 5 115 0 76 5 115 0 77 5 115 0 78 5 115 0 79 5 115 0 80 5 115 0 81 5 115 0 82 5 115 0 83 5 115 0 85 5 115 0 86 5 115 0 87 5 115 0 88 5 115 0 89 5 115 0 90 5 115 0 91 5 115 0 92 5 115 0 93 5 115 0 94 5 115 0 95 5 115 0 96 5 115 0 97 5 115 0 98 5 115 0 99 5 115 0 100 5 115 0 101 5 115 0 102 5 115 0 103 5 115 0 104 5 115 0 105 5 115 0 106 5 115 0 107 5 115 0 108 5 115 0 109 5 115 0 110 5 115 0 111 5 115 0 112 5 115 0 113 5 115 0 114 5 115 0 115 5 115 0 116 5 115 0 117 5 115 0 118 5 115 0 119 5 115 0 120 5 115 0 121 5 115 0 123 5 115 0 124 5 115 0 127 5 115 0 128 5 115 0 130 5 115 0 131 5 115 0 134 11 238 0 135 5 115 0 137 12 193 1 106 9 53 1 107] 
#[1 2 250 0 1 2 250 0 3 2 250 0 9 2 250 0 14 2 250 0 17 2 250 0 18 2 250 0 27 2 250 0 28 2 250 0 41 2 250 0 42 2 250 0 49 2 250 0 52 2 250 0 53 2 250 0 57 2 250 0 58 2 250 0 60 2 250 0 64 2 250 0 65 2 250 0 67 2 250 0 68 2 250 0 71 2 250 0 72 2 250 0 73 2 250 0 74 2 250 0 75 2 250 0 76 2 250 0 77 2 250 0 78 2 250 0 79 2 250 0 80 2 250 0 81 2 250 0 82 2 250 0 83 2 250 0 85 2 250 0 86 2 250 0 87 2 250 0 88 2 250 0 89 2 250 0 90 2 250 0 91 2 250 0 92 2 250 0 93 2 250 0 94 2 250 0 95 2 250 0 96 2 250 0 97 2 250 0 98 2 250 0 99 2 250 0 100 2 250 0 101 2 250 0 102 2 250 0 103 2 250 0 104 2 250 0 105 2 250 0 106 2 250 0 107 2 250 0 108 2 250 0 109 2 250 0 110 2 250 0 111 2 250 0 112 2 250 0 113 2 250 0 114 2 250 0 115 2 250 0 116 2 250 0 117 2 250 0 118 2 250 0 119 2 250 0 120 2 250 0 121 2 250 0 123 2 250 0 124 2 250 0 127 2 250 0 128 2 250 0 130 2 250 0 131 2 250 0 134 2 250 0 137 22 177 1 105 9 49 1 106 9 53 1 107] 
#[1 12 161 0 16 11 242 0 27 12 169 0 149] 
#[0 11 246 0 10 0 16 0 26 0 32 0 43 0 135] 
#[0 11 250 0 16 0 43 0 61 0 135] 
#[1 22 181 0 32 11 254 0 34 11 254 0 110 11 254 0 115 11 254 0 134] 
#[0 12 2 0 27] 
#[0 12 6 0 27] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 8 153 1 98 22 185 1 146 1 13 1 199] 
#[0 12 10 0 27] 
#[1 5 1 0 9 22 189 0 166 22 189 0 167] 
#[0 12 14 0 27] 
#[0 11 118 0 27] 
#[0 12 18 0 27] 
#[1 1 81 0 89 1 81 0 108 1 81 0 109 1 81 0 110 1 81 0 111 1 81 0 112 1 81 0 113 1 81 0 114 1 81 0 115 1 81 0 137 22 193 1 99 1 81 1 100 1 85 1 163 22 193 1 189] 
#[0 12 22 0 27] 
#[0 12 26 0 27] 
#[0 12 30 0 27] 
#[0 12 34 0 27] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 213 0 157 22 197 0 158 1 13 1 97 8 221 1 98 1 13 1 199] 
#[0 12 38 0 27] 
#[1 22 201 0 71 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 22 205 1 98 1 13 1 199] 
#[0 12 42 0 16 0 27 0 34 0 110 0 115 0 134] 
#[1 22 209 0 71 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 22 213 1 98 1 13 1 199] 
#[0 12 46 0 27] 
#[1 22 217 0 16 12 50 0 27 12 50 0 34 12 50 0 110 12 50 0 115 12 50 0 134 22 221 0 216] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 22 225 0 220 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 22 229 1 33 22 233 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 12 54 0 27 0 34 0 110 0 115 0 134] 
#[0 12 58 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[0 12 62 0 16 0 27 0 135] 
#[0 12 66 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 22 237 0 135] 
#[0 12 70 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 12 74 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 12 78 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 22 241 0 135] 
#[0 12 82 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 17 137 0 27 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 8 142 0 135 0 10 0 137 22 245 0 228 22 245 0 229 19 209 0 232 11 245 0 237 0 29 0 239] 
#[0 22 249 0 135] 
#[0 22 253 0 135] 
#[0 12 86 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 12 90 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 12 94 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 12 98 0 16 0 27 0 34 0 110 0 115 0 134] 
#[0 23 1 0 10] 
#[0 23 5 0 27] 
#[1 2 250 0 1 2 250 0 3 2 250 0 9 2 250 0 14 2 250 0 17 2 250 0 18 2 250 0 27 2 250 0 28 2 250 0 41 2 250 0 42 2 250 0 49 2 250 0 52 2 250 0 53 2 250 0 57 2 250 0 58 2 250 0 60 2 250 0 64 2 250 0 65 2 250 0 67 2 250 0 68 2 250 0 71 2 250 0 72 2 250 0 73 2 250 0 74 2 250 0 75 2 250 0 76 2 250 0 77 2 250 0 78 2 250 0 79 2 250 0 80 2 250 0 81 2 250 0 82 2 250 0 83 2 250 0 85 2 250 0 86 2 250 0 87 2 250 0 88 2 250 0 89 2 250 0 90 2 250 0 91 2 250 0 92 2 250 0 93 2 250 0 94 2 250 0 95 2 250 0 96 2 250 0 97 2 250 0 98 2 250 0 99 2 250 0 100 2 250 0 101 2 250 0 102 2 250 0 103 2 250 0 104 2 250 0 105 2 250 0 106 2 250 0 107 2 250 0 108 2 250 0 109 2 250 0 110 2 250 0 111 2 250 0 112 2 250 0 113 2 250 0 114 2 250 0 115 2 250 0 116 2 250 0 117 2 250 0 118 2 250 0 119 2 250 0 120 2 250 0 121 2 250 0 123 2 250 0 124 2 250 0 127 2 250 0 128 2 250 0 130 2 250 0 131 2 250 0 134 2 250 0 137 23 9 1 106 9 53 1 107] 
#[1 2 250 0 54 2 250 0 59 2 250 0 85 2 250 0 86 2 250 0 87 2 250 0 88 2 250 0 89 2 250 0 90 2 250 0 91 2 250 0 92 2 250 0 93 2 250 0 94 2 250 0 95 2 250 0 96 2 250 0 97 2 250 0 98 2 250 0 99 2 250 0 100 2 250 0 101 2 250 0 102 2 250 0 103 2 250 0 104 2 250 0 105 2 250 0 106 2 250 0 107 2 250 0 108 2 250 0 109 2 250 0 110 2 250 0 111 2 250 0 112 2 250 0 113 2 250 0 114 2 250 0 115 23 13 0 135 2 250 0 137 23 17 1 107 23 21 1 121 23 25 1 122] 
#[0 12 102 0 134] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 23 29 1 98 1 13 1 199] 
#[0 12 106 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 55 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 66 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 5 119 0 1 5 119 0 3 5 119 0 9 5 119 0 14 5 119 0 17 5 119 0 18 5 119 0 27 5 119 0 28 5 119 0 41 5 119 0 42 5 119 0 49 5 119 0 52 5 119 0 53 12 110 0 54 5 119 0 57 5 119 0 58 12 110 0 59 5 119 0 60 12 110 0 61 5 119 0 64 5 119 0 65 5 119 0 67 5 119 0 68 5 119 0 71 5 119 0 72 5 119 0 73 5 119 0 74 5 119 0 75 5 119 0 76 5 119 0 77 5 119 0 78 5 119 0 79 5 119 0 80 5 119 0 81 5 119 0 82 5 119 0 83 5 119 0 85 5 119 0 86 5 119 0 87 5 119 0 88 5 119 0 89 5 119 0 90 5 119 0 91 5 119 0 92 5 119 0 93 5 119 0 94 5 119 0 95 5 119 0 96 5 119 0 97 5 119 0 98 5 119 0 99 5 119 0 100 5 119 0 101 5 119 0 102 5 119 0 103 5 119 0 104 5 119 0 105 5 119 0 106 5 119 0 107 5 119 0 108 5 119 0 109 5 119 0 110 5 119 0 111 5 119 0 112 5 119 0 113 5 119 0 114 5 119 0 115 5 119 0 116 5 119 0 117 5 119 0 118 5 119 0 119 5 119 0 120 5 119 0 121 5 119 0 123 5 119 0 124 5 119 0 127 5 119 0 128 5 119 0 130 5 119 0 131 5 119 0 134 12 110 0 135 5 119 0 137 12 193 1 106 9 53 1 107] 
#[1 1 81 0 89 1 81 0 108 1 81 0 109 1 81 0 110 1 81 0 111 1 81 0 112 1 81 0 113 1 81 0 114 1 81 0 115 1 81 0 137 23 33 1 99 1 81 1 100 1 85 1 163 23 33 1 189] 
#[0 12 114 0 27] 
#[0 11 254 0 27] 
#[0 12 118 0 27] 
#[0 12 122 0 27] 
#[1 1 201 0 9 23 37 1 28] 
#[1 1 201 0 9 23 41 1 28] 
#[1 1 201 0 9 23 45 1 28] 
#[1 1 201 0 9 23 49 0 32 23 53 1 28] 
#[1 12 201 0 52 21 49 0 75 23 57 0 77 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 23 61 0 218 23 61 0 219 1 13 1 97 21 65 1 98 23 61 1 136 1 13 1 199] 
#[0 12 126 0 16 0 27 0 34 0 110 0 115 0 134] 
#[0 12 130 0 16 0 27 0 34 0 110 0 115 0 134] 
#[1 12 134 0 16 7 9 0 21 12 134 0 27 12 134 0 34 12 134 0 110 12 134 0 115 12 134 0 134] 
#[1 12 138 0 16 7 13 0 21 12 138 0 27 12 138 0 34 7 17 0 38 12 138 0 110 12 138 0 115 12 138 0 134] 
#[0 12 142 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 12 146 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 23 65 0 135] 
#[0 12 150 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 12 154 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[0 12 158 0 16 0 27 0 34 0 110 0 115 0 134] 
#[0 12 162 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 12 166 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 12 170 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 23 69 0 54 23 73 0 59 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 14 101 1 98 13 61 1 130 1 13 1 199] 
#[0 12 174 0 54 0 59 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[0 23 77 0 135] 
#[0 23 81 0 10] 
#[0 12 178 0 27] 
#[0 12 182 0 16 0 27 0 34 0 110 0 115 0 134] 
#[0 12 186 0 16 0 27 0 34 0 110 0 115 0 134] 
#[0 12 190 0 27] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 23 85 0 220 3 109 0 234 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 22 229 1 33 22 233 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 6 173 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 12 194 0 27] 
#[0 23 89 0 20] 
#[0 12 198 0 16 0 27 0 34 0 110 0 115 0 134] 
#[0 12 202 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 200] 
#[1 4 1 0 1 2 229 0 3 2 233 0 9 4 25 0 14 4 5 0 17 4 25 0 18 2 253 0 28 3 1 0 42 4 13 0 49 3 9 0 57 3 13 0 64 3 17 0 71 3 21 0 72 3 25 0 75 3 29 0 77 3 33 0 78 3 37 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 41 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 45 0 116 3 49 0 117 3 53 0 118 3 57 0 119 3 61 0 120 3 65 0 121 3 69 0 123 3 73 0 124 3 77 0 127 3 81 0 128 3 85 0 130 3 89 0 131 3 93 0 134 1 65 0 137 3 97 0 165 3 101 0 166 3 101 0 167 3 109 0 234 23 93 0 241 3 121 0 248 3 121 0 249 3 121 0 250 3 121 0 251 3 121 0 252 3 121 0 253 3 121 0 254 3 149 0 255 3 153 1 0 3 121 1 3 3 121 1 4 3 121 1 14 3 169 1 15 3 121 1 17 3 121 1 22 3 121 1 25 3 121 1 26 3 121 1 27 3 201 1 33 3 205 1 41 3 209 1 42 3 213 1 45 3 217 1 48 3 221 1 51 3 225 1 55 3 229 1 59 3 233 1 62 3 237 1 65 3 241 1 69 3 245 1 73 3 249 1 77 3 253 1 81 4 1 1 82 4 5 1 83 4 1 1 84 4 13 1 85 3 253 1 86 3 253 1 87 4 25 1 92 4 29 1 93 1 13 1 97 6 5 1 98 4 53 1 99 1 81 1 100 4 45 1 163 4 49 1 164 4 53 1 189 3 121 1 190 4 61 1 192 4 65 1 195 1 13 1 199] 
#[0 23 97 0 26] 
#[0 12 206 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 12 210 0 134] 
#[0 12 214 0 16 0 27 0 34 0 110 0 115 0 134] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 97 23 101 1 98 1 13 1 199] 
#[0 23 105 0 26] 
#[1 2 250 0 1 2 250 0 3 2 250 0 9 2 250 0 14 2 250 0 17 2 250 0 18 2 250 0 27 2 250 0 28 2 250 0 41 2 250 0 42 2 250 0 49 2 250 0 52 2 250 0 53 2 250 0 57 2 250 0 58 2 250 0 60 2 250 0 64 2 250 0 65 2 250 0 67 2 250 0 68 2 250 0 71 2 250 0 72 2 250 0 73 2 250 0 74 2 250 0 75 2 250 0 76 2 250 0 77 2 250 0 78 2 250 0 79 2 250 0 80 2 250 0 81 2 250 0 82 2 250 0 83 2 250 0 85 2 250 0 86 2 250 0 87 2 250 0 88 2 250 0 89 2 250 0 90 2 250 0 91 2 250 0 92 2 250 0 93 2 250 0 94 2 250 0 95 2 250 0 96 2 250 0 97 2 250 0 98 2 250 0 99 2 250 0 100 2 250 0 101 2 250 0 102 2 250 0 103 2 250 0 104 2 250 0 105 2 250 0 106 2 250 0 107 2 250 0 108 2 250 0 109 2 250 0 110 2 250 0 111 2 250 0 112 2 250 0 113 2 250 0 114 2 250 0 115 2 250 0 116 2 250 0 117 2 250 0 118 2 250 0 119 2 250 0 120 2 250 0 121 2 250 0 123 2 250 0 124 2 250 0 127 2 250 0 128 2 250 0 130 2 250 0 131 2 250 0 134 12 218 0 135 2 250 0 137 23 109 1 105 9 49 1 106 9 53 1 107] 
#[0 23 49 0 32] 
#[1 2 250 0 1 2 250 0 3 2 250 0 9 2 250 0 14 2 250 0 17 2 250 0 18 2 250 0 27 2 250 0 28 2 250 0 41 2 250 0 42 2 250 0 49 2 250 0 52 2 250 0 53 12 222 0 54 2 250 0 57 2 250 0 58 12 222 0 59 2 250 0 60 2 250 0 64 2 250 0 65 2 250 0 67 2 250 0 68 2 250 0 71 2 250 0 72 2 250 0 73 2 250 0 74 2 250 0 75 2 250 0 76 2 250 0 77 2 250 0 78 2 250 0 79 2 250 0 80 2 250 0 81 2 250 0 82 2 250 0 83 5 123 0 85 5 123 0 86 5 123 0 87 5 123 0 88 5 123 0 89 5 123 0 90 5 123 0 91 5 123 0 92 5 123 0 93 5 123 0 94 5 123 0 95 5 123 0 96 5 123 0 97 5 123 0 98 5 123 0 99 5 123 0 100 5 123 0 101 5 123 0 102 5 123 0 103 5 123 0 104 5 123 0 105 5 123 0 106 5 123 0 107 5 123 0 108 5 123 0 109 5 123 0 110 5 123 0 111 5 123 0 112 5 123 0 113 5 123 0 114 5 123 0 115 2 250 0 116 2 250 0 117 2 250 0 118 2 250 0 119 2 250 0 120 2 250 0 121 2 250 0 123 2 250 0 124 2 250 0 127 2 250 0 128 2 250 0 130 2 250 0 131 2 250 0 134 12 222 0 135 5 123 0 137 23 113 1 105 9 49 1 106 9 53 1 107] 
#[1 2 250 0 1 2 250 0 3 2 250 0 9 2 250 0 14 2 250 0 17 2 250 0 18 2 250 0 27 2 250 0 28 2 250 0 41 2 250 0 42 2 250 0 49 2 250 0 52 2 250 0 53 2 250 0 57 2 250 0 58 2 250 0 60 2 250 0 64 2 250 0 65 2 250 0 67 2 250 0 68 2 250 0 71 2 250 0 72 2 250 0 73 2 250 0 74 2 250 0 75 2 250 0 76 2 250 0 77 2 250 0 78 2 250 0 79 2 250 0 80 2 250 0 81 2 250 0 82 2 250 0 83 2 250 0 85 2 250 0 86 2 250 0 87 2 250 0 88 2 250 0 89 2 250 0 90 2 250 0 91 2 250 0 92 2 250 0 93 2 250 0 94 2 250 0 95 2 250 0 96 2 250 0 97 2 250 0 98 2 250 0 99 2 250 0 100 2 250 0 101 2 250 0 102 2 250 0 103 2 250 0 104 2 250 0 105 2 250 0 106 2 250 0 107 2 250 0 108 2 250 0 109 2 250 0 110 2 250 0 111 2 250 0 112 2 250 0 113 2 250 0 114 2 250 0 115 2 250 0 116 2 250 0 117 2 250 0 118 2 250 0 119 2 250 0 120 2 250 0 121 2 250 0 123 2 250 0 124 2 250 0 127 2 250 0 128 2 250 0 130 2 250 0 131 2 250 0 134 12 226 0 135 2 250 0 137 12 193 1 106 9 53 1 107] 
#[1 2 250 0 1 2 250 0 3 2 250 0 9 2 250 0 14 2 250 0 17 2 250 0 18 2 250 0 27 2 250 0 28 2 250 0 41 2 250 0 42 2 250 0 49 2 250 0 52 2 250 0 53 12 230 0 54 2 250 0 57 2 250 0 58 12 230 0 59 2 250 0 60 2 250 0 64 2 250 0 65 2 250 0 67 2 250 0 68 2 250 0 71 2 250 0 72 2 250 0 73 2 250 0 74 2 250 0 75 2 250 0 76 2 250 0 77 2 250 0 78 2 250 0 79 2 250 0 80 2 250 0 81 2 250 0 82 2 250 0 83 5 127 0 85 5 127 0 86 5 127 0 87 5 127 0 88 5 127 0 89 5 127 0 90 5 127 0 91 5 127 0 92 5 127 0 93 5 127 0 94 5 127 0 95 5 127 0 96 5 127 0 97 5 127 0 98 5 127 0 99 5 127 0 100 5 127 0 101 5 127 0 102 5 127 0 103 5 127 0 104 5 127 0 105 5 127 0 106 5 127 0 107 5 127 0 108 5 127 0 109 5 127 0 110 5 127 0 111 5 127 0 112 5 127 0 113 5 127 0 114 5 127 0 115 2 250 0 116 2 250 0 117 2 250 0 118 2 250 0 119 2 250 0 120 2 250 0 121 2 250 0 123 2 250 0 124 2 250 0 127 2 250 0 128 2 250 0 130 2 250 0 131 2 250 0 134 12 230 0 135 5 127 0 137 12 193 1 106 9 53 1 107]
	).
]

{ #category : #'as yet unclassified' }
DartParser >> originalFolder: aFileLocator [ 
	self shouldBeImplemented.
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor______logicalOrExpression__logicalOrExpression___1: nodes [

	| result |
	result := OrderedCollection new: 2.
	self add: (nodes at: 1) to: result.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_____identifier__identifier___1: nodes [

	| result |
	result := OrderedCollection new: 2.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_____identifier__identifier___2: nodes [

	| result |
	result := nodes at: 1.
	self add: (nodes at: 2) to: result.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_metadata__metadata__topLevelDefinition__topLevelDefinition__1: nodes [

	| result |
	result := Array new: 2.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_multiLineString__multiLineString____singleLineString__singleLineString___1: nodes [

	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	self add: ((nodes at: 1) at: 1) to: (result at: 1).
	self add: ((nodes at: 1) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression__1: nodes [

	| result |
	result := Array new: 4.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression__2: nodes [

	| result |
	result := Array new: 4.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression__3: nodes [

	| result |
	result := Array new: 4.
	result at: 3 put: (nodes at: 1).
	result at: 4 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression___1: nodes [

	| result |
	result := Array new: 4.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	self add: ((nodes at: 1) at: 1) to: (result at: 1).
	self add: ((nodes at: 1) at: 2) to: (result at: 2).
	self add: ((nodes at: 1) at: 3) to: (result at: 3).
	self add: ((nodes at: 1) at: 4) to: (result at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression___2: nodes [

	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	self add: ((nodes at: 2) at: 3) to: (result at: 3).
	self add: ((nodes at: 2) at: 4) to: (result at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForadditiveExpression2: nodes [

	| result |
	result := DartAdditiveExpressionNode new.
	result addNode: (nodes at: 1) to: result multiplicativeExpressions.
	result addTokens: ((nodes at: 2) at: 1) to: result additiveOperators.
	result
		addNodes: ((nodes at: 2) at: 2)
		to: result multiplicativeExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForadditiveExpression3: nodes [

	| result |
	result := DartAdditiveExpressionNode new.
	result addToken: (nodes at: 2) to: result additiveOperators.
	result addNode: (nodes at: 3) to: result multiplicativeExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForargumentList1: nodes [

	| result |
	result := DartArgumentListNode new.
	result addNode: (nodes at: 1) to: result namedArguments.
	result addNodes: (nodes at: 2) to: result namedArguments.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForargumentList2: nodes [

	| result |
	result := DartArgumentListNode new.
	result expressionList: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result namedArguments.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForassertStatement1: nodes [

	| result |
	result := DartAssertStatementNode new.
	result assertion: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForassertion1: nodes [

	| result |
	result := DartAssertionNode new.
	result addObject: (nodes at: 3) to: result expressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForassertion3: nodes [

	| result |
	result := DartAssertionNode new.
	result addObject: (nodes at: 3) to: result expressions.
	result addObject: (nodes at: 5) to: result expressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForassignableExpression1: nodes [

	| result |
	result := DartAssignableExpressionNode new.
	result primary: (nodes at: 1).
	result assignableSelectorPart: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForassignableExpression2: nodes [

	| result |
	result := DartAssignableExpressionNode new.
	result unconditionalAssignableSelector: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForassignableExpression3: nodes [

	| result |
	result := DartAssignableExpressionNode new.
	result identifier: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForassignableExpressionWithoutCascadeWithOperator1: nodes [

	| result |
	result := DartAssignableExpressionWithoutCascadeWithOperatorNode new.
	result assignableExpression: (nodes at: 1).
	result assignmentOperator: (nodes at: 2).
	result expressionWithoutCascade: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForassignmentOperator1: nodes [

	| result |
	result := DartAssignmentOperatorNode new.
	result equalsSymbol: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForassignmentOperator2: nodes [

	| result |
	result := DartAssignmentOperatorNode new.
	result compoundAssignmentOperator: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForawaitExpression1: nodes [

	| result |
	result := DartAwaitExpressionNode new.
	result unaryExpression: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForbitwiseAndExpression2: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 1) to: result shiftExpressions.
	result addNodes: (nodes at: 2) to: result shiftExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForbitwiseAndExpression3: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 3) to: result shiftExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForbitwiseOrExpression2: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 1) to: result bitwiseXorExpressions.
	result addNodes: (nodes at: 2) to: result bitwiseXorExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForbitwiseOrExpression3: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 3) to: result bitwiseXorExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForbitwiseXorExpression2: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 1) to: result bitwiseAndExpressions.
	result addNodes: (nodes at: 2) to: result bitwiseAndExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForbitwiseXorExpression3: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 3) to: result bitwiseAndExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForblock1: nodes [

	| result |
	result := DartBlockNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForblock2: nodes [

	| result |
	result := DartBlockNode new.
	result statements: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForbooleanLiteral1: nodes [

	| result |
	result := DartBooleanLiteralNode new.
	result _true: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForbooleanLiteral2: nodes [

	| result |
	result := DartBooleanLiteralNode new.
	result _false: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForbreakStatement1: nodes [

	| result |
	result := DartBreakStatementNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForcascade1: nodes [

	| result |
	result := DartCascadeNode new.
	result cascade: (nodes at: 1).
	result cascadeSection: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForcascade3: nodes [

	| result |
	result := DartCascadeNode new.
	result conditionalExpression: (nodes at: 1).
	result cascadeSection: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForcatchPart1: nodes [

	| result |
	result := DartCatchPartNode new.
	result addNode: (nodes at: 3) to: result identifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForcatchPart2: nodes [

	| result |
	result := DartCatchPartNode new.
	result addNode: (nodes at: 3) to: result identifiers.
	result addNode: (nodes at: 5) to: result identifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration10: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 3).
	result interfaces: (nodes at: 4).
	result addObjects: ((nodes at: 6) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 6) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration11: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 3).
	result mixins: (nodes at: 4).
	result addObjects: ((nodes at: 6) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 6) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration12: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 3).
	result mixins: (nodes at: 4).
	result interfaces: (nodes at: 5).
	result addObjects: ((nodes at: 7) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 7) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration13: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 3).
	result superclass: (nodes at: 4).
	result addObjects: ((nodes at: 6) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 6) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration14: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 3).
	result superclass: (nodes at: 4).
	result interfaces: (nodes at: 5).
	result addObjects: ((nodes at: 7) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 7) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration15: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 3).
	result superclass: (nodes at: 4).
	result mixins: (nodes at: 5).
	result addObjects: ((nodes at: 7) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 7) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration16: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 3).
	result superclass: (nodes at: 4).
	result mixins: (nodes at: 5).
	result interfaces: (nodes at: 6).
	result addObjects: ((nodes at: 8) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 8) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration17: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result mixinApplicationClass: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration18: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result mixinApplicationClass: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration1: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 2).
	result addObjects: ((nodes at: 4) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 4) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration2: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 2).
	result interfaces: (nodes at: 3).
	result addObjects: ((nodes at: 5) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 5) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration3: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 2).
	result mixins: (nodes at: 3).
	result addObjects: ((nodes at: 5) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 5) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration4: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 2).
	result mixins: (nodes at: 3).
	result interfaces: (nodes at: 4).
	result addObjects: ((nodes at: 6) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 6) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration5: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 2).
	result superclass: (nodes at: 3).
	result addObjects: ((nodes at: 5) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 5) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration6: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 2).
	result superclass: (nodes at: 3).
	result interfaces: (nodes at: 4).
	result addObjects: ((nodes at: 6) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 6) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration7: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 2).
	result superclass: (nodes at: 3).
	result mixins: (nodes at: 4).
	result addObjects: ((nodes at: 6) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 6) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration8: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 2).
	result superclass: (nodes at: 3).
	result mixins: (nodes at: 4).
	result interfaces: (nodes at: 5).
	result addObjects: ((nodes at: 7) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 7) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration9: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 3).
	result addObjects: ((nodes at: 5) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 5) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassMemberDefinition1: nodes [

	| result |
	result := DartClassMemberDefinitionNode new.
	result signature: (nodes at: 1).
	result functionBody: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassMemberDefinition2: nodes [

	| result |
	result := DartClassMemberDefinitionNode new.
	result declaration: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconditionalExpression2: nodes [

	| result |
	result := DartConditionalExpressionNode new.
	result testExpression: (nodes at: 1).
	result trueExpression: (nodes at: 3).
	result falseExpression: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconfigurableUri1: nodes [

	| result |
	result := DartConfigurableUriNode new.
	result uri: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result configurationUris.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconfigurationUri1: nodes [

	| result |
	result := DartConfigurationUriNode new.
	result uriTest: (nodes at: 3).
	result uriConfigured: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconstObjectExpression1: nodes [

	| result |
	result := DartConstObjectExpressionNode new.
	result constructorDesignation: (nodes at: 2).
	result arguments: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconstantConstructorSignature1: nodes [

	| result |
	result := DartConstantConstructorSignatureNode new.
	result constructorName: (nodes at: 2).
	result formalParameterList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconstructorDesignation3: nodes [

	| result |
	result := DartConstructorDesignationNode new.
	result typeName: (nodes at: 1).
	result typeArguments: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconstructorDesignation4: nodes [

	| result |
	result := DartConstructorDesignationNode new.
	result typeName: (nodes at: 1).
	result typeArguments: (nodes at: 2).
	result identifier: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconstructorInvocation1: nodes [

	| result |
	result := DartConstructorInvocationNode new.
	result typeName: (nodes at: 1).
	result typeArguments: (nodes at: 2).
	result arguments: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconstructorInvocation2: nodes [

	| result |
	result := DartConstructorInvocationNode new.
	result typeName: (nodes at: 1).
	result arguments: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconstructorName1: nodes [

	| result |
	result := DartConstructorNameNode new.
	result addObject: (nodes at: 1) to: result typeIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconstructorName2: nodes [

	| result |
	result := DartConstructorNameNode new.
	result addObject: (nodes at: 1) to: result typeIdentifiers.
	result addObject: (nodes at: 3) to: result typeIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconstructorSignature1: nodes [

	| result |
	result := DartConstructorSignatureNode new.
	result constructorName: (nodes at: 1).
	result formalParameterList: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForcontinueStatement1: nodes [

	| result |
	result := DartContinueStatementNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration13: nodes [

	| result |
	result := DartDeclarationNode new.
	result finalVarOrType: (nodes at: 2).
	result identifierList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration14: nodes [

	| result |
	result := DartDeclarationNode new.
	result finalVarOrType: (nodes at: 3).
	result identifierList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration15: nodes [

	| result |
	result := DartDeclarationNode new.
	result varOrType: (nodes at: 3).
	result identifierList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration16: nodes [

	| result |
	result := DartDeclarationNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration22: nodes [

	| result |
	result := DartDeclarationNode new.
	result staticFinalDeclarationList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration23: nodes [

	| result |
	result := DartDeclarationNode new.
	result staticFinalDeclarationList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration24: nodes [

	| result |
	result := DartDeclarationNode new.
	result initializedIdentifierList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration25: nodes [

	| result |
	result := DartDeclarationNode new.
	result initializedIdentifierList: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration28: nodes [

	| result |
	result := DartDeclarationNode new.
	result identifierList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration29: nodes [

	| result |
	result := DartDeclarationNode new.
	result type: (nodes at: 4).
	result identifierList: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration30: nodes [

	| result |
	result := DartDeclarationNode new.
	result varOrType: (nodes at: 2).
	result initializedIdentifierList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration31: nodes [

	| result |
	result := DartDeclarationNode new.
	result varOrType: (nodes at: 3).
	result initializedIdentifierList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration32: nodes [

	| result |
	result := DartDeclarationNode new.
	result finalToken: (nodes at: 1).
	result initializedIdentifierList: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration33: nodes [

	| result |
	result := DartDeclarationNode new.
	result finalToken: (nodes at: 1).
	result type: (nodes at: 2).
	result initializedIdentifierList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration34: nodes [

	| result |
	result := DartDeclarationNode new.
	result varOrType: (nodes at: 1).
	result initializedIdentifierList: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration35: nodes [

	| result |
	result := DartDeclarationNode new.
	result finalToken: (nodes at: 2).
	result initializedIdentifierList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration36: nodes [

	| result |
	result := DartDeclarationNode new.
	result finalToken: (nodes at: 2).
	result type: (nodes at: 3).
	result initializedIdentifierList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration39: nodes [

	| result |
	result := DartDeclarationNode new.
	result constantConstructorSignature: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration40: nodes [

	| result |
	result := DartDeclarationNode new.
	result constantConstructorSignature: (nodes at: 1).
	result redirection: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration41: nodes [

	| result |
	result := DartDeclarationNode new.
	result constantConstructorSignature: (nodes at: 1).
	result initializers: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration42: nodes [

	| result |
	result := DartDeclarationNode new.
	result constructorSignature: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration43: nodes [

	| result |
	result := DartDeclarationNode new.
	result constructorSignature: (nodes at: 1).
	result redirection: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration44: nodes [

	| result |
	result := DartDeclarationNode new.
	result constructorSignature: (nodes at: 1).
	result initializers: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaredIdentifier1: nodes [

	| result |
	result := DartDeclaredIdentifierNode new.
	result finalConstVarOrType: (nodes at: 1).
	result declaredIdentifier: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaredIdentifier2: nodes [

	| result |
	result := DartDeclaredIdentifierNode new.
	result finalConstVarOrType: (nodes at: 2).
	result declaredIdentifier: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordefaultCase1: nodes [

	| result |
	result := DartDefaultCaseNode new.
	result addNodes: (nodes at: 1) to: result labels.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordefaultCase2: nodes [

	| result |
	result := DartDefaultCaseNode new.
	result addNodes: (nodes at: 1) to: result labels.
	result statements: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordoStatement1: nodes [

	| result |
	result := DartDoStatementNode new.
	result doStatement: (nodes at: 2).
	result doConditionExpression: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordottedIdentifierList1: nodes [

	| result |
	result := DartDottedIdentifierListNode new.
	result addNode: (nodes at: 1) to: result identifiers.
	result addNodes: (nodes at: 2) to: result identifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForelement1: nodes [

	| result |
	result := DartElementNode new.
	result expressionElement: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForelement2: nodes [

	| result |
	result := DartElementNode new.
	result mapElement: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForelement3: nodes [

	| result |
	result := DartElementNode new.
	result spreadElement: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForelement4: nodes [

	| result |
	result := DartElementNode new.
	result ifElement: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForelement5: nodes [

	| result |
	result := DartElementNode new.
	result forElement: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForelements1: nodes [

	| result |
	result := DartElementsNode new.
	result element: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result nextElementses.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForemptyFormalParameterList1: nodes [

	| result |
	result := DartEmptyFormalParameterListNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForenumEntry1: nodes [

	| result |
	result := DartEnumEntryNode new.
	result metadata: (nodes at: 1).
	result addNode: (nodes at: 2) to: result identifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForenumEntry2: nodes [

	| result |
	result := DartEnumEntryNode new.
	result metadata: (nodes at: 1).
	result addNode: (nodes at: 2) to: result identifiers.
	result argumentPart: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForenumEntry3: nodes [

	| result |
	result := DartEnumEntryNode new.
	result metadata: (nodes at: 1).
	result addNode: (nodes at: 2) to: result identifiers.
	result addNode: (nodes at: 4) to: result identifiers.
	result arguments: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForenumEntry4: nodes [

	| result |
	result := DartEnumEntryNode new.
	result metadata: (nodes at: 1).
	result addNode: (nodes at: 2) to: result identifiers.
	result typeArguments: (nodes at: 3).
	result addNode: (nodes at: 5) to: result identifiers.
	result arguments: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForequalityExpression2: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 1) to: result relationalExpressions.
	result addTokens: ((nodes at: 2) at: 1) to: result equalityOperators.
	result
		addNodes: ((nodes at: 2) at: 2)
		to: result relationalExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForequalityExpression3: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addToken: (nodes at: 2) to: result equalityOperators.
	result addNode: (nodes at: 3) to: result relationalExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForexpression1: nodes [

	| result |
	result := nodes at: 3.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForexpression2: nodes [

	| result |
	result := Array new: 6.
	result at: 4 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForexpression3: nodes [

	| result |
	result := Array new: 6.
	result at: 5 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForexpression4: nodes [

	| result |
	result := Array new: 6.
	result at: 6 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForexpressionElement1: nodes [

	| result |
	result := DartExpressionElementNode new.
	result expression: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForexpressionList1: nodes [

	| result |
	result := DartExpressionListNode new.
	result firstExpression: (nodes at: 1).
	result addObjects: (nodes at: 2) to: result nextExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfactoryConstructorSignature1: nodes [

	| result |
	result := DartFactoryConstructorSignatureNode new.
	result constructorName: (nodes at: 2).
	result formalParameterList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfactoryConstructorSignature2: nodes [

	| result |
	result := DartFactoryConstructorSignatureNode new.
	result constructorName: (nodes at: 3).
	result formalParameterList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfieldFormalParameter1: nodes [

	| result |
	result := DartFieldFormalParameterNode new.
	result identifier: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfieldFormalParameter2: nodes [

	| result |
	result := DartFieldFormalParameterNode new.
	result identifier: (nodes at: 3).
	result formalParameterPart: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfieldFormalParameter4: nodes [

	| result |
	result := DartFieldFormalParameterNode new.
	result finalConstVarOrType: (nodes at: 1).
	result identifier: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfieldFormalParameter5: nodes [

	| result |
	result := DartFieldFormalParameterNode new.
	result finalConstVarOrType: (nodes at: 1).
	result identifier: (nodes at: 4).
	result formalParameterPart: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfieldInitializer1: nodes [

	| result |
	result := DartFieldInitializerNode new.
	result identifier: (nodes at: 1).
	result initializerExpression: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfieldInitializer2: nodes [

	| result |
	result := DartFieldInitializerNode new.
	result identifier: (nodes at: 3).
	result initializerExpression: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfinallyPart1: nodes [

	| result |
	result := DartFinallyPartNode new.
	result block: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForforElement2: nodes [

	^ nodes at: 4
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForforInitializerStatement2: nodes [

	| result |
	result := Array new: 8.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForforInitializerStatement3: nodes [

	| result |
	result := Array new: 8.
	result at: 3 put: ((nodes at: 1) at: 1).
	result at: 4 put: ((nodes at: 1) at: 2).
	result at: 5 put: ((nodes at: 1) at: 3).
	result at: 6 put: ((nodes at: 1) at: 4).
	result at: 7 put: ((nodes at: 1) at: 5).
	result at: 8 put: ((nodes at: 1) at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForforLoopParts1: nodes [

	| result |
	result := Array new: 14.
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	self add: ((nodes at: 4) at: 1) to: (result at: 3).
	self add: ((nodes at: 4) at: 2) to: (result at: 4).
	self add: ((nodes at: 4) at: 3) to: (result at: 5).
	self add: ((nodes at: 4) at: 4) to: (result at: 6).
	self add: ((nodes at: 4) at: 5) to: (result at: 7).
	self add: ((nodes at: 4) at: 6) to: (result at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForforLoopParts3: nodes [

	| result |
	result := Array new: 14.
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 11 put: ((nodes at: 1) at: 1).
	result at: 12 put: ((nodes at: 1) at: 2).
	self add: ((nodes at: 1) at: 3) to: (result at: 3).
	self add: ((nodes at: 1) at: 4) to: (result at: 4).
	self add: ((nodes at: 1) at: 5) to: (result at: 5).
	self add: ((nodes at: 1) at: 6) to: (result at: 6).
	self add: ((nodes at: 1) at: 7) to: (result at: 7).
	self add: ((nodes at: 1) at: 8) to: (result at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForforLoopParts5: nodes [

	| result |
	result := Array new: 14.
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 11 put: ((nodes at: 1) at: 1).
	result at: 12 put: ((nodes at: 1) at: 2).
	self add: ((nodes at: 1) at: 3) to: (result at: 3).
	self add: ((nodes at: 1) at: 4) to: (result at: 4).
	self add: ((nodes at: 1) at: 5) to: (result at: 5).
	self add: ((nodes at: 1) at: 6) to: (result at: 6).
	self add: ((nodes at: 1) at: 7) to: (result at: 7).
	self add: ((nodes at: 1) at: 8) to: (result at: 8).
	self add: ((nodes at: 2) at: 1) to: (result at: 3).
	self add: ((nodes at: 2) at: 2) to: (result at: 4).
	self add: ((nodes at: 2) at: 3) to: (result at: 5).
	self add: ((nodes at: 2) at: 4) to: (result at: 6).
	self add: ((nodes at: 2) at: 5) to: (result at: 7).
	self add: ((nodes at: 2) at: 6) to: (result at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForforStatement1: nodes [

	| result |
	result := DartForStatementNode new.
	result finalConstVarOrType: ((nodes at: 3) at: 1).
	result declaredIdentifier: ((nodes at: 3) at: 2).
	result
		addNodes: ((nodes at: 3) at: 3)
		to: result assignableExpressions.
	result addNodes: ((nodes at: 3) at: 4) to: result assignmentOperators.
	result
		addObjects: ((nodes at: 3) at: 5)
		to: result assignedExpressions.
	result
		addNodes: ((nodes at: 3) at: 6)
		to: result conditionalExpressions.
	result addNodes: ((nodes at: 3) at: 7) to: result cascades.
	result addNodes: ((nodes at: 3) at: 8) to: result throwExpressions.
	result idNotFunction: ((nodes at: 3) at: 9).
	result function: ((nodes at: 3) at: 10).
	result metadata: ((nodes at: 3) at: 11).
	result initializedVariableDeclaration: ((nodes at: 3) at: 12).
	result firstExpression: ((nodes at: 3) at: 13).
	result addObjects: ((nodes at: 3) at: 14) to: result nextExpressions.
	result statement: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForforStatement2: nodes [

	| result |
	result := DartForStatementNode new.
	result finalConstVarOrType: ((nodes at: 4) at: 1).
	result declaredIdentifier: ((nodes at: 4) at: 2).
	result
		addNodes: ((nodes at: 4) at: 3)
		to: result assignableExpressions.
	result addNodes: ((nodes at: 4) at: 4) to: result assignmentOperators.
	result
		addObjects: ((nodes at: 4) at: 5)
		to: result assignedExpressions.
	result
		addNodes: ((nodes at: 4) at: 6)
		to: result conditionalExpressions.
	result addNodes: ((nodes at: 4) at: 7) to: result cascades.
	result addNodes: ((nodes at: 4) at: 8) to: result throwExpressions.
	result idNotFunction: ((nodes at: 4) at: 9).
	result function: ((nodes at: 4) at: 10).
	result metadata: ((nodes at: 4) at: 11).
	result initializedVariableDeclaration: ((nodes at: 4) at: 12).
	result firstExpression: ((nodes at: 4) at: 13).
	result addObjects: ((nodes at: 4) at: 14) to: result nextExpressions.
	result statement: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForformalParameterPart1: nodes [

	| result |
	result := DartFormalParameterPartNode new.
	result formalParameterList: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForformalParameterPart2: nodes [

	| result |
	result := DartFormalParameterPartNode new.
	result typeParameters: (nodes at: 1).
	result formalParameterList: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionBody1: nodes [

	| result |
	result := DartFunctionBodyNode new.
	result expression: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionBody2: nodes [

	| result |
	result := DartFunctionBodyNode new.
	result block: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionBody3: nodes [

	| result |
	result := DartAsyncFunctionBodyNode new.
	result expression: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionBody4: nodes [

	| result |
	result := DartAsyncFunctionBodyNode new.
	result block: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionBody5: nodes [

	| result |
	result := DartAsyncFunctionBodyNode new.
	result block: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionDeclaration3: nodes [

	| result |
	result := DartFunctionDeclarationNode new.
	result signature: (nodes at: 1).
	result body: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionExpression1: nodes [

	| result |
	result := DartFunctionExpressionNode new.
	result formalParameterPart: (nodes at: 1).
	result functionExpressionBody: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionFormalParameter1: nodes [

	| result |
	result := DartFunctionFormalParameterNode new.
	result identifierNotFUNCTION: (nodes at: 1).
	result formalParameterPart: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionFormalParameter3: nodes [

	| result |
	result := DartFunctionFormalParameterNode new.
	result Type: (nodes at: 1).
	result identifierNotFUNCTION: (nodes at: 2).
	result formalParameterPart: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionFormalParameter5: nodes [

	| result |
	result := DartFunctionFormalParameterNode new.
	result identifierNotFUNCTION: (nodes at: 2).
	result formalParameterPart: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionFormalParameter7: nodes [

	| result |
	result := DartFunctionFormalParameterNode new.
	result Type: (nodes at: 2).
	result identifierNotFUNCTION: (nodes at: 3).
	result formalParameterPart: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionPrefix1: nodes [

	| result |
	result := DartFunctionPrefixNode new.
	result type: (nodes at: 1).
	result identifier: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionPrimaryBody3: nodes [

	^ nodes at: 3
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionSignature1: nodes [

	| result |
	result := DartFunctionSignatureNode new.
	result identifierNotFUNCTION: (nodes at: 1).
	result formalParameterPart: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionSignature2: nodes [

	| result |
	result := DartFunctionSignatureNode new.
	result type: (nodes at: 1).
	result identifierNotFUNCTION: (nodes at: 2).
	result formalParameterPart: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionType2: nodes [

	| result |
	result := DartFunctionTypeNode new.
	result typeNotFunction: (nodes at: 1).
	result functionTypeTails: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionTypeAlias1: nodes [

	| result |
	result := DartFunctionTypeAliasNode new.
	result functionPrefix: (nodes at: 1).
	result formalParameterPart: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionTypeTail1: nodes [

	| result |
	result := DartFunctionTypeTailNode new.
	result parameterTypeList: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionTypeTail2: nodes [

	| result |
	result := DartFunctionTypeTailNode new.
	result typeParameters: (nodes at: 2).
	result parameterTypeList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionTypeTails1: nodes [

	| result |
	result := DartFunctionTypeTailsNode new.
	result functionTypeTail: (nodes at: 1).
	result functionTypeTails: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionTypeTails2: nodes [

	| result |
	result := DartFunctionTypeTailsNode new.
	result functionTypeTail: (nodes at: 1).
	result functionTypeTails: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForgetterSignature1: nodes [

	| result |
	result := DartGetterSignatureNode new.
	result identifier: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForgetterSignature2: nodes [

	| result |
	result := DartGetterSignatureNode new.
	result type: (nodes at: 1).
	result identifier: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForidentifier1: nodes [

	| result |
	result := DartIdentifierNode new.
	result idNotFunction: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForidentifier2: nodes [

	| result |
	result := DartIdentifierNode new.
	result function: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForidentifierList1: nodes [

	| result |
	result := DartIdentifierListNode new.
	result identifier: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result nextIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForifNullExpression2: nodes [

	| result |
	result := DartIfNullExpressionNode new.
	result testNullExpression: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result logicalOrExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForifStatement1: nodes [

	| result |
	result := DartIfStatementNode new.
	result ifConditionalExpression: (nodes at: 3).
	result ifThenStatement: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForifStatement2: nodes [

	| result |
	result := DartIfStatementNode new.
	result ifConditionalExpression: (nodes at: 3).
	result ifThenStatement: (nodes at: 5).
	result elseStatement: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForimportOrExport1: nodes [

	| result |
	result := Array new: 2.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForimportOrExport2: nodes [

	| result |
	result := Array new: 2.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForimportOrExport_1: nodes [

	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForimportOrExport_2: nodes [

	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForimportSpecification1: nodes [

	| result |
	result := DartImportSpecificationNode new.
	result configurableUri: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForimportSpecification2: nodes [

	| result |
	result := DartImportSpecificationNode new.
	result configurableUri: (nodes at: 2).
	result addNode: (nodes at: 4) to: result identifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForimportSpecification3: nodes [

	| result |
	result := DartImportSpecificationNode new.
	result configurableUri: (nodes at: 2).
	result addNode: (nodes at: 5) to: result identifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForinitializedIdentifier1: nodes [

	| result |
	result := DartInitializedIdentifierNode new.
	result identifier: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForinitializedIdentifier2: nodes [

	| result |
	result := DartInitializedIdentifierNode new.
	result identifier: (nodes at: 1).
	result expression: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForinitializedIdentifierList1: nodes [

	| result |
	result := DartInitializedIdentifierListNode new.
	result initializedIdentifier: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result nextInitializedIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForinitializedVariableDeclaration1: nodes [

	| result |
	result := DartInitializedVariableDeclarationNode new.
	result declaredIdentifier: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result initializedIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForinitializedVariableDeclaration2: nodes [

	| result |
	result := DartInitializedVariableDeclarationNode new.
	result declaredIdentifier: (nodes at: 1).
	result initializeExpression: (nodes at: 3).
	result addNodes: (nodes at: 4) to: result initializedIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForinitializerExpression1: nodes [

	| result |
	result := DartInitializerExpressionNode new.
	result conditionalExpression: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForinitializerExpression2: nodes [

	| result |
	result := DartInitializerExpressionNode new.
	result cascade: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForinitializers1: nodes [

	| result |
	result := DartInitializersNode new.
	result initializerListEntry: (nodes at: 2).
	result addObjects: (nodes at: 3) to: result InitializerListEntries.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlabel1: nodes [

	| result |
	result := DartLabelNode new.
	result LabelIdentifier: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlibraryDefinition1: nodes [

	| result |
	result := DartLibraryDefinitionNode new.
	result addNodes: ((nodes at: 1) at: 1) to: result libraryImports.
	result addNodes: ((nodes at: 1) at: 2) to: result libraryExports.
	result addObjects: ((nodes at: 3) at: 1) to: result metadatas.
	result
		addObjects: ((nodes at: 3) at: 2)
		to: result topLevelDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlibraryDefinition2: nodes [

	| result |
	result := DartLibraryDefinitionNode new.
	result libraryName: (nodes at: 1).
	result addNodes: ((nodes at: 2) at: 1) to: result libraryImports.
	result addNodes: ((nodes at: 2) at: 2) to: result libraryExports.
	result addObjects: ((nodes at: 4) at: 1) to: result metadatas.
	result
		addObjects: ((nodes at: 4) at: 2)
		to: result topLevelDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlibraryDefinition3: nodes [

	| result |
	result := DartLibraryDefinitionNode new.
	result scriptTag: (nodes at: 1).
	result addNodes: ((nodes at: 2) at: 1) to: result libraryImports.
	result addNodes: ((nodes at: 2) at: 2) to: result libraryExports.
	result addObjects: ((nodes at: 4) at: 1) to: result metadatas.
	result
		addObjects: ((nodes at: 4) at: 2)
		to: result topLevelDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlibraryDefinition4: nodes [

	| result |
	result := DartLibraryDefinitionNode new.
	result scriptTag: (nodes at: 1).
	result libraryName: (nodes at: 2).
	result addNodes: ((nodes at: 3) at: 1) to: result libraryImports.
	result addNodes: ((nodes at: 3) at: 2) to: result libraryExports.
	result addObjects: ((nodes at: 5) at: 1) to: result metadatas.
	result
		addObjects: ((nodes at: 5) at: 2)
		to: result topLevelDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlibraryDefinition5: nodes [

	| result |
	result := DartLibraryDefinitionNode new.
	result feff: (nodes at: 1).
	result addNodes: ((nodes at: 2) at: 1) to: result libraryImports.
	result addNodes: ((nodes at: 2) at: 2) to: result libraryExports.
	result addObjects: ((nodes at: 4) at: 1) to: result metadatas.
	result
		addObjects: ((nodes at: 4) at: 2)
		to: result topLevelDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlibraryDefinition6: nodes [

	| result |
	result := DartLibraryDefinitionNode new.
	result feff: (nodes at: 1).
	result libraryName: (nodes at: 2).
	result addNodes: ((nodes at: 3) at: 1) to: result libraryImports.
	result addNodes: ((nodes at: 3) at: 2) to: result libraryExports.
	result addObjects: ((nodes at: 5) at: 1) to: result metadatas.
	result
		addObjects: ((nodes at: 5) at: 2)
		to: result topLevelDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlibraryDefinition7: nodes [

	| result |
	result := DartLibraryDefinitionNode new.
	result feff: (nodes at: 1).
	result scriptTag: (nodes at: 2).
	result addNodes: ((nodes at: 3) at: 1) to: result libraryImports.
	result addNodes: ((nodes at: 3) at: 2) to: result libraryExports.
	result addObjects: ((nodes at: 5) at: 1) to: result metadatas.
	result
		addObjects: ((nodes at: 5) at: 2)
		to: result topLevelDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlibraryDefinition8: nodes [

	| result |
	result := DartLibraryDefinitionNode new.
	result feff: (nodes at: 1).
	result scriptTag: (nodes at: 2).
	result libraryName: (nodes at: 3).
	result addNodes: ((nodes at: 4) at: 1) to: result libraryImports.
	result addNodes: ((nodes at: 4) at: 2) to: result libraryExports.
	result addObjects: ((nodes at: 6) at: 1) to: result metadatas.
	result
		addObjects: ((nodes at: 6) at: 2)
		to: result topLevelDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlibraryExport1: nodes [

	| result |
	result := DartExportDeclarationNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlibraryImport1: nodes [

	| result |
	result := DartLibraryImportNode new.
	result metadata: (nodes at: 1).
	result importSpecification: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlibraryName1: nodes [

	| result |
	result := DartLibraryNameNode new.
	result metadata: (nodes at: 1).
	result dottedIdentifierList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlistLiteral1: nodes [

	| result |
	result := DartListLiteralNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlistLiteral2: nodes [

	| result |
	result := DartListLiteralNode new.
	result elements: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlistLiteral3: nodes [

	| result |
	result := DartListLiteralNode new.
	result typeArguments: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlistLiteral4: nodes [

	| result |
	result := DartListLiteralNode new.
	result typeArguments: (nodes at: 1).
	result elements: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlistLiteral6: nodes [

	| result |
	result := DartListLiteralNode new.
	result elements: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlistLiteral7: nodes [

	| result |
	result := DartListLiteralNode new.
	result typeArguments: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlistLiteral8: nodes [

	| result |
	result := DartListLiteralNode new.
	result typeArguments: (nodes at: 2).
	result elements: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlocalFunctionDeclaration1: nodes [

	| result |
	result := DartLocalFunctionDeclarationNode new.
	result metadata: (nodes at: 1).
	result signature: (nodes at: 2).
	result functionBody: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlocalVariableDeclaration1: nodes [

	| result |
	result := DartLocalVariableDeclarationNode new.
	result metadata: (nodes at: 1).
	result initializedVariableDeclaration: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlogicalAndExpression2: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 1) to: result equalityExpressions.
	result addNodes: (nodes at: 2) to: result equalityExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlogicalOrExpression2: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 1) to: result logicalAndExpressions.
	result addNodes: (nodes at: 2) to: result logicalAndExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormetadatum1: nodes [

	| result |
	result := DartMetadatumNode new.
	result constructorDesignation: (nodes at: 1).
	result arguments: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormethodSignature1: nodes [

	| result |
	result := DartMethodSignatureNode new.
	result constructorSignature: (nodes at: 1).
	result initializers: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormethodSignature3: nodes [

	| result |
	result := DartMethodSignatureNode new.
	result signature: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormethodSignature4: nodes [

	| result |
	result := DartMethodSignatureNode new.
	result signature: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormethodSignature5: nodes [

	| result |
	result := DartMethodSignatureNode new.
	result getterSignature: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormethodSignature6: nodes [

	| result |
	result := DartMethodSignatureNode new.
	result getterSignature: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormethodSignature7: nodes [

	| result |
	result := DartMethodSignatureNode new.
	result setterSignature: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormethodSignature8: nodes [

	| result |
	result := DartMethodSignatureNode new.
	result setterSignature: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormixinApplication1: nodes [

	| result |
	result := DartMixinApplicationNode new.
	result typeNotVoidNotFunction: (nodes at: 1).
	result mixins: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormixinApplication2: nodes [

	| result |
	result := DartMixinApplicationNode new.
	result typeNotVoidNotFunction: (nodes at: 1).
	result mixins: (nodes at: 2).
	result interfaces: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormixinApplicationClass1: nodes [

	| result |
	result := DartMixinApplicationClassNode new.
	result typeWithParameters: (nodes at: 1).
	result mixinApplication: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormultiLineString1: nodes [

	| result |
	result := DartMultiLineStringNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormultiLineString3: nodes [

	| result |
	result := DartMultiLineStringNode new.
	result firstExpression: (nodes at: 2).
	result addObjects: (nodes at: 3) to: result nextExpressionses.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormultiplicativeExpression2: nodes [

	| result |
	result := DartMultiplicativeExpressionNode new.
	result addNode: (nodes at: 1) to: result unaryExpressions.
	result
		addTokens: ((nodes at: 2) at: 1)
		to: result multiplicativeOperators.
	result addNodes: ((nodes at: 2) at: 2) to: result unaryExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormultiplicativeExpression3: nodes [

	| result |
	result := DartMultiplicativeExpressionNode new.
	result addToken: (nodes at: 2) to: result multiplicativeOperators.
	result addNode: (nodes at: 3) to: result unaryExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornamedArgument1: nodes [

	| result |
	result := DartNamedArgumentNode new.
	result label: (nodes at: 1).
	result expression: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornamedFormalParameters1: nodes [

	| result |
	result := DartNamedFormalParametersNode new.
	result parameter: (nodes at: 2).
	result addNodes: (nodes at: 3) to: result nextParameters.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornamedParameterType1: nodes [

	| result |
	result := DartNamedParameterTypeNode new.
	result metadata: (nodes at: 1).
	result typedIdentifier: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornamedParameterType2: nodes [

	| result |
	result := DartNamedParameterTypeNode new.
	result metadata: (nodes at: 1).
	result typedIdentifier: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornamedParameterTypes1: nodes [

	| result |
	result := DartNamedParameterTypesNode new.
	result namedParameterType: (nodes at: 2).
	result addNodes: (nodes at: 3) to: result nextNamedParameterTypes.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornewExpression1: nodes [

	| result |
	result := DartNewExpressionNode new.
	result constructorDesignation: (nodes at: 1).
	result constructorArguments: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornewExpression2: nodes [

	| result |
	result := DartNewExpressionNode new.
	result constructorDesignation: (nodes at: 2).
	result constructorArguments: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornormalFormalParameter1: nodes [

	| result |
	result := DartNormalFormalParameterNode new.
	result metadata: (nodes at: 1).
	result parameter: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornormalFormalParameters1: nodes [

	| result |
	result := DartNormalFormalParametersNode new.
	result parameter: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result nextParameters.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornormalParameterType1: nodes [

	| result |
	result := DartNormalParameterTypeNode new.
	result metadata: (nodes at: 1).
	result typedIdentifier: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornormalParameterType2: nodes [

	| result |
	result := DartNormalParameterTypeNode new.
	result metadata: (nodes at: 1).
	result type: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornormalParameterTypes1: nodes [

	| result |
	result := DartNormalParameterTypesNode new.
	result normalParameterType: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result nextNormalParameterTypes.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornullLiteral1: nodes [

	| result |
	result := DartNullLiteralNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornumericLiteral1: nodes [

	| result |
	result := DartNumericLiteralNode new.
	result number: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornumericLiteral2: nodes [

	| result |
	result := DartNumericLiteralNode new.
	result hexNumber: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForonPart1: nodes [

	| result |
	result := DartOnPartNode new.
	result catchPart: (nodes at: 1).
	result block: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForonPart2: nodes [

	| result |
	result := DartOnPartNode new.
	result typeNotVoid: (nodes at: 2).
	result block: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForonPart3: nodes [

	| result |
	result := DartOnPartNode new.
	result typeNotVoid: (nodes at: 2).
	result catchPart: (nodes at: 3).
	result block: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForoperatorSignature1: nodes [

	| result |
	result := DartOperatorSignatureNode new.
	result operator: (nodes at: 2).
	result formalParameterList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForoperatorSignature2: nodes [

	| result |
	result := DartOperatorSignatureNode new.
	result type: (nodes at: 1).
	result operator: (nodes at: 3).
	result formalParameterList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForoptionalPositionalFormalParameters1: nodes [

	| result |
	result := DartOptionalPositionalFormalParametersNode new.
	result parameter: (nodes at: 2).
	result addNodes: (nodes at: 3) to: result nextParameters.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForpartDirective1: nodes [

	| result |
	result := DartPartDirectiveNode new.
	result metadata: (nodes at: 1).
	result uri: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForpostfixExpression1: nodes [

	| result |
	result := DartPostfixExpressionNode new.
	result assignableExpression: (nodes at: 1).
	result postfixOperator: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForpostfixExpression2: nodes [

	| result |
	result := DartPostfixExpressionNode new.
	result primary: (nodes at: 1).
	result addObjects: (nodes at: 2) to: result selectors.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForprimary11: nodes [

	| result |
	result := DartPrimaryNode new.
	result parenthesisExpression: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForprimary2: nodes [

	| result |
	result := DartPrimaryNode new.
	result unconditionalAssignableSelector: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForprimary3: nodes [

	| result |
	result := DartPrimaryNode new.
	result argumentPart: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForqualifiedName1: nodes [

	| result |
	result := DartQualifiedNameNode new.
	result addToken: (nodes at: 1) to: result typeIdentifiers.
	result identifier: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForqualifiedName2: nodes [

	| result |
	result := DartQualifiedNameNode new.
	result addToken: (nodes at: 1) to: result typeIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForqualifiedName3: nodes [

	| result |
	result := DartQualifiedNameNode new.
	result addToken: (nodes at: 1) to: result typeIdentifiers.
	result addToken: (nodes at: 3) to: result typeIdentifiers.
	result identifier: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForqualifiedName4: nodes [

	| result |
	result := DartQualifiedNameNode new.
	result addToken: (nodes at: 1) to: result typeIdentifiers.
	result addToken: (nodes at: 3) to: result typeIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForredirectingFactoryConstructorSignature1: nodes [

	| result |
	result := DartRedirectingFactoryConstructorSignatureNode new.
	result constructorName: (nodes at: 2).
	result formalParameterList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForredirectingFactoryConstructorSignature2: nodes [

	| result |
	result := DartRedirectingFactoryConstructorSignatureNode new.
	result constructorName: (nodes at: 3).
	result formalParameterList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForredirection1: nodes [

	| result |
	result := DartRedirectionNode new.
	result arguments: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForredirection2: nodes [

	| result |
	result := DartRedirectionNode new.
	result identifier: (nodes at: 4).
	result arguments: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForredirection3: nodes [

	| result |
	result := DartRedirectionNode new.
	result arguments: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForrelationalExpression2: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 1) to: result bitwiseOrExpressions.
	result addTokens: ((nodes at: 2) at: 1) to: result typeTests.
	result addTokens: ((nodes at: 2) at: 2) to: result typeCasts.
	result
		addTokens: ((nodes at: 2) at: 3)
		to: result relationalOperators.
	result
		addNodes: ((nodes at: 2) at: 4)
		to: result bitwiseOrExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForrelationalExpression3: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addToken: (nodes at: 2) to: result relationalOperators.
	result addNode: (nodes at: 3) to: result bitwiseOrExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForrethrowStatement1: nodes [

	| result |
	result := DartRethrowStatementNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForreturnStatement1: nodes [

	| result |
	result := DartReturnStatementNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForreturnStatement2: nodes [

	| result |
	result := DartReturnStatementNode new.
	result returnExpression: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsetOrMapLiteral1: nodes [

	| result |
	result := DartSetOrMapLiteralNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsetOrMapLiteral2: nodes [

	| result |
	result := DartSetOrMapLiteralNode new.
	result elements: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsetOrMapLiteral3: nodes [

	| result |
	result := DartSetOrMapLiteralNode new.
	result typeArguments: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsetOrMapLiteral4: nodes [

	| result |
	result := DartSetOrMapLiteralNode new.
	result typeArguments: (nodes at: 1).
	result elements: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsetOrMapLiteral6: nodes [

	| result |
	result := DartSetOrMapLiteralNode new.
	result elements: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsetOrMapLiteral7: nodes [

	| result |
	result := DartSetOrMapLiteralNode new.
	result typeArguments: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsetOrMapLiteral8: nodes [

	| result |
	result := DartSetOrMapLiteralNode new.
	result typeArguments: (nodes at: 2).
	result elements: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsetterSignature1: nodes [

	| result |
	result := DartSetterSignatureNode new.
	result identifier: (nodes at: 2).
	result formalParameterList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsetterSignature2: nodes [

	| result |
	result := DartSetterSignatureNode new.
	result type: (nodes at: 1).
	result identifier: (nodes at: 3).
	result formalParameterList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForshiftExpression2: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 1) to: result additiveExpressions.
	result addTokens: ((nodes at: 2) at: 1) to: result shiftOperators.
	result addNodes: ((nodes at: 2) at: 2) to: result additiveExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForshiftExpression3: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addToken: (nodes at: 2) to: result shiftOperators.
	result addNode: (nodes at: 3) to: result additiveExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsimpleFormalParameter1: nodes [

	| result |
	result := DartSimpleFormalParameterNode new.
	result declaredIdentifier: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsimpleFormalParameter2: nodes [

	| result |
	result := DartSimpleFormalParameterNode new.
	result identifier: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsimpleFormalParameter3: nodes [

	| result |
	result := DartSimpleFormalParameterNode new.
	result identifier: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsingleLineString1: nodes [

	| result |
	result := DartSingleLineStringNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsingleLineString3: nodes [

	| result |
	result := DartSingleLineStringNode new.
	result firstExpression: (nodes at: 2).
	result addObjects: (nodes at: 3) to: result nextExpressionses.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForstatement1: nodes [

	| result |
	result := DartSingleStatementNode new.
	result addNodes: (nodes at: 1) to: result labels.
	result nonLabelledStatement: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForstatements1: nodes [

	| result |
	result := DartStatementsNode new.
	result addNode: (nodes at: 1) to: result statements.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForstatements2: nodes [

	| result |
	result := nodes at: 1.
	result addNode: (nodes at: 2) to: result statements.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForstaticFinalDeclaration1: nodes [

	| result |
	result := DartStaticFinalDeclarationNode new.
	result identifier: (nodes at: 1).
	result expression: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForstaticFinalDeclarationList1: nodes [

	| result |
	result := DartStaticFinalDeclarationListNode new.
	result staticFinalDeclaration: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result nextStaticFinalDeclarations.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForstringLiteral1: nodes [

	| result |
	result := DartStringLiteralNode new.
	result addNodes: ((nodes at: 1) at: 1) to: result multiLineStrings.
	result addNodes: ((nodes at: 1) at: 2) to: result singleLineStrings.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForswitchCase1: nodes [

	| result |
	result := DartSwitchCaseNode new.
	result addNodes: (nodes at: 1) to: result labels.
	result expression: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForswitchCase2: nodes [

	| result |
	result := DartSwitchCaseNode new.
	result addNodes: (nodes at: 1) to: result labels.
	result expression: (nodes at: 3).
	result statements: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForswitchStatement1: nodes [

	| result |
	result := DartSwitchStatementNode new.
	result switchCaseExpression: (nodes at: 3).
	result addNodes: (nodes at: 6) to: result caseses.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForswitchStatement2: nodes [

	| result |
	result := DartSwitchStatementNode new.
	result switchCaseExpression: (nodes at: 3).
	result addNodes: (nodes at: 6) to: result caseses.
	result defaultCase: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsymbolLiteral1: nodes [

	| result |
	result := DartSymbolLiteralNode new.
	result operator: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsymbolLiteral2: nodes [

	| result |
	result := DartSymbolLiteralNode new.
	result addNode: (nodes at: 2) to: result identifiers.
	result addNodes: (nodes at: 3) to: result identifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsymbolLiteral3: nodes [

	| result |
	result := DartSymbolLiteralNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForthisExpression1: nodes [

	| result |
	result := DartThisExpressionNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForthrowExpression1: nodes [

	| result |
	result := DartThrowExpressionNode new.
	result throwExpression: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelDefinition1: nodes [

	| result |
	result := Array new: 8.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelDefinition2: nodes [

	| result |
	result := Array new: 8.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelDefinition3: nodes [

	| result |
	result := Array new: 8.
	result at: 3 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelDefinition4: nodes [

	| result |
	result := Array new: 8.
	result at: 4 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelDefinition5: nodes [

	| result |
	result := Array new: 8.
	result at: 5 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelDefinition6: nodes [

	| result |
	result := Array new: 8.
	result at: 6 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelDefinition7: nodes [

	| result |
	result := Array new: 8.
	result at: 7 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelDefinition8: nodes [

	| result |
	result := Array new: 8.
	result at: 8 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelExternalDeclaration1: nodes [

	| result |
	result := DartExternalFunctionSignatureNode new.
	result signature: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelExternalDeclaration4: nodes [

	| result |
	result := DartExternalVariablesDeclarationNode new.
	result type: (nodes at: 2).
	result identifierList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelListDeclaration10: nodes [

	| result |
	result := DartTopLevelListDeclarationNode new.
	result type: (nodes at: 2).
	result identifier: (nodes at: 3).
	result expression: (nodes at: 5).
	result addNodes: (nodes at: 6) to: result initializedIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelListDeclaration3: nodes [

	| result |
	result := DartTopLevelListDeclarationNode new.
	result list: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelListDeclaration4: nodes [

	| result |
	result := DartTopLevelListDeclarationNode new.
	result type: (nodes at: 2).
	result list: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelListDeclaration5: nodes [

	| result |
	result := DartTopLevelListDeclarationNode new.
	result list: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelListDeclaration6: nodes [

	| result |
	result := DartTopLevelListDeclarationNode new.
	result type: (nodes at: 3).
	result list: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelListDeclaration7: nodes [

	| result |
	result := DartTopLevelListDeclarationNode new.
	result type: (nodes at: 1).
	result identifier: (nodes at: 2).
	result addNodes: (nodes at: 3) to: result initializedIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelListDeclaration8: nodes [

	| result |
	result := DartTopLevelListDeclarationNode new.
	result type: (nodes at: 1).
	result identifier: (nodes at: 2).
	result expression: (nodes at: 4).
	result addNodes: (nodes at: 5) to: result initializedIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelListDeclaration9: nodes [

	| result |
	result := DartTopLevelListDeclarationNode new.
	result type: (nodes at: 2).
	result identifier: (nodes at: 3).
	result addNodes: (nodes at: 4) to: result initializedIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortryStatement1: nodes [

	| result |
	result := DartTryStatementNode new.
	result block: (nodes at: 2).
	result onParts: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortryStatement2: nodes [

	| result |
	result := DartTryStatementNode new.
	result block: (nodes at: 2).
	result onParts: (nodes at: 3).
	result finallyPart: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortryStatement3: nodes [

	| result |
	result := DartTryStatementNode new.
	result block: (nodes at: 2).
	result finallyPart: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortype1: nodes [

	| result |
	result := DartTypeNode new.
	result functionType: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortype3: nodes [

	| result |
	result := DartTypeNode new.
	result typeNotFunction: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeAlias1: nodes [

	| result |
	result := DartTypeAliasNode new.
	result typeIdentifier: (nodes at: 2).
	result type: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeAlias2: nodes [

	| result |
	result := DartTypeAliasNode new.
	result typeIdentifier: (nodes at: 2).
	result typeParameters: (nodes at: 3).
	result type: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeList1: nodes [

	| result |
	result := DartTypeListNode new.
	result type: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result nextTypes.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeName1: nodes [

	| result |
	result := DartTypeNameNode new.
	result typeIdentifier: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeName2: nodes [

	| result |
	result := DartTypeNameNode new.
	result typeIdentifier: (nodes at: 1).
	result followingTypeIdentifier: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeNotVoidNotFunctionList1: nodes [

	| result |
	result := DartTypeNotVoidNotFunctionListNode new.
	result typeNotVoidNotFunction: (nodes at: 1).
	result
		addObjects: (nodes at: 2)
		to: result nextTypeNotVoidNotFunctions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeParameter1: nodes [

	| result |
	result := DartTypeParameterNode new.
	result metadata: (nodes at: 1).
	result typeIdentifier: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeParameter2: nodes [

	| result |
	result := DartTypeParameterNode new.
	result metadata: (nodes at: 1).
	result typeIdentifier: (nodes at: 2).
	result typeNotVoid: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeParameters1: nodes [

	| result |
	result := DartTypeParametersNode new.
	result typeParameter: (nodes at: 2).
	result addNodes: (nodes at: 3) to: result nextTypeParameters.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeWithParameters1: nodes [

	| result |
	result := DartTypeNode new.
	result typeIdentifier: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypedIdentifier1: nodes [

	| result |
	result := DartTypedIdentifierNode new.
	result type: (nodes at: 1).
	result identifier: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForunaryExpression1: nodes [

	| result |
	result := DartUnaryExpressionNode new.
	result prefixOperator: (nodes at: 1).
	result unaryExpression: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForunaryExpression4: nodes [

	| result |
	result := DartUnaryExpressionNode new.
	result minusOperator: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForunaryExpression5: nodes [

	| result |
	result := DartUnaryExpressionNode new.
	result tildeOperator: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForunaryExpression6: nodes [

	| result |
	result := DartUnaryExpressionNode new.
	result incrementOperator: (nodes at: 1).
	result assignableExpression: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForuri1: nodes [

	| result |
	result := DartUriNode new.
	result stringLiteralWithoutInterpolation: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForuriTest1: nodes [

	| result |
	result := DartUriTestNode new.
	result dottedIdentifierList: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForuriTest2: nodes [

	| result |
	result := DartUriTestNode new.
	result dottedIdentifierList: (nodes at: 1).
	result stringLiteral: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForwhileStatement1: nodes [

	| result |
	result := DartWhileStatementNode new.
	result whileConditionExpression: (nodes at: 3).
	result whileStatement: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForyieldEachStatement1: nodes [

	| result |
	result := DartYieldEachStatementNode new.
	result yieldEachExpression: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForyieldStatement1: nodes [

	| result |
	result := DartYieldStatementNode new.
	result yieldExpression: (nodes at: 2).
	^ result
]
