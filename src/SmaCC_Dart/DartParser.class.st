Class {
	#name : #DartParser,
	#superclass : #SmaCCGLRParser,
	#category : #'SmaCC_Dart'
}

{ #category : #generated }
DartParser class >> ambiguousTransitions [
^#(
#[ 0 6 0 10] 
#[ 0 10 0 14] 
#[ 0 10 0 22] 
#[ 0 90 0 94] 
#[ 0 70 0 198] 
#[ 0 150 0 202] 
#[ 0 154 0 206] 
#[ 0 158 0 210] 
#[ 0 162 0 214] 
#[ 0 166 0 218] 
#[ 0 170 0 222] 
#[ 0 174 0 226] 
#[ 0 178 0 230] 
#[ 0 182 0 234] 
#[ 1 2 1 189] 
#[ 0 78 4 105] 
#[ 0 94 4 145] 
#[ 0 94 4 105] 
#[ 1 2 4 249] 
#[ 0 141 1 126] 
#[ 0 145 1 126] 
#[ 0 149 1 126] 
#[ 0 153 1 126] 
#[ 0 157 1 126] 
#[ 0 161 1 126] 
#[ 0 165 1 126] 
#[ 0 169 1 126] 
#[ 0 173 1 126] 
#[ 1 126 4 253] 
#[ 1 126 5 1] 
#[ 0 185 1 126] 
#[ 0 189 1 126] 
#[ 0 193 1 126] 
#[ 0 197 1 126] 
#[ 0 201 1 126] 
#[ 0 205 1 126] 
#[ 0 209 1 126] 
#[ 0 213 1 126] 
#[ 0 217 1 126] 
#[ 1 126 5 5] 
#[ 0 225 1 126] 
#[ 0 229 1 126] 
#[ 0 233 1 126] 
#[ 0 237 1 126] 
#[ 0 241 1 126] 
#[ 0 245 1 126] 
#[ 0 249 1 126] 
#[ 0 253 1 126] 
#[ 1 1 1 126] 
#[ 1 5 1 126] 
#[ 1 9 1 126] 
#[ 1 130 5 13] 
#[ 1 138 1 193] 
#[ 1 138 5 21] 
#[ 1 146 5 29] 
#[ 1 146 5 13] 
#[ 1 178 5 85] 
#[ 1 102 4 145] 
#[ 1 102 4 105] 
#[ 1 102 4 149] 
#[ 0 10 2 253] 
#[ 0 10 3 17] 
#[ 0 10 0 141] 
#[ 0 10 0 145] 
#[ 0 10 0 149] 
#[ 0 10 0 153] 
#[ 0 10 1 29] 
#[ 0 10 0 161] 
#[ 0 10 0 165] 
#[ 0 10 0 169] 
#[ 0 10 0 173] 
#[ 0 10 0 177] 
#[ 0 10 0 181] 
#[ 0 10 0 185] 
#[ 0 10 0 189] 
#[ 0 10 0 193] 
#[ 0 10 0 197] 
#[ 0 10 0 201] 
#[ 0 10 0 205] 
#[ 0 10 0 209] 
#[ 0 10 0 213] 
#[ 0 10 0 217] 
#[ 0 10 0 221] 
#[ 0 10 0 225] 
#[ 0 10 0 229] 
#[ 0 10 3 29] 
#[ 0 10 1 37] 
#[ 0 10 1 41] 
#[ 0 10 1 45] 
#[ 0 10 1 49] 
#[ 0 10 1 53] 
#[ 0 10 1 57] 
#[ 0 10 1 61] 
#[ 0 10 1 65] 
#[ 0 10 2 157] 
#[ 0 10 2 165] 
#[ 0 10 2 169] 
#[ 0 10 2 173] 
#[ 0 10 2 177] 
#[ 0 10 2 181] 
#[ 0 10 2 185] 
#[ 0 10 2 189] 
#[ 0 10 2 193] 
#[ 0 10 2 197] 
#[ 0 150 2 213] 
#[ 0 150 0 202 2 221] 
#[ 0 150 2 229] 
#[ 0 150 2 233] 
#[ 0 150 2 237] 
#[ 0 150 0 202 2 241] 
#[ 0 150 2 245] 
#[ 0 145 0 150] 
#[ 0 150 1 41] 
#[ 0 150 1 61] 
#[ 0 150 3 81] 
#[ 2 14 2 18] 
#[ 2 90 6 249] 
#[ 2 94 6 253] 
#[ 2 94 7 1] 
#[ 2 98 7 5] 
#[ 2 102 7 9] 
#[ 2 106 7 21] 
#[ 2 110 7 33] 
#[ 2 114 6 77] 
#[ 2 114 6 93] 
#[ 2 118 5 129] 
#[ 2 118 5 137] 
#[ 2 118 7 57] 
#[ 2 118 7 61] 
#[ 2 118 7 65] 
#[ 2 122 7 97] 
#[ 2 126 7 109] 
#[ 2 130 7 121] 
#[ 2 134 5 133] 
#[ 2 134 7 133] 
#[ 2 138 5 117] 
#[ 2 138 5 121] 
#[ 2 142 5 105] 
#[ 2 142 5 113] 
#[ 2 142 5 125] 
#[ 2 142 5 165] 
#[ 2 146 7 177] 
#[ 2 154 7 181] 
#[ 2 166 2 170] 
#[ 0 90 0 94 4 145] 
#[ 0 90 0 94 4 105] 
#[ 0 170 2 185] 
#[ 2 157 2 202] 
#[ 2 161 2 202] 
#[ 2 165 2 202] 
#[ 2 169 2 202] 
#[ 2 173 2 202] 
#[ 2 177 2 202] 
#[ 2 181 2 202] 
#[ 2 185 2 202] 
#[ 2 189 2 202] 
#[ 2 193 2 202] 
#[ 2 197 2 202] 
#[ 1 2 4 105] 
#[ 3 10 9 65] 
#[ 3 102 9 113] 
#[ 0 10 6 21] 
#[ 0 10 9 133] 
#[ 2 157 3 86] 
#[ 2 161 3 86] 
#[ 2 165 3 86] 
#[ 2 169 3 86] 
#[ 2 173 3 86] 
#[ 2 177 3 86] 
#[ 2 181 3 86] 
#[ 2 185 3 86] 
#[ 2 189 3 86] 
#[ 2 193 3 86] 
#[ 2 197 3 86] 
#[ 3 222 3 226] 
#[ 4 10 10 153] 
#[ 4 14 10 161] 
#[ 4 18 10 169] 
#[ 1 201 4 18] 
#[ 4 18 6 85] 
#[ 1 193 4 18] 
#[ 4 18 10 173] 
#[ 4 18 10 177] 
#[ 4 18 6 97] 
#[ 4 34 10 161] 
#[ 4 42 7 9] 
#[ 4 50 7 21] 
#[ 4 58 7 33] 
#[ 4 66 6 77] 
#[ 4 66 6 93] 
#[ 4 82 5 129] 
#[ 4 82 5 137] 
#[ 4 82 7 57] 
#[ 4 82 7 61] 
#[ 4 82 7 65] 
#[ 4 98 7 97] 
#[ 4 106 7 109] 
#[ 4 114 7 121] 
#[ 4 122 5 133] 
#[ 4 122 7 133] 
#[ 4 130 5 117] 
#[ 4 130 5 121] 
#[ 4 138 5 105] 
#[ 4 138 5 113] 
#[ 4 138 5 125] 
#[ 4 138 5 165] 
#[ 0 10 12 233] 
#[ 0 10 12 237] 
#[ 0 10 13 77] 
#[ 5 110 13 105] 
#[ 2 137 5 118] 
#[ 0 10 0 134] 
#[ 5 146 13 145] 
#[ 2 157 5 150] 
#[ 2 161 5 150] 
#[ 2 165 5 150] 
#[ 2 169 5 150] 
#[ 2 173 5 150] 
#[ 2 177 5 150] 
#[ 2 181 5 150] 
#[ 2 185 5 150] 
#[ 2 189 5 150] 
#[ 2 193 5 150] 
#[ 2 197 5 150] 
#[ 2 157 5 154] 
#[ 2 161 5 154] 
#[ 2 165 5 154] 
#[ 2 169 5 154] 
#[ 2 173 5 154] 
#[ 2 177 5 154] 
#[ 2 181 5 154] 
#[ 2 185 5 154] 
#[ 2 189 5 154] 
#[ 2 193 5 154] 
#[ 2 197 5 154] 
#[ 0 181 1 126] 
#[ 0 221 1 126] 
#[ 6 46 6 50] 
#[ 1 201 6 54] 
#[ 2 14 7 225] 
#[ 6 150 14 145] 
#[ 1 201 6 210] 
#[ 7 30 15 97] 
#[ 0 154 2 213] 
#[ 0 154 0 206 2 221] 
#[ 0 154 15 245] 
#[ 0 154 2 229] 
#[ 0 154 2 233] 
#[ 0 154 2 237] 
#[ 0 154 0 206 2 241] 
#[ 0 154 2 245] 
#[ 0 145 0 154] 
#[ 2 213 2 234] 
#[ 2 217 2 234] 
#[ 2 221 2 234] 
#[ 2 229 2 234] 
#[ 2 233 2 234] 
#[ 2 234 2 237] 
#[ 2 234 2 241] 
#[ 2 234 2 245] 
#[ 2 234 2 249] 
#[ 2 234 2 253] 
#[ 2 234 3 1] 
#[ 2 234 6 13] 
#[ 2 234 6 17] 
#[ 2 234 3 5] 
#[ 2 234 3 9] 
#[ 2 234 3 13] 
#[ 2 234 3 17] 
#[ 2 234 3 21] 
#[ 2 234 3 25] 
#[ 0 141 2 234] 
#[ 0 145 2 234] 
#[ 0 149 2 234] 
#[ 0 153 2 234] 
#[ 1 29 2 234] 
#[ 0 161 2 234] 
#[ 0 165 2 234] 
#[ 0 169 2 234] 
#[ 0 173 2 234] 
#[ 0 177 2 234] 
#[ 0 181 2 234] 
#[ 0 185 2 234] 
#[ 0 189 2 234] 
#[ 0 193 2 234] 
#[ 0 197 2 234] 
#[ 0 201 2 234] 
#[ 0 205 2 234] 
#[ 0 209 2 234] 
#[ 0 213 2 234] 
#[ 0 217 2 234] 
#[ 0 221 2 234] 
#[ 0 225 2 234] 
#[ 0 229 2 234] 
#[ 2 234 6 21] 
#[ 1 37 2 234] 
#[ 1 41 2 234] 
#[ 1 45 2 234] 
#[ 1 49 2 234] 
#[ 1 53 2 234] 
#[ 1 57 2 234] 
#[ 1 61 2 234] 
#[ 2 234 3 33] 
#[ 2 234 3 37] 
#[ 2 234 3 41] 
#[ 2 234 3 45] 
#[ 2 234 3 49] 
#[ 2 234 3 53] 
#[ 2 234 3 57] 
#[ 2 234 3 61] 
#[ 2 234 3 65] 
#[ 2 234 3 69] 
#[ 2 234 3 73] 
#[ 2 234 3 77] 
#[ 2 234 3 81] 
#[ 1 65 2 234] 
#[ 2 157 7 206] 
#[ 2 161 7 206] 
#[ 2 165 7 206] 
#[ 2 169 7 206] 
#[ 2 173 7 206] 
#[ 2 177 7 206] 
#[ 2 181 7 206] 
#[ 2 185 7 206] 
#[ 2 189 7 206] 
#[ 2 193 7 206] 
#[ 2 197 7 206] 
#[ 8 66 10 169] 
#[ 1 201 8 66] 
#[ 6 85 8 66] 
#[ 1 193 8 66] 
#[ 8 66 10 173] 
#[ 8 66 10 177] 
#[ 6 97 8 66] 
#[ 1 201 3 54 8 94] 
#[ 3 246 5 62] 
#[ 6 50 7 225] 
#[ 2 94 6 94] 
#[ 2 94 6 94 6 253] 
#[ 2 94 6 94 7 1] 
#[ 0 122 5 129] 
#[ 1 126 19 173] 
#[ 10 18 18 105] 
#[ 10 110 20 177] 
#[ 2 234 11 218] 
#[ 2 234 11 222] 
#[ 11 222 22 157] 
#[ 2 234 11 234] 
#[ 2 234 12 110] 
#[ 2 234 12 222] 
#[ 2 234 12 230]
	).
]

{ #category : #'generated-accessing' }
DartParser class >> cacheId [
	^'2022-12-19T19:29:17.92+01:00'
]

{ #category : #generated }
DartParser class >> definitionComment [
"/* Configuration */

%glr;
%prefix Dart ;
%suffix Node ;
%root Program ;
 

/* Hierarchy */
/* Use to create the class heritage hierarchy inside Pharo 
(e.g. ImportDeclaration will be a subClass of ImportExportDeclaration)

%annotate_tokens ;




%hierarchy LibraryDefinition (ImportDeclaration)
%hierarchy Literal (NullLiteral NumericLiteral BooleanLiteral StringLiteral SetOrMapLiteral ListLiteral);
%hierarchy NonLabelledStatement (Block LocalVariableDeclaration ForStatement WhileStatement DoStatement
								SwitchStatement IfStatement RethrowStatement TryStatement BreakStatement
								ContinueStatement ReturnStatement LocalFunctionDeclaration AssertStatement
								YieldStatement YieldEachStatement ExpressionStatement);

%hierarchy Expression (ConditionalExpression AssignableExpressionWithOperator
					Casade ThrowExpression AssignableExpression InitializerExpression
					FunctionExpression ThisExpression NewExpression ConstObjectExpression
					UnaryExpression AdditiveExpression MultiplicativeExpression ShiftExpression
					AwaitExpression PostfixExpression AssignableExpression);

%hierarchy ConditionalExpression (IfNullExpression LogicalOrExpression LogicalAndExpression 													EqualityExpression RelationalExpression BitwiseOrExpression
									BitwiseXorExpression BitwiseAndExpression );

  */
/*grammar Dart;*/



libraryDefinition
    :    <FEFF>? <SCRIPT_TAG>?
         libraryName?
         importOrExport*
         partDirective*
         (metadata topLevelDefinition)* {{LibraryDefinition}}
         
    ;

topLevelDefinition
    :    classDeclaration 'classDeclaration'
    |    mixinDeclaration
    |    extensionDeclaration
    |    enumType
    |    typeAlias
    |    <external> functionSignature "";""
    |    <external> getterSignature "";""
    |    <external> setterSignature "";""
    |    <external> finalVarOrType identifierList "";""
    |    getterSignature functionBody
    |    setterSignature functionBody
    |    functionSignature functionBody
    |    (<final> | <const>) type? staticFinalDeclarationList "";""
    |    <late> <final> type? initializedIdentifierList "";""
    |    <late>? varOrType identifier (""="" expression)?
         ("","" initializedIdentifier)* "";""
    ;

declaredIdentifier
    :    <covariant>? finalConstVarOrType 'finalConstVarOrType' identifier 'declaredIdentifier' {{DeclaredIdentifier}}
    ;

finalConstVarOrType
    :    <late>? <final> type?
    |    <const> type?
    |    <late>? varOrType
    ;

finalVarOrType
    :    <final> type?
    |    varOrType
    ;

varOrType
    :    <var>
    |    type
    ;

initializedIdentifier
    :    identifier 'identifier' (""="" expression 'expression')? {{InitializedIdentifier}}
    ;

initializedIdentifierList
    :    initializedIdentifier 'initializedIdentifier' ("","" initializedIdentifier 'nextInitializedIdentifier')* {{InitializedIdentifierList}}
    ;

functionSignature
    :    type 'type'? identifierNotFUNCTION 'identifierNotFUNCTION' formalParameterPart 'formalParameterPart' {{FunctionSignature}}
    ;

functionBodyPrefix
    :    <async>? ""=>""
    |    (<async> | <async> ""*"" | <sync> ""*"")? <lbrace>
    ;

functionBody
    :    ""=>""  expression 'expression' "";"" {{FunctionBody}}
    |     block 'block'  {{FunctionBody}}
    |    <async> ""=>"" expression 'expression' "";"" {{AsyncFunctionBody}}
    |    (<async> | <async> ""*"" | <sync> ""*"") block 'block' {{AsyncFunctionBody}}
    ;

block
    :    <lbrace> statements 'statements'? <rbrace> {{Block}}
    ;

formalParameterPart
    :    typeParameters 'typeParameters'? formalParameterList 'formalParameterList' {{FormalParameterPart}}
    ;

formalParameterList
    :    ""("" "")""
    |    ""("" normalFormalParameters "",""? "")""
    |    ""("" normalFormalParameters "","" optionalOrNamedFormalParameters "")""
    |    ""("" optionalOrNamedFormalParameters "")""
    ;

normalFormalParameters
    :    normalFormalParameter 'normalFormalParameter' ("","" normalFormalParameter 'nextNormalFormalParameter')* {{NormalFormalParameters}}
    ;

optionalOrNamedFormalParameters
    :    optionalPositionalFormalParameters
    |    namedFormalParameters
    ;

optionalPositionalFormalParameters
    :    ""["" defaultFormalParameter 'defaultFormalParameter' ("","" defaultFormalParameter 'defaultFormalParameter')* "",""? ""]"" {{OptionalPositionalFormalParameters}}
    ;

namedFormalParameters
    :    <lbrace> defaultNamedParameter 'defaultNamedParameter' ("","" defaultNamedParameter 'nextDefaultNamedParameter')* "",""? <rbrace> {{NamedFormalParameters}}
    ;

normalFormalParameter
    :    metadata 'metadata' normalFormalParameterNoMetadata 'normalFormalParameterNoMetadata' {{NormalFormalParameter}}
    ;

normalFormalParameterNoMetadata
    :    functionFormalParameter
    |    fieldFormalParameter
    |    simpleFormalParameter
    ;


functionFormalParameter
    :    <covariant>? type 'Type'? identifierNotFUNCTION 'identifierNotFUNCTION' formalParameterPart 'formalParameterPart' ""?""? {{FunctionFormalParameter}}
    ;

simpleFormalParameter
    :    declaredIdentifier
    |    <covariant>? identifier 'identifier'
    ;


fieldFormalParameter
    :    finalConstVarOrType 'finalConstVarOrType'? <this> ""."" identifier 'identifier' (formalParameterPart 'formalParameterPart' ""?""?)? {{FieldFormalParameter}}
    ;

defaultFormalParameter
    :    normalFormalParameter (""="" expression)?
    ;

defaultNamedParameter
    :    <required>? normalFormalParameter (("":"" | ""="") expression)?
    ;

typeWithParameters
    :    typeIdentifier 'typeIdentifier' typeParameters? {{Type}}
    ;

classDeclaration
    :   <abstract>? <clazz> typeWithParameters 'typeWithParameters' superclass 'superclass'? mixins 'mixins'? interfaces 'interfaces'? 
        <lbrace> (metadata 'metadata' classMemberDefinition 'classMemberDefinition')* <rbrace> {{ClassDeclaration}}
    |    <abstract>? <clazz> mixinApplicationClass 'mixinApplicationClass' {{ClassDeclaration}}
    ;

superclass
    :    <extends> typeNotVoidNotFunction
    ;

mixins
    :    <with> typeNotVoidNotFunctionList
    ;

interfaces
    :    <implements> typeNotVoidNotFunctionList
    ;

classMemberDefinition
    :    methodSignature 'methodSignature' functionBody 'functionBody' {{ClassMemberDefinition}}
    |    declaration 'declaration' "";"" {{ClassMemberDefinition}}
    ;

mixinApplicationClass
    :    typeWithParameters 'typeWithParameters' ""="" mixinApplication 'mixinApplication' "";"" {{MixinApplicationClass}}
    ;

mixinDeclaration
    :    <mixin> typeIdentifier typeParameters?
         (<on> typeNotVoidNotFunctionList)? interfaces?
         <lbrace> (metadata mixinMemberDefinition)* <rbrace>
    ;


mixinMemberDefinition
    :    classMemberDefinition
    ;

extensionDeclaration
    :    <extension> identifier? typeParameters? <on> type
         <lbrace> (metadata extensionMemberDefinition)* <rbrace>
    ;


extensionMemberDefinition
    :    classMemberDefinition
    ;

methodSignature
    :    constructorSignature 'constructorSignature' initializers 'initializers' {{MethodSignature}}
    |    factoryConstructorSignature
    |    <static>? functionSignature 'functionSignature' {{MethodSignature}}
    |    <static>? getterSignature 'getterSignature' {{MethodSignature}}
    |    <static>? setterSignature 'setterSignature' {{MethodSignature}}
    |    operatorSignature
    |    constructorSignature 
    ;

declaration
    :    <external> factoryConstructorSignature
    |    <external> constantConstructorSignature
    |    <external> constructorSignature
    |    (<external> <static>?)? getterSignature
    |    (<external> <static>?)? setterSignature
    |    (<external> <static>?)? functionSignature
    |    <external> (<static>? finalVarOrType 'finalVarOrType' | <covariant> varOrType 'varOrType') identifierList 'identifierList' {{Declaration}}
    |    <abstract> (finalVarOrType | <covariant> varOrType) identifierList {{Declaration}}
    |    <external>? operatorSignature
    |    <static> (<final> | <const>) type? staticFinalDeclarationList 'staticFinalDeclarationList' {{Declaration}}
    |    <static> <late> <final> type? initializedIdentifierList 'initializedIdentifierList' {{Declaration}}
    |    <static> <late>? varOrType 'varOrType' initializedIdentifierList 'initializedIdentifierList' {{Declaration}}
    |    <covariant> <late> <final> type 'type'? identifierList 'identifierList' {{Declaration}}
    |    <covariant> <late>? varOrType 'varOrType' initializedIdentifierList 'initializedIdentifierList' {{Declaration}}
    |    <late>? (<final> 'finalToken' type 'type'? | varOrType 'varOrType') initializedIdentifierList 'initializedIdentifierList' {{Declaration}}
    |    redirectingFactoryConstructorSignature
    |    constantConstructorSignature 'constantConstructorSignature' (redirection 'redirection' | initializers 'initializers')? {{Declaration}}
    |    constructorSignature 'constructorSignature' (redirection 'redirection' | initializers 'initializers')? {{Declaration}}
    ;

staticFinalDeclarationList
    :    staticFinalDeclaration 'staticFinalDeclaration' ("","" staticFinalDeclaration 'nextStaticFinalDeclaration')* {{StaticFinalDeclarationList}}
    ;

staticFinalDeclaration
    :    identifier 'identifier' ""="" expression 'expression' {{StaticFinalDeclaration}}
    ;

operatorSignature
    :    type 'type'? <operator> operator 'operator' formalParameterList 'formalParameterList' {{OperatorSignature}}
    ;

operator
    :    ""~""
    |    binaryOperator
    |    ""["" ""]""
    |    ""["" ""]"" ""=""
    ;

binaryOperator
    :    multiplicativeOperator
    |    additiveOperator
    |    shiftOperator
    |    relationalOperator
    |    ""==""
    |    bitwiseOperator
    ;

getterSignature
    :    type 'type'? <get> identifier 'identifier' {{GetterSignature}}
    ;

setterSignature
    :    type 'type'? <set> identifier 'identifier' formalParameterList 'formalParameterList' {{SetterSignature}}
    ;

constructorSignature
    :    constructorName 'constructorName' formalParameterList 'formalParameterList' {{ConstructorSignature}}
    ;

constructorName
    :    typeIdentifier 'typeIdentifier' (""."" (identifier 'typeIdentifier' | <new>))? {{ConstructorName}}
    ;

redirection
    :    "":"" <this> (""."" (identifier 'identifier' | <new>))? arguments 'arguments' {{Redirection}}
    ;

initializers
    :    "":"" initializerListEntry 'initializerListEntry' ("","" initializerListEntry 'InitializerListEntry')* {{Initializers}}
    ;

initializerListEntry
    :    <super> arguments
    |    <super> ""."" (identifier | <new>) arguments
    |    fieldInitializer
    |    assertion
    ;

fieldInitializer
    :    (<this> ""."")? identifier 'identifier' ""="" initializerExpression 'initializerExpression' {{FieldInitializer}}
    ;

initializerExpression
    :    conditionalExpression 'conditionalExpression' {{InitializerExpression}}
    |    cascade 'cascade' {{InitializerExpression}}
    ;

factoryConstructorSignature
    :    <const>? <factory> constructorName 'constructorName' formalParameterList 'formalParameterList' {{FactoryConstructorSignature}}
    ;

redirectingFactoryConstructorSignature
    :    <const>? <factory> constructorName 'constructorName' formalParameterList 'formalParameterList' ""="" 
         constructorDesignation {{RedirectingFactoryConstructorSignature}}
    ;

constantConstructorSignature
    :    <const> constructorName 'constructorName' formalParameterList 'formalParameterList' {{ConstantConstructorSignature}}
    ;

mixinApplication
    :    typeNotVoidNotFunction 'typeNotVoidNotFunction' mixins 'mixins' interfaces 'interfaces'? {{MixinApplication}}
    ;

enumType
    :    <enum> typeIdentifier typeParameters? mixins? interfaces? <lbrace>
         enumEntry ("","" enumEntry)* ("","")?
         ("";"" (metadata classMemberDefinition)*)?
         <rbrace>
    ;

enumEntry
    :    metadata 'metadata' identifier 'identifier' argumentPart 'argumentPart'? {{EnumEntry}}
    |    metadata 'metadata' identifier 'identifier' typeArguments 'typeArguments'? ""."" identifier 'identifier' arguments 'arguments' {{EnumEntry}}
    ;

typeParameter
    :    metadata 'metadata' typeIdentifier 'typeIdentifier' (<extends> typeNotVoid 'typeNotVoid')? {{TypeParameter}}
    ;

typeParameters
    :    ""<"" typeParameter 'typeParameter' ("","" typeParameter 'nextTypeParameter')* "">"" {{TypeParameters}}
    ;

metadata
    :    (""@"" metadatum)*
    ;

metadatum
    :    constructorDesignation 'constructorDesignation' arguments 'arguments' {{Metadatum}}
    |    identifier
    |    qualifiedName
    ;


expression 
    :    assignableExpression 'assignableExpression' assignmentOperator 'assignmentOperator' expression 'assignedExpression' 
    |    conditionalExpression 'conditionalExpression' 
    |    cascade 'cascade'
    |    throwExpression 'throwExpression' 
    ;

/*
expression 
    :    assignableExpression 'assignableExpression' assignmentOperator 'assignmentOperator' expression 'assignedExpression' {{Expression}}
    |    conditionalExpression 'conditionalExpression' {{Expression}}
    |    cascade 'cascade' {{Expression}}
    |    throwExpression 'throwExpression' {{Expression}}
    ;





expression
    :   assignableExpressionWithOperator 'assignableExpressionWithOperator' {{Expression}}
    |   cascade 'cascade' {{Expression}}
    |   primary 'primary' {{Expression}}
    |   unaryExpression 'unaryExpression' {{Expression}}
    |   initializerExpression 'initializerExpression' {{Expression}}
    |   ifNullExpression 'ifNullExpression' {{Expression}}
    |   logicalOrExpression 'logicalOrExpression' {{Expression}}
    |   logicalAndExpression  'logicalAndExpression' {{Expression}}
    |   equalityExpression 'equalityExpression' {{Expression}}
    |   relationalExpression 'relationalExpression' {{Expression}}
    |   bitwiseOrExpression 'bitwiseOrExpression' {{Expression}}
    |   bitwiseXorExpression 'bitwiseXorExpression' {{Expression}}
    |   bitwiseAndExpression 'bitwiseAndExpression' {{Expression}}
    |   shiftExpression 'shiftExpression' {{Expression}}
    |   additiveExpression 'additiveExpression' {{Expression}}
    |   multiplicativeExpression 'multiplicativeExpression' {{Expression}}
    |   throwExpression 'throwExpression' {{Expression}}
    |   functionExpression 'functionExpression' {{Expression}}
    |   thisExpression 'thisExpression' {{Expression}}
    |   newExpression 'newExpression' {{Expression}}
    |   constObjectExpression 'constObjectExpression' {{Expression}}
    |   awaitExpression 'awaitExpression' {{Expression}}
    |   postfixExpression 'postfixExpression' {{Expression}}
    ;

 */



assignableExpressionWithOperator
    :   assignableExpression 'assignableExpression' assignmentOperator 'assignmentOperator' expression 'assigmnentExpression' {{AssignableExpressionWithOperator}}
    ;

expressionWithoutCascade
    :    assignableExpressionWithoutCascadeWithOperator 
    |    functionExpressionWithoutCascade
    |    conditionalExpression
    |    throwExpressionWithoutCascade
    ;

assignableExpressionWithoutCascadeWithOperator
    :   assignableExpression 'assignableExpression' assignmentOperator 'assignmentOperator' expressionWithoutCascade 'expressionWithoutCascade' {{AssignableExpressionWithoutCascadeWithOperator}}
    ;

expressionList
    :    expression 'firstExpression' ("","" expression 'nextExpression')* {{ExpressionList}}
    ;

/*
primary
    :    thisExpression 'thisExpression' {{Primary}}
    |    <super> unconditionalAssignableSelector 'unconditionalAssignableSelector' {{Primary}}
    |    <super> argumentPart 'argumentPart' {{Primary}}
    |    functionExpression 'functionExpression' {{Primary}}
    |    literal 'literal' {{Primary}}
    |    identifier 'identifier' {{Primary}}
    |    newExpression 'newExpression' {{Primary}}
    |    constObjectExpression 'constObjectExpression' {{Primary}}
    |    constructorInvocation 'constructorInvocation' {{Primary}}
    |    functionPrimary 'functionPrimary' {{Primary}}
    |    ""("" expression 'parenthesisExpression' "")"" {{Primary}}
    |    constructorTearoff 'constructorTearoff' {{Primary}}
    ;
 */

primary
    :    thisExpression 
    |    <super> unconditionalAssignableSelector 'unconditionalAssignableSelector' {{Primary}}
    |    <super> argumentPart 'argumentPart' {{Primary}}
    |    functionExpression 
    |    literal 
    |    identifier
    |    newExpression 
    |    constObjectExpression 
    |    constructorInvocation
    |    functionPrimary 
    |    ""("" expression 'parenthesisExpression' "")"" {{Primary}}
    |    constructorTearoff
    ;

constructorInvocation
    :    typeName 'typeName' typeArguments 'typeArguments' ""."" <new> arguments 'arguments' {{ConstructorInvocation}}
    |    typeName 'typeName' ""."" <new> arguments 'arguments' {{ConstructorInvocation}}
    ;

/*
literal
    :    nullLiteral 'nullLiteral' {{Literal}}
    |    booleanLiteral 'booleanLiteral' {{Literal}}
    |    numericLiteral 'numericLiteral' {{Literal}}
    |    stringLiteral 'stringLiteral' {{Literal}}
    |    symbolLiteral 'symbolLiteral' {{Literal}}
    |    setOrMapLiteral 'setOrMapLiteral' {{Literal}}
    |    listLiteral 'listLiteral' {{Literal}}
    ;
 */

literal
    :    nullLiteral
    |    booleanLiteral 
    |    numericLiteral
    |    stringLiteral 
    |    symbolLiteral 
    |    setOrMapLiteral 
    |    listLiteral 
    ;

nullLiteral
    :    <null> {{NullLiteral}}
    ;

numericLiteral
    :    <number> 'number' {{NumericLiteral}}
    |    <HEX_NUMBER> 'hexNumber'  {{NumericLiteral}}
    ;

booleanLiteral
    :    <true> 'true' {{BooleanLiteral}}
    |    <false> 'false' {{BooleanLiteral}}
    ;

stringLiteral
    :    (multiLineString 'multiLineString' | singleLineString 'singleLineString')+ {{StringLiteral}}
    ;


stringLiteralWithoutInterpolation
    :    singleStringWithoutInterpolation+
    ;

setOrMapLiteral
    : <const>? typeArguments 'typeArguments'? <lbrace> elements 'elements'? <rbrace> {{SetOrMapLiteral}}
    ;

listLiteral
    : <const>? typeArguments 'typeArguments'? ""["" elements 'elements'? ""]"" {{ListLiteral}}
    ;

elements
    : element 'element' ("","" element 'nextElements')* "",""? {{Elements}}
    ;

element
    : expressionElement 'expressionElement' {{Element}}
    | mapElement 'mapElement' {{Element}}
    | spreadElement 'spreadElement' {{Element}}
    | ifElement 'ifElement' {{Element}}
    | forElement 'forElement' {{Element}}
    ;

expressionElement
    : expression 'expression' {{ExpressionElement}}
    ;

mapElement
    : expression "":"" expression
    ;

spreadElement
    : (""..."" | ""...?"") expression
    ;

ifElement
    : <if> ""("" expression "")"" element (<else> element)?
    ;

forElement
    : <await>? <for> ""("" forLoopParts "")"" element
    ;

constructorTearoff
    :    typeName typeArguments? ""."" <new>
    ;

throwExpression
    :    <throw> expression 'throwExpression' {{ThrowExpression}}
    ;

throwExpressionWithoutCascade
    :    <throw> expressionWithoutCascade
    ;

functionExpression
    :    formalParameterPart 'formalParameterPart' functionExpressionBody 'functionExpressionBody' {{FunctionExpression}}
    ;

functionExpressionBody
    :    ""=>"" /* TODO: { startNonAsyncFunction(); }*/ expression /* TODO: { endFunction(); }*/
    |    <async> ""=>"" /* TODO: { startAsyncFunction(); }*/ expression /* TODO: { endFunction(); }*/
    ;

functionExpressionBodyPrefix
    :    <async>? ""=>""
    ;

functionExpressionWithoutCascade
    :    formalParameterPart functionExpressionWithoutCascadeBody
    ;

functionExpressionWithoutCascadeBody
    :    ""=>"" /* TODO: { startNonAsyncFunction(); }*/
         expressionWithoutCascade /* TODO: { endFunction(); }*/
    |    <async> ""=>"" /* TODO: { startAsyncFunction(); }*/
         expressionWithoutCascade /* TODO: { endFunction(); }*/
    ;

functionPrimary
    :    formalParameterPart functionPrimaryBody
    ;

functionPrimaryBody
    :    /* TODO: { startNonAsyncFunction(); }*/ block /* TODO: { endFunction(); }*/
    |    (<async> | <async> ""*"" | <sync> ""*"")
         /* TODO: { startAsyncFunction(); }*/ block /* TODO: { endFunction(); }*/
    ;

functionPrimaryBodyPrefix
    : (<async> | <async> ""*"" | <sync> ""*"")? <lbrace>
    ;

thisExpression
    :    <this> {{ThisExpression}}
    ;

newExpression
    :    <new>? constructorDesignation 'constructorDesignation' arguments 'constructorArguments' {{NewExpression}}
    ;

constObjectExpression
    :    <const> constructorDesignation 'constructorDesignation' arguments 'arguments' {{ConstObjectExpression}}
    ;

arguments
    :    ""("" (argumentList "",""?)? "")""
    ;

argumentList
    :    namedArgument 'namedArgument' ("","" namedArgument 'namedArgument')* {{ArgumentList}}
    |    expressionList 'expressionList' ("","" namedArgument 'namedArgument')* {{ArgumentList}}
    ;

namedArgument
    :    label 'label' expression 'expression' {{NamedArgument}}
    ;

cascade
    :     cascade 'cascade' "".."" cascadeSection 'cascadeSection' {{Cascade}}
    |     conditionalExpression 'conditionalExpression' (""?.."" | "".."") cascadeSection 'cascadeSection' {{Cascade}}
    ;

cascadeSection
    :    cascadeSelector cascadeSectionTail
    ;

cascadeSelector
    :    ""["" expression ""]""
    |    identifier
    ;

cascadeSectionTail
    :    cascadeAssignment
    |    selector* (assignableSelector cascadeAssignment)?
    ;

cascadeAssignment
    :    assignmentOperator expressionWithoutCascade
    ;

assignmentOperator
    :    ""="" 'equalsSymbol' {{AssignmentOperator}}
    |    compoundAssignmentOperator 'compoundAssignmentOperator' {{AssignmentOperator}}
    ;

compoundAssignmentOperator
    :    ""*=""
    |    ""/=""
    |    ""~/=""
    |    ""%=""
    |    ""+=""
    |    ""-=""
    |    ""<<=""
    |    "">"" "">"" "">"" ""=""
    |    "">"" "">"" ""=""
    |    ""&=""
    |    ""^=""
    |    ""|=""
    |    ""??=""
    ;

/* original 
conditionalExpression
    :    ifNullExpression 'ifNullExpression' 
    ( ""?"" expressionWithoutCascade 'firstExpressionWithoutCascade' "":"" 
    expressionWithoutCascade 'secondExpressionWithoutCascade' )? {{ConditionalExpression}}
    ;
*/

conditionalExpression
    :   ifNullExpression   
    |   ifNullExpression 'testExpression' 
    ""?"" expressionWithoutCascade 'trueExpression' "":"" 
    expressionWithoutCascade 'falseExpression' {{ConditionalExpression}}
    ;

/* original
ifNullExpression
    : logicalOrExpression 'testNullExpression' (""??"" logicalOrExpression 'logicalOrExpression')* {{IfNullExpression}}
    ;
 */


ifNullExpression
    :   logicalOrExpression
    |   logicalOrExpression 'testNullExpression' (""??"" logicalOrExpression 'logicalOrExpression')+ {{IfNullExpression}}
    ;


/* original
logicalOrExpression
    :    logicalAndExpression 'logicalAndExpression' (""||"" logicalAndExpression 'logicalAndExpression')* {{LogicalOrExpression}}
    ;
 */

logicalOrExpression
    :   logicalAndExpression
    |   logicalAndExpression 'logicalAndExpression' (""||"" logicalAndExpression 'logicalAndExpression')+ {{BinaryExpression}}
    ;

/* original
logicalAndExpression
    :    equalityExpression 'equalityExpression' (""&&"" equalityExpression 'equalityExpression')* {{LogicalAndExpression}}
    ;
 */
logicalAndExpression
    :   equalityExpression
    |   equalityExpression 'equalityExpression' (""&&"" equalityExpression 'equalityExpression')+ {{BinaryExpression}}
    ;

/* original
equalityExpression
    :   relationalExpression 'relationalExpression' (equalityOperator 'equalityOperator' relationalExpression 'relationalExpression')? {{EqualityExpression}}
    |   <super> equalityOperator 'equalityOperator' relationalExpression 'relationalExpression' {{EqualityExpression}}
    ;
*/

equalityExpression
    :   relationalExpression 
    |   relationalExpression 'relationalExpression' (equalityOperator 'equalityOperator' relationalExpression 'relationalExpression')+ {{BinaryExpression}}
    |   <super> equalityOperator 'equalityOperator' relationalExpression 'relationalExpression' {{BinaryExpression}}
    ;

equalityOperator
    :    ""==""
    |    ""!=""
    ;

/*
relationalExpression
    :   bitwiseOrExpression 'bitwiseOrExpression'
        (typeTest 'typeTest' | typeCast 'typeCast' | relationalOperator 'relationalOperator' bitwiseOrExpression 'bitwiseOrExpression' )? {{RelationalExpression}}
    |    <super> relationalOperator 'relationalOperator' bitwiseOrExpression 'bitwiseOrExpression' {{RelationalExpression}}
    ;
 */

relationalExpression
    :   bitwiseOrExpression
    |   bitwiseOrExpression 'bitwiseOrExpression'
        (typeTest 'typeTest' | typeCast 'typeCast' | relationalOperator 'relationalOperator' bitwiseOrExpression 'bitwiseOrExpression')+ {{BinaryExpression}}
    |    <super> relationalOperator 'relationalOperator' bitwiseOrExpression 'bitwiseOrExpression' {{BinaryExpression}}
    ;

relationalOperator
    :    "">"" ""=""
    |    "">""
    |    ""<=""
    |    ""<""
    ;

/* original 
bitwiseOrExpression
    :    bitwiseXorExpression 'bitwiseXorExpression' (""|"" bitwiseXorExpression 'bitwiseXorExpression')* {{BitwiseOrExpression}}
    |    <super> (""|"" bitwiseXorExpression 'bitwiseXorExpression')+ {{BitwiseOrExpression}}
    ;
*/

bitwiseOrExpression
    :   bitwiseXorExpression
    |   bitwiseXorExpression 'bitwiseXorExpression' (""|"" bitwiseXorExpression 'bitwiseXorExpression')+ {{BinaryExpression}}
    |   <super> ""|"" bitwiseXorExpression 'bitwiseXorExpression' {{BinaryExpression}}
    ;

/* original
bitwiseXorExpression
    :    bitwiseAndExpression 'bitwiseAndExpression' (""^"" bitwiseAndExpression 'bitwiseAndExpression')* {{BitwiseXorExpression}}
    |    <super> (""^"" bitwiseAndExpression 'bitwiseAndExpression')+ {{BitwiseXorExpression}}
    ;
 */
bitwiseXorExpression
    :   bitwiseAndExpression
    |   bitwiseAndExpression 'bitwiseAndExpression'( ""^"" bitwiseAndExpression 'bitwiseAndExpression')+ {{BinaryExpression}}
    |   <super> ""^"" bitwiseAndExpression 'bitwiseAndExpression' {{BinaryExpression}}
    ;

/* original 
bitwiseAndExpression
    :    shiftExpression 'shiftExpression' (""&"" shiftExpression 'shiftExpression')* {{BitwiseAndExpression}}
    |    <super> (""&"" shiftExpression 'shiftExpression')+ {{BitwiseAndExpression}}
    ;
 */

bitwiseAndExpression
    :   shiftExpression
    |   shiftExpression 'shiftExpression' (""&"" shiftExpression 'shiftExpression')+ {{BinaryExpression}}
    |   <super> ""&"" shiftExpression 'shiftExpression' {{BinaryExpression}}
    ;

bitwiseOperator
    :    ""&""
    |    ""^""
    |    ""|""
    ;

/* original
shiftExpression
    :    additiveExpression 'additiveExpression' (shiftOperator 'shiftOperator' additiveExpression 'additiveExpression')* {{ShiftExpression}}
    |    <super> (shiftOperator 'shiftOperator' additiveExpression 'additiveExpression')+ {{ShiftExpression}}
    ;
 */

shiftExpression
    :   additiveExpression 
    |   additiveExpression 'additiveExpression'( shiftOperator 'shiftOperator' additiveExpression 'additiveExpression')+ {{BinaryExpression}}
    |   <super> shiftOperator 'shiftOperator' additiveExpression 'additiveExpression' {{BinaryExpression}}
    ;

shiftOperator
    :    ""<<""
    |    "">"" "">"" "">""
    |    "">"" "">""
    ;

/* original
additiveExpression
    :    multiplicativeExpression 'multiplicativeExpression' (additiveOperator 'additiveOperator' multiplicativeExpression 'multiplicativeExpression')* {{AdditiveExpression}}
    |    <super> (additiveOperator 'additiveOperator' multiplicativeExpression 'multiplicativeExpression')+ {{AdditiveExpression}}
    ;
 */

additiveExpression
    :   multiplicativeExpression
    |   multiplicativeExpression 'multiplicativeExpression' (additiveOperator 'additiveOperator' multiplicativeExpression 'multiplicativeExpression')+ {{AdditiveExpression}}
    |   <super> additiveOperator 'additiveOperator' multiplicativeExpression 'multiplicativeExpression' {{AdditiveExpression}}
    ;

additiveOperator
    :    ""+""
    |    ""-""
    ;

/*
multiplicativeExpression
    :    unaryExpression 'unaryExpression' (multiplicativeOperator 'multiplicativeOperator' unaryExpression 'unaryExpression')* {{MultiplicativeExpression}}
    |    <super> (multiplicativeOperator 'multiplicativeOperator' unaryExpression 'unaryExpression')+ {{MultiplicativeExpression}}
    ;
 */

multiplicativeExpression
    :   unaryExpression
    |   unaryExpression 'unaryExpression' (multiplicativeOperator 'multiplicativeOperator' unaryExpression 'unaryExpression')+ {{MultiplicativeExpression}}
    |   <super> multiplicativeOperator 'multiplicativeOperator' unaryExpression 'unaryExpression' {{MultiplicativeExpression}}
    ;

multiplicativeOperator
    :    ""*""
    |    ""/""
    |    ""%""
    |    ""~/""
    ;

/*
unaryExpression
    :    prefixOperator 'prefixOperator' unaryExpression 'unaryExpression' {{UnaryExpression}}
    |    awaitExpression 'awaitExpression' {{UnaryExpression}}
    |    postfixExpression 'postfixExpression' {{UnaryExpression}}
    |    (minusOperator 'minusOperator' | tildeOperator 'tildeOperator') <super> {{UnaryExpression}}
    |    incrementOperator 'incrementOperator' assignableExpression 'assignableExpression' {{UnaryExpression}}
    ;
*/

unaryExpression
    :    prefixOperator 'prefixOperator' unaryExpression 'unaryExpression' {{UnaryExpression}}
    |    awaitExpression 
    |    postfixExpression 
    |    (minusOperator 'minusOperator' | tildeOperator 'tildeOperator') <super> {{UnaryExpression}}
    |    incrementOperator 'incrementOperator' assignableExpression 'assignableExpression' {{UnaryExpression}}
    ;

prefixOperator
    :    minusOperator
    |    negationOperator
    |    tildeOperator
    ;

minusOperator
    :    ""-""
    ;

negationOperator
    :    ""!""
    ;

tildeOperator
    :    ""~""
    ;

awaitExpression
    :    <await> unaryExpression 'unaryExpression' {{AwaitExpression}}
    ;

postfixExpression
    :    assignableExpression 'assignableExpression' postfixOperator 'postfixOperator' {{PostfixExpression}}
    |    primary 'primary' selector 'selector'* {{PostfixExpression}}
    ;

postfixOperator
    :    incrementOperator
    ;

selector
    :    ""!""
    |    assignableSelector
    |    argumentPart
    |    typeArguments
    ;

argumentPart
    :    typeArguments? arguments
    ;

incrementOperator
    :    ""++""
    |    ""--""
    ;

assignableExpression
    :    primary 'primary' assignableSelectorPart 'assignableSelectorPart' {{AssignableExpression}}
    |    <super> unconditionalAssignableSelector 'unconditionalAssignableSelector' {{AssignableExpression}}
    |    identifier 'identifier' {{AssignableExpression}}
    ;

assignableSelectorPart
    :    selector* assignableSelector
    ;

unconditionalAssignableSelector
    :    ""["" expression ""]""
    |    ""."" identifier
    ;

assignableSelector
    :    unconditionalAssignableSelector
    |    ""?."" identifier
    |    ""?"" ""["" expression ""]""
    ;

identifierNotFUNCTION
    :    <IDENTIFIER>
    |    builtInIdentifier
    |    <async> 
    |    <hide> 
    |    <of> 
    |    <on> 
    |    <show> 
    |    <sync> 
    |    (<await>|<yield>)
    ;

identifier
    :    identifierNotFUNCTION 'idNotFunction' {{Identifier}}
    |    <function> 'function' {{Identifier}}
    ;

qualifiedName
    :    typeIdentifier 'typeIdentifier' ""."" (identifier 'identifier' | <new>) {{QualifiedName}}
    |    typeIdentifier 'typeIdentifier' ""."" typeIdentifier 'typeIdentifier' ""."" (identifier 'identifier' | <new>) {{QualifiedName}}
    ;

typeIdentifier
    :    <IDENTIFIER>
    |    <dynamic> 
    |    <async> 
    |    <hide> 
    |    <of> 
    |    <on> 
    |    <show> 
    |    <sync> 
    |    /* TODO: { asyncEtcPredicate(getCurrentToken().getType()) }?*/ (<await>|<yield>)
    ;

typeTest
    :    isOperator typeNotVoid
    ;

isOperator
    :    <is> ""!""?
    ;

typeCast
    :    asOperator typeNotVoid
    ;

asOperator
    :    <as>
    ;

/*
statements
    :    statement 'statementsSet'* {{SequentialStatements}}
    ;
 */
statements
    : statement 'statement' {{Statements}}
    | statements statement 'statement' {{Statements}}
    ;

statement
    :    label 'label'* nonLabelledStatement 'nonLabelledStatement' {{SingleStatement}}
    ;



nonLabelledStatement
    :    block 
    |    localVariableDeclaration 
    |    forStatement 
    |    whileStatement 
    |    doStatement 
    |    switchStatement 
    |    ifStatement 
    |    rethrowStatement 
    |    tryStatement 
    |    breakStatement 
    |    continueStatement 
    |    returnStatement 
    |    localFunctionDeclaration 
    |    assertStatement 
    |    yieldStatement 
    |    yieldEachStatement 
    |    expressionStatement 
    ;

/*
expressionStatement
    :    expression 'expressionStmt'? "";"" {{ExpressionStatement}}
    ;
 */

expressionStatement
    :    expression? "";"" 
    ;

localVariableDeclaration
    :    metadata 'metadata' initializedVariableDeclaration 'initializedVariableDeclaration' "";"" {{LocalVariableDeclaration}}
    ;

initializedVariableDeclaration
    :    declaredIdentifier 'declaredIdentifier' (""="" expression 'initializeExpression')? ("","" initializedIdentifier 'initializedIdentifier')* {{InitializedVariableDeclaration}}
    ;

localFunctionDeclaration
    :    metadata 'metadata' functionSignature 'functionSignature' functionBody 'functionBody' {{LocalFunctionDeclaration}}
    ;

ifStatement
    :    <if> ""("" expression 'ifConditionalExpression' "")"" statements 'ifThenStatement' (<else> statement 'elseStatement')? {{IfStatement}}
    ;

forStatement
    :    <await>? <for> ""("" forLoopParts "")"" statements 'statement' {{ForStatement}}
    ;

forLoopParts
    :    metadata declaredIdentifier <in> expression
    |    metadata identifier <in> expression
    |    forInitializerStatement expression? "";"" expressionList?
    ;



forInitializerStatement
    :    localVariableDeclaration
    |    expression? "";""
    ;

whileStatement
    :    <while> ""("" expression 'whileConditionExpression' "")"" statements 'whileStatement' {{WhileStatement}}
    ;

doStatement
    :    <do> statement 'doStatement' <while> ""("" expression 'doConditionExpression' "")"" "";"" {{DoStatement}}
    ;

switchStatement
    :    <switch> ""("" expression 'switchCaseExpression' "")"" <lbrace> switchCase 'cases'* defaultCase 'defaultCase'? <rbrace> {{SwitchStatement}}
    ;

switchCase
    :    label 'label'* <case> expression 'expression' "":"" statements 'statements'? {{SwitchCase}}
    ;

defaultCase
    :    label 'label'* <default> "":"" statements 'statements'? {{DefaultCase}}
    ;

rethrowStatement
    :    <rethrow> "";"" {{RethrowStatement}}
    ;

tryStatement
    :    <try> block 'block' (onParts 'onParts' finallyPart 'finallyPart'? | finallyPart 'finallyPart') {{TryStatement}}
    ;

onPart
    :    catchPart 'catchPart' block 'block' {{OnPart}}
    |    <on> typeNotVoid 'typeNotVoid' catchPart 'catchPart'? block 'block' {{OnPart}}
    ;

onParts
    :    onPart onParts
    |    onPart
    ;

catchPart
    :    <catch> ""("" identifier 'identifier' ("","" identifier 'identifier')? "")"" {{CatchPart}}
    ;

finallyPart
    :    <finally> block 'block' {{FinallyPart}}
    ;

returnStatement
    :    <return> expression 'returnExpression'? "";"" {{ReturnStatement}}
    ;

label
    :    identifier 'LabelIdentifier' "":"" {{Label}}
    ;

breakStatement
    :    <break> identifier? "";"" {{BreakStatement}}
    ;

continueStatement
    :    <continue> identifier? "";"" {{ContinueStatement}}
    ;

yieldStatement
    :    <yield> expression 'yieldExpression' "";"" {{YieldStatement}}
    ;

yieldEachStatement
    :    <yield> ""*"" expression 'yieldEachExpression' "";"" {{YieldEachStatement}}
    ;

assertStatement
    :    assertion 'assertion' "";"" {{AssertStatement}}
    ;

assertion
    :    <ASSERT> ""("" expression 'expression' ("","" expression 'expression')? "",""? "")"" {{Assertion}}
    ;

libraryName
    :    metadata 'metadata' <library> dottedIdentifierList 'dottedIdentifierList' "";"" {{LibraryName}}
    ;

dottedIdentifierList
    :    identifier 'identifier' (""."" identifier 'identifier')* {{DottedIdentifierList}}
    ;

importOrExport
    :    libraryImport 'libraryImport' 
    |    libraryExport 'libraryExport'
    ;

libraryImport
    :    metadata 'metadata' importSpecification 'importSpecification' {{LibraryImport}}
    ;

/* import 'package:bl_microapp/bl_microapp.dart';*/
importSpecification
    :    <import> configurableUri 'configurableUri' (<deferred>? <as> identifier 'identifier')? combinator* "";"" {{ImportSpecification}}
    ;

combinator
    :    <show> identifierList
    |    <hide> identifierList
    ;

identifierList
    :    identifier 'identifier' ("","" identifier 'nextIdentifier')* {{IdentifierList}}
    ;

libraryExport
    :    metadata <export> uri combinator* "";""  {{ExportDeclaration}}
    ;

partDirective
    :    metadata 'metadata' <part> uri 'uri' "";"" {{PartDirective}}
    ;

partHeader
    :    metadata <part> <of> (dottedIdentifierList | uri)"";"" {{PartHeader}}
    ;

partDeclaration
    :    partHeader topLevelDefinition* {{PartDeclaration}}
    ;



uri
    :    stringLiteralWithoutInterpolation 'stringLiteralWithoutInterpolation' {{Uri}}
    ;

configurableUri
    :    uri 'uri' configurationUri 'configurationUri'* {{ConfigurableUri}}
    ;

configurationUri
    :    <if> ""("" uriTest 'uriTest' "")"" uri 'uriConfigured' {{ConfigurationUri}}
    ;

uriTest
    :    dottedIdentifierList 'dottedIdentifierList' (""=="" stringLiteral 'stringLiteral')? {{UriTest}}
    ;

type
    :    functionType 'functionType' ""?""? {{Type}}
    |    typeNotFunction 'typeNotFunction' {{Type}}
    ;

typeNotVoid
    :    functionType ""?""?
    |    typeNotVoidNotFunction
    ;

typeNotFunction
    :    typeNotVoidNotFunction
    |    <void>
    ;

typeNotVoidNotFunction
    :    typeName typeArguments? ""?""?
    |    <function> ""?""?
    ;

typeName
    :    typeIdentifier 'typeIdentifier' (""."" typeIdentifier 'followingTypeIdentifier')? {{TypeName}}
    ;

typeArguments
    :    ""<"" typeList "">""
    ;

typeList
    :    type 'type' ("","" type 'nextType')* {{TypeList}}
    ;

typeNotVoidNotFunctionList
    :    typeNotVoidNotFunction 'typeNotVoidNotFunction' ("","" typeNotVoidNotFunction 'nextTypeNotVoidNotFunction')* {{TypeNotVoidNotFunctionList}}
    ;

typeAlias
    :    <typedef> typeIdentifier 'typeIdentifier' typeParameters 'typeParameters'? ""="" type 'type' "";"" {{TypeAlias}}
    |    <typedef> functionTypeAlias
    ;

functionTypeAlias
    :    functionPrefix 'functionPrefix' formalParameterPart 'formalParameterPart' "";"" {{FunctionTypeAlias}}
    ;

functionPrefix
    :    type 'type' identifier 'identifier' {{FunctionPrefix}}
    |    identifier
    ;

functionTypeTail
    :    <function> typeParameters 'typeParameters'? parameterTypeList 'parameterTypeList' {{FunctionTypeTail}}
    ;

functionTypeTails
    :    functionTypeTail 'functionTypeTail' ""?""? functionTypeTails 'functionTypeTails' {{FunctionTypeTails}}
    |    functionTypeTail
    ;

functionType
    :    functionTypeTails
    |    typeNotFunction 'typeNotFunction' functionTypeTails 'functionTypeTails' {{FunctionType}}
    ;

parameterTypeList
    :    ""("" "")""
    |    ""("" normalParameterTypes "","" optionalParameterTypes "")""
    |    ""("" normalParameterTypes "",""? "")""
    |    ""("" optionalParameterTypes "")""
    ;

normalParameterTypes
    :    normalParameterType 'normalParameterType' ("","" normalParameterType 'nextNormalParameterType')* {{NormalParameterTypes}}
    ;

normalParameterType
    :    metadata 'metadata' typedIdentifier 'typedIdentifier' {{NormalParameterType}}
    |    metadata 'metadata' type 'type' {{NormalParameterType}}
    ;

optionalParameterTypes
    :    optionalPositionalParameterTypes
    |    namedParameterTypes
    ;

optionalPositionalParameterTypes
    :    ""["" normalParameterTypes "",""? ""]""
    ;

namedParameterTypes
    :    <lbrace> namedParameterType 'namedParameterType' ("","" namedParameterType 'nextNamedParameterType')* "",""? <rbrace> {{NamedParameterTypes}}
    ;

namedParameterType
    :    metadata 'metadata' <required>? typedIdentifier 'typedIdentifier' {{NamedParameterType}}
    ;

typedIdentifier
    :    type 'type' identifier 'identifier' {{TypedIdentifier}}
    ;

constructorDesignation
    :    typeIdentifier
    |    qualifiedName
    |    typeName 'typeName' typeArguments 'typeArguments' (""."" (identifier 'identifier' | <new>))? {{ConstructorDesignation}}
    ;

symbolLiteral
    :    ""#"" (operator 'operator' | (identifier 'identifier' (""."" identifier 'identifier')*) | <void>) {{SymbolLiteral}}
    ;


singleStringWithoutInterpolation
    :    <RAW_SINGLE_LINE_STRING>
    |    <RAW_MULTI_LINE_STRING>
    |    <SINGLE_LINE_STRING_DQ_BEGIN_END>
    |    <SINGLE_LINE_STRING_SQ_BEGIN_END>
    |    <MULTI_LINE_STRING_DQ_BEGIN_END>
    |    <MULTI_LINE_STRING_SQ_BEGIN_END>
    ;

/* SQ : string with single quote
    DQ : double quote
    BEGIN_END : reach the second quote without $ interruption (for string interpolation expresion)
    MID : reach a $*/

singleLineString
    :    <RAW_SINGLE_LINE_STRING> {{SingleLineString}}
    |    <SINGLE_LINE_STRING_SQ_BEGIN_END> {{SingleLineString}}
    |    <SINGLE_LINE_STRING_SQ_BEGIN_MID> expression 'firstExpression' (<SINGLE_LINE_STRING_MID_MID> expression 'nextExpressions')* <SINGLE_LINE_STRING_SQ_MID_END> {{SingleLineString}}
    |    <SINGLE_LINE_STRING_DQ_BEGIN_END> {{SingleLineString}}
    |    <SINGLE_LINE_STRING_DQ_BEGIN_MID> expression 'firstExpression' (<SINGLE_LINE_STRING_MID_MID> expression 'nextExpressions')* <SINGLE_LINE_STRING_DQ_MID_END> {{SingleLineString}}
    ;

multiLineString
    :    <RAW_MULTI_LINE_STRING> {{MultiLineString}}
    |    <MULTI_LINE_STRING_SQ_BEGIN_END> {{MultiLineString}}
    |    <MULTI_LINE_STRING_SQ_BEGIN_MID> expression 'firstExpression' (<MULTI_LINE_STRING_MID_MID> expression 'nextExpressions')* <MULTI_LINE_STRING_SQ_MID_END> {{MultiLineString}}
    |    <MULTI_LINE_STRING_DQ_BEGIN_END> {{MultiLineString}}
    |    <MULTI_LINE_STRING_DQ_BEGIN_MID> expression 'firstExpression' (<MULTI_LINE_STRING_MID_MID> expression 'nextExpressions')* <MULTI_LINE_STRING_DQ_MID_END> {{MultiLineString}}
    ;

reservedWord
    :    <ASSERT>
    |    <break>
    |    <case>
    |    <catch>
    |    <clazz>
    |    <const>
    |    <continue>
    |    <default>
    |    <do>
    |    <else>
    |    <enum>
    |    <extends>
    |    <false>
    |    <final>
    |    <finally>
    |    <for>
    |    <if>
    |    <in>
    |    <is>
    |    <new>
    |    <null>
    |    <rethrow>
    |    <return>
    |    <super>
    |    <switch>
    |    <this>
    |    <throw>
    |    <true>
    |    <try>
    |    <var>
    |    <void>
    |    <while>
    |    <with>
    ;

builtInIdentifier
    :    <abstract>
    |    <as>
    |    <covariant>
    |    <deferred>
    |    <dynamic>
    |    <export>
    |    <extension>
    |    <external>
    |    <factory>
    |    <function>
    |    <get>
    |    <implements>
    |    <import>
    |    <interface>
    |    <late>
    |    <library>
    |    <operator>
    |    <mixin>
    |    <part>
    |    <required>
    |    <set>
    |    <static>
    |    <typedef>
    ;



<LETTER>
    :    [a-z]
    |    [A-Z]
    ;

<DIGIT>
    :    [0-9]
    ;

<EXPONENT>
    :    (e | E) (\+ | \-)? <DIGIT>+
    ;

<HEX_DIGIT>
    :    (a | b | c | d | e | f)
    |    (A | B | C | D | E | F)
    |    <DIGIT>
    ;



<ASSERT>
    :    assert
    ;

<break>
    :    break
    ;

<case>
    :    case
    ;

<catch>
    :    catch
    ;

<clazz>
    :    class
    ;

<const>
    :    const
    ;

<continue>
    :    continue
    ;

<default>
    :    default
    ;

<do>
    :    do
    ;

<else>
    :    else
    ;

<enum>
    :    enum
    ;

<extends>
    :    extends
    ;

<false>
    :    false
    ;

<final>
    :    final
    ;

<finally>
    :    finally
    ;

<for>
    :    for
    ;

<if>
    :    if
    ;

<in>
    :    in
    ;

<is>
    :    is
    ;

<new>
    :    new
    ;

<null>
    :    null
    ;

<rethrow>
    :    rethrow
    ;

<return>
    :    return
    ;

<super>
    :    super
    ;

<switch>
    :    switch
    ;

<this>
    :    this
    ;

<throw>
    :    throw
    ;

<true>
    :    true
    ;

<try>
    :    try
    ;

<var>
    :    var
    ;

<void>
    :    void
    ;

<while>
    :    while
    ;

<with>
    :    with
    ;

<abstract>
    :    abstract
    ;

<as>
    :    as
    ;

<covariant>
    :    covariant
    ;

<deferred>
    :    deferred
    ;

<dynamic>
    :    dynamic
    ;

<export>
    :    export
    ;

<extension>
    :    extension
    ;

<external>
    :    external
    ;

<factory>
    :    factory
    ;

<function>
    :    Function
    ;

<get>
    :    get
    ;

<implements>
    :    implements
    ;

<import>
    :    import
    ;

<interface>
    :    interface
    ;

<late>
    :    late
    ;

<library>
    :    library
    ;

<operator>
    :    operator
    ;

<mixin>
    :    mixin
    ;

<part>
    :    part
    ;

<required>
    :    required
    ;

<set>
    :    set
    ;

<static>
    :    static
    ;

<typedef>
    :    typedef
    ;



<await>
    :    await
    ;

<yield>
    :    yield
    ;



<async>
    :    async
    ;

<hide>
    :    hide
    ;

<of>
    :    of
    ;

<on>
    :    on
    ;

<show>
    :    show
    ;

<sync>
    :    sync
    ;



<number>
    :    <DIGIT>+ \. <DIGIT>+ <EXPONENT>?
    |    <DIGIT>+ <EXPONENT>?
    |    \. <DIGIT>+ <EXPONENT>?
    ;

<HEX_NUMBER>
    :    0x <HEX_DIGIT>+
    |    0X <HEX_DIGIT>+
    ;

<RAW_SINGLE_LINE_STRING>
    :    r \' ([^\'\r\n])* \'
    |    r \"" ([^\""\r\n])* \""
    ;

<RAW_MULTI_LINE_STRING>
    :    r \""\""\"" (.)*/* TODO: ? */ \""\""\""
    |    r \'\'\' (.)*/* TODO: ? */ \'\'\'
    ;

<SIMPLE_STRING_INTERPOLATION>
    :    \$ <IDENTIFIER_NO_DOLLAR>
    ;

<ESCAPE_SEQUENCE>
    :    \\n
    |    \\r
    |    \\b
    |    \\t
    |    \\v
    |    \\x <HEX_DIGIT> <HEX_DIGIT>
    |    \\u <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT> <HEX_DIGIT>
    |    \\u <lbrace> <HEX_DIGIT_SEQUENCE> <rbrace>
    ;

<HEX_DIGIT_SEQUENCE>
    :    <HEX_DIGIT> <HEX_DIGIT>? <HEX_DIGIT>?
         <HEX_DIGIT>? <HEX_DIGIT>? <HEX_DIGIT>?
    ;

<STRING_CONTENT_COMMON>
    :    [^\\\'\""\$\r\n]
    |    <ESCAPE_SEQUENCE>
    |    \\ [^nrbtvxu\r\n]
    |    <SIMPLE_STRING_INTERPOLATION>
    ;

<STRING_CONTENT_SQ>
    :    <STRING_CONTENT_COMMON>
    |    <DQ> /*case where a string is a single DQ symbol*/
    ;

<SINGLE_LINE_STRING_SQ_BEGIN_END>
    :     <SQ> <STRING_CONTENT_SQ>* <SQ>
    ;

<SINGLE_LINE_STRING_SQ_BEGIN_MID>
    :     <SQ> <STRING_CONTENT_SQ>* \$<lbrace> 
    ;

<SINGLE_LINE_STRING_SQ_MID_MID>
    :   <rbrace> <STRING_CONTENT_SQ> \$<lbrace>  
    ;

<SINGLE_LINE_STRING_SQ_MID_END>
    :    <rbrace> <STRING_CONTENT_SQ>* <SQ>
    ;

<STRING_CONTENT_DQ>
    :    <STRING_CONTENT_COMMON>
    |    <SQ> /*case where a string is a single SQ symbol*/
    ;

<SINGLE_LINE_STRING_DQ_BEGIN_END>
    :    <DQ> <STRING_CONTENT_DQ>* <DQ>
    ;

<SINGLE_LINE_STRING_DQ_BEGIN_MID>
    :    <DQ> <STRING_CONTENT_DQ>* \$<lbrace> 
    ;

<SINGLE_LINE_STRING_DQ_MID_MID>
    :   <rbrace> <STRING_CONTENT_DQ>* \$<lbrace>   
    ;

<SINGLE_LINE_STRING_DQ_MID_END>
    :   <rbrace> <STRING_CONTENT_DQ>* <DQ>
    ;

/*new rule*/
<SINGLE_LINE_STRING_MID_MID>
    :   <rbrace> (<STRING_CONTENT_DQ>|<STRING_CONTENT_SQ>)* \$<lbrace>   
    ;

<SQ>
    : \'
    ;

<DQ>
    : \""
    ;

<TSQ>
    :   \'\'\'
    ;

<TDQ>
    :   \""\""\""
    ;



<QUOTES_SQ>
    :
    |    <SQ>
    |    <SQ><SQ>
    ;

<QUOTES_DQ>
    :
    |    <DQ>
    |    <DQ><DQ>
    ;



<STRING_CONTENT_TSQ>
    :   <QUOTES_SQ> (<STRING_CONTENT_COMMON> | \"" | \r | \n | \\\r | \\\n)
    ;

<MULTI_LINE_STRING_SQ_BEGIN_END>
    :   \'\'\' <STRING_CONTENT_TSQ>* \'\'\'
    ;

<MULTI_LINE_STRING_SQ_BEGIN_MID>
    :    <TSQ> <STRING_CONTENT_TSQ>* <QUOTES_SQ> \$<lbrace> 
    ;

<MULTI_LINE_STRING_SQ_MID_MID>
    :   <rbrace> <STRING_CONTENT_TSQ>* <QUOTES_SQ> \$<lbrace>
         
    ;

<MULTI_LINE_STRING_SQ_MID_END>
    :   <rbrace> <STRING_CONTENT_TSQ>* <TSQ>
    ;



<STRING_CONTENT_TDQ>
    :    <QUOTES_DQ> (<STRING_CONTENT_COMMON> | \' | \r | \n | \\\r | \\\n)
    ;

<MULTI_LINE_STRING_DQ_BEGIN_END>
    :   <TDQ> <STRING_CONTENT_TDQ>* <TDQ>
    ;

<MULTI_LINE_STRING_DQ_BEGIN_MID>
    :   <TDQ> <STRING_CONTENT_TDQ>* <QUOTES_DQ> \$<lbrace>
    ;

<MULTI_LINE_STRING_DQ_MID_MID>
    :   <rbrace> <STRING_CONTENT_TDQ>* <QUOTES_DQ> \$<lbrace>
    ;

<MULTI_LINE_STRING_DQ_MID_END>
    :   <lbrace> <STRING_CONTENT_TDQ>* <TDQ>
    ;

<MULTI_LINE_STRING_MID_MID>
    :   <rbrace> (<STRING_CONTENT_TSQ>|<STRING_CONTENT_TDQ>)* <QUOTES_DQ> \$<lbrace>
    ;

<lbrace>
    :    \{ 
    ;

<rbrace>
    :    \}
    ;

<IDENTIFIER_START_NO_DOLLAR>
    :    <LETTER>
    |    _
    ;

<IDENTIFIER_PART_NO_DOLLAR>
    :    <IDENTIFIER_START_NO_DOLLAR>
    |    <DIGIT>
    ;

<IDENTIFIER_NO_DOLLAR>
    :    <IDENTIFIER_START_NO_DOLLAR> <IDENTIFIER_PART_NO_DOLLAR>*
    ;

<IDENTIFIER_START>
    :    <IDENTIFIER_START_NO_DOLLAR>
    |    \$
    ;

<IDENTIFIER_PART>
    :    <IDENTIFIER_START>
    |    <DIGIT>
    ;

<SCRIPT_TAG>
    :    \#\! ([^\r\n])* <NEWLINE>
    ;

<IDENTIFIER>
    :    <IDENTIFIER_START> <IDENTIFIER_PART>*
    ;


<NEWLINE>
    :    (\r | \n | \r\n)
    ;

<FEFF>
    :    \xFEFF
    ;

<whitespace>
	: \s+
	;

<comment>
	: \/\/ [^\r\n]* 
	| /\*([^*]|[\r\n]|(\*+([^*/]|[\r\n])))*\*+/
 	;"
]

{ #category : #generated }
DartParser class >> reduceTable [
^#(
	#(143 0 #reduceActionForimportOrExport_1: 1506305 false) 
	#(236 0 #nil 13024257 false) 
	#(144 0 #nil 1532929 false) 
	#(234 1 #liftFirstValue: 13004801 false) 
	#(146 0 #reduceActionFor_metadata_topLevelDefinition__1: 1558529 false) 
	#(143 2 #reduceActionForimportOrExport_2: 1506306 false) 
	#(396 1 #reduceActionForimportOrExport1: 38060033 false) 
	#(396 1 #reduceActionForimportOrExport2: 38060034 false) 
	#(236 2 #liftFirstValue: 13024258 false) 
	#(142 3 #reduceActionForlibraryDefinition1: 1421313 false) 
	#(144 2 #liftFirstValue: 1532930 false) 
	#(397 2 #reduceActionForlibraryImport1: 38168577 false) 
	#(454 1 #liftFirstValue: 45091841 false) 
	#(454 1 #liftFirstValue: 45091842 false) 
	#(454 1 #liftFirstValue: 45091843 false) 
	#(454 1 #liftFirstValue: 45091844 false) 
	#(454 1 #liftFirstValue: 45091845 false) 
	#(454 1 #liftFirstValue: 45091846 false) 
	#(454 1 #liftFirstValue: 45091847 false) 
	#(454 1 #liftFirstValue: 45091848 false) 
	#(454 1 #liftFirstValue: 45091849 false) 
	#(351 1 #reduceActionForidentifier2: 32743426 false) 
	#(454 1 #liftFirstValue: 45091850 false) 
	#(454 1 #liftFirstValue: 45091851 false) 
	#(454 1 #liftFirstValue: 45091852 false) 
	#(454 1 #liftFirstValue: 45091853 false) 
	#(454 1 #liftFirstValue: 45091854 false) 
	#(454 1 #liftFirstValue: 45091855 false) 
	#(454 1 #liftFirstValue: 45091856 false) 
	#(454 1 #liftFirstValue: 45091857 false) 
	#(454 1 #liftFirstValue: 45091858 false) 
	#(454 1 #liftFirstValue: 45091859 false) 
	#(454 1 #liftFirstValue: 45091860 false) 
	#(454 1 #liftFirstValue: 45091861 false) 
	#(454 1 #liftFirstValue: 45091862 false) 
	#(454 1 #liftFirstValue: 45091863 false) 
	#(350 1 #liftFirstValue: 32522249 false) 
	#(350 1 #liftFirstValue: 32522250 false) 
	#(350 1 #liftFirstValue: 32522243 false) 
	#(350 1 #liftFirstValue: 32522244 false) 
	#(350 1 #liftFirstValue: 32522245 false) 
	#(350 1 #liftFirstValue: 32522246 false) 
	#(350 1 #liftFirstValue: 32522247 false) 
	#(350 1 #liftFirstValue: 32522248 false) 
	#(350 1 #liftFirstValue: 32522241 false) 
	#(351 1 #reduceActionForidentifier1: 32743425 false) 
	#(395 0 #reduceActionFor_____identifier__identifier___1: 37992449 false) 
	#(350 1 #liftFirstValue: 32522242 false) 
	#(353 1 #liftFirstValue: 33139714 false) 
	#(353 1 #liftFirstValue: 33139721 false) 
	#(353 1 #liftFirstValue: 33139722 false) 
	#(353 1 #liftFirstValue: 33139715 false) 
	#(353 1 #liftFirstValue: 33139716 false) 
	#(353 1 #liftFirstValue: 33139717 false) 
	#(353 1 #liftFirstValue: 33139718 false) 
	#(353 1 #liftFirstValue: 33139719 false) 
	#(353 1 #liftFirstValue: 33139720 false) 
	#(353 1 #liftFirstValue: 33139713 false) 
	#(235 2 #liftSecondValue: 13024257 false) 
	#(237 1 #liftFirstValue: 13051906 false) 
	#(444 1 #liftFirstValue: 42441730 false) 
	#(237 1 #liftFirstValue: 13051907 false) 
	#(444 1 #liftFirstValue: 42441729 false) 
	#(418 1 #reduceActionFortypeName1: 39932929 false) 
	#(142 4 #reduceActionForlibraryDefinition3: 1421315 false) 
	#(142 4 #reduceActionForlibraryDefinition3: 1421317 false) 
	#(146 2 #reduceActionFor_metadata_topLevelDefinition__2: 1558530 false) 
	#(446 1 #liftFirstValue: 42808321 false) 
	#(446 1 #liftFirstValue: 42808322 false) 
	#(446 1 #liftFirstValue: 42808324 false) 
	#(446 1 #liftFirstValue: 42808323 false) 
	#(446 1 #liftFirstValue: 42808326 false) 
	#(446 1 #liftFirstValue: 42808325 false) 
	#(409 1 #reduceActionForuri1: 39100417 false) 
	#(254 1 #liftFirstValue: 18720769 false) 
	#(399 0 #nil 38459393 false) 
	#(255 1 #liftFirstValue: 18765825 false) 
	#(411 0 #reduceActionFor_____identifier__identifier___1: 39241729 false) 
	#(393 2 #reduceActionFordottedIdentifierList1: 37936129 false) 
	#(392 4 #reduceActionForlibraryName1: 37807105 false) 
	#(444 2 #reduceActionForconstructorDesignation3: 42441731 false) 
	#(237 2 #reduceActionFormetadatum1: 13051905 false) 
	#(142 4 #reduceActionForlibraryDefinition3: 1421314 false) 
	#(142 5 #reduceActionForlibraryDefinition4: 1421316 false) 
	#(142 5 #reduceActionForlibraryDefinition4: 1421319 false) 
	#(142 5 #reduceActionForlibraryDefinition4: 1421318 false) 
	#(153 1 #liftFirstValue: 2690049 false) 
	#(416 1 #liftFirstValue: 39754754 false) 
	#(417 1 #liftFirstValue: 39832581 false) 
	#(145 2 #reduceActionFor_metadata_topLevelDefinition_1: 1558529 false) 
	#(147 1 #reduceActionFortopLevelDefinition1: 1634305 false) 
	#(147 1 #reduceActionFortopLevelDefinition2: 1634306 false) 
	#(147 1 #reduceActionFortopLevelDefinition2: 1634307 false) 
	#(147 1 #reduceActionFortopLevelDefinition2: 1634308 false) 
	#(153 1 #liftFirstValue: 2690050 false) 
	#(414 1 #reduceActionFortype3: 39546883 false) 
	#(416 1 #liftFirstValue: 39754753 false) 
	#(417 1 #liftFirstValue: 39832577 false) 
	#(147 1 #reduceActionFortopLevelDefinition2: 1634309 false) 
	#(430 1 #liftFirstValue: 40957955 false) 
	#(431 1 #liftFirstValue: 41127937 false) 
	#(414 1 #reduceActionFortype1: 39546881 false) 
	#(255 2 #liftFirstValue: 18765826 false) 
	#(410 2 #reduceActionForconfigurableUri1: 39204865 false) 
	#(395 2 #reduceActionFor_____identifier__identifier___2: 37992450 false) 
	#(352 3 #reduceActionForqualifiedName2: 32877570 false) 
	#(352 3 #reduceActionForqualifiedName1: 32877569 false) 
	#(418 3 #reduceActionFortypeName2: 39932930 false) 
	#(422 0 #reduceActionFor_____identifier__identifier___1: 40141825 false) 
	#(337 1 #liftFirstValue: 31228929 false) 
	#(281 2 #liftFirstValue: 21664769 false) 
	#(345 1 #liftFirstValue: 31850497 false) 
	#(336 1 #liftFirstValue: 31190017 false) 
	#(345 1 #liftFirstValue: 31850498 false) 
	#(338 1 #liftFirstValue: 31270913 false) 
	#(250 1 #reduceActionForbooleanLiteral2: 18472962 false) 
	#(248 1 #reduceActionFornullLiteral1: 18286593 false) 
	#(278 1 #reduceActionForthisExpression1: 21309441 false) 
	#(250 1 #reduceActionForbooleanLiteral1: 18472961 false) 
	#(249 1 #reduceActionFornumericLiteral1: 18342913 false) 
	#(249 1 #reduceActionFornumericLiteral2: 18342914 false) 
	#(447 1 #reduceActionForsingleLineString1: 43287553 false) 
	#(450 1 #reduceActionFormultiLineString1: 43888641 false) 
	#(447 1 #reduceActionForsingleLineString1: 43287554 false) 
	#(447 1 #reduceActionForsingleLineString1: 43287556 false) 
	#(450 1 #reduceActionFormultiLineString1: 43888642 false) 
	#(450 1 #reduceActionFormultiLineString1: 43888644 false) 
	#(162 1 #reduceActionForformalParameterPart1: 3699713 false) 
	#(244 0 #reduceActionFor_____identifier__identifier___1: 16118785 false) 
	#(284 0 #reduceActionFor_____identifier__identifier___1: 21779457 false) 
	#(290 0 #nil 22460417 false) 
	#(341 0 #reduceActionFor_____identifier__identifier___1: 31569921 false) 
	#(245 1 #liftFirstValue: 16956425 false) 
	#(245 1 #liftFirstValue: 16956421 false) 
	#(247 1 #liftFirstValue: 18091009 false) 
	#(247 1 #liftFirstValue: 18091011 false) 
	#(247 1 #liftFirstValue: 18091010 false) 
	#(247 1 #liftFirstValue: 18091012 false) 
	#(253 1 #reduceActionFor_multiLineString__multiLineString____singleLineString__singleLineString___1: 18613249 false) 
	#(251 1 #reduceActionForstringLiteral1: 18588673 false) 
	#(247 1 #liftFirstValue: 18091014 false) 
	#(247 1 #liftFirstValue: 18091015 false) 
	#(245 1 #liftFirstValue: 16956428 false) 
	#(238 1 #reduceActionForexpression4: 13216772 false) 
	#(245 1 #liftFirstValue: 16956420 false) 
	#(245 1 #liftFirstValue: 16956426 false) 
	#(245 1 #liftFirstValue: 16956417 false) 
	#(245 1 #liftFirstValue: 16956423 false) 
	#(245 1 #liftFirstValue: 16956424 false) 
	#(238 1 #reduceActionForexpression3: 13216771 false) 
	#(238 1 #reduceActionForexpression2: 13216770 false) 
	#(294 1 #liftFirstValue: 23307265 false) 
	#(295 1 #liftFirstValue: 23717889 false) 
	#(298 1 #liftFirstValue: 24083457 false) 
	#(301 1 #liftFirstValue: 24448001 false) 
	#(304 1 #liftFirstValue: 24962049 false) 
	#(308 1 #liftFirstValue: 25752577 false) 
	#(312 1 #liftFirstValue: 26521601 false) 
	#(315 1 #liftFirstValue: 27076609 false) 
	#(318 1 #liftFirstValue: 27604993 false) 
	#(322 1 #liftFirstValue: 28222465 false) 
	#(326 1 #liftFirstValue: 28980225 false) 
	#(330 1 #liftFirstValue: 29753345 false) 
	#(335 1 #liftFirstValue: 31087617 false) 
	#(335 1 #liftFirstValue: 31087618 false) 
	#(335 1 #liftFirstValue: 31087619 false) 
	#(334 1 #liftFirstValue: 30686210 false) 
	#(334 1 #liftFirstValue: 30686211 false) 
	#(245 1 #liftFirstValue: 16956422 false) 
	#(346 1 #reduceActionForassignableExpression3: 31909891 false) 
	#(247 1 #liftFirstValue: 18091013 false) 
	#(252 1 #reduceActionForimportOrExport2: 18613250 false) 
	#(252 1 #reduceActionForimportOrExport1: 18613249 false) 
	#(142 6 #reduceActionForlibraryDefinition8: 1421320 false) 
	#(182 2 #reduceActionForclassDeclaration17: 5877777 false) 
	#(181 1 #reduceActionFortypeWithParameters1: 5779457 false) 
	#(202 0 #reduceActionFor_____identifier__identifier___1: 9544705 false) 
	#(152 1 #liftFirstValue: 2619393 false) 
	#(152 1 #liftFirstValue: 2619395 false) 
	#(417 2 #liftFirstValue: 39832582 false) 
	#(429 2 #reduceActionForfunctionTypeTail1: 40814593 false) 
	#(207 2 #reduceActionForgetterSignature1: 10205185 false) 
	#(428 1 #liftFirstValue: 40700930 false) 
	#(426 2 #liftSecondValue: 40378371 false) 
	#(149 0 #nil 2306049 false) 
	#(360 0 #reduceActionFor_____identifier__identifier___1: 33831937 false) 
	#(147 2 #reduceActionFortopLevelDefinition2: 1634316 false) 
	#(160 1 #reduceActionForfunctionBody2: 3329026 false) 
	#(147 2 #reduceActionFortopLevelDefinition2: 1634314 false) 
	#(147 2 #reduceActionFortopLevelDefinition2: 1634315 false) 
	#(158 2 #reduceActionForfunctionSignature1: 3051521 false) 
	#(431 2 #reduceActionForfunctionType2: 41127938 false) 
	#(417 2 #liftFirstValue: 39832578 false) 
	#(417 2 #liftFirstValue: 39832579 false) 
	#(430 2 #reduceActionForfunctionTypeTails1: 40957953 false) 
	#(414 2 #reduceActionFortype1: 39546882 false) 
	#(405 4 #reduceActionForpartDirective1: 38810625 false) 
	#(404 5 #reduceActionForlibraryExport1: 38713345 false) 
	#(399 2 #liftFirstValue: 38459394 false) 
	#(411 2 #reduceActionFor_____identifier__identifier___2: 39241730 false) 
	#(398 4 #reduceActionForimportSpecification1: 38339585 false) 
	#(394 2 #liftSecondValue: 37992449 false) 
	#(420 2 #reduceActionFortypeList1: 40110081 false) 
	#(419 3 #liftSecondValue: 40057857 false) 
	#(444 4 #reduceActionForconstructorDesignation3: 42441733 false) 
	#(444 4 #reduceActionForconstructorDesignation4: 42441732 false) 
	#(333 1 #liftFirstValue: 30106627 false) 
	#(321 1 #liftFirstValue: 27847681 false) 
	#(333 1 #liftFirstValue: 30106625 false) 
	#(329 1 #liftFirstValue: 29355009 false) 
	#(329 1 #liftFirstValue: 29355010 false) 
	#(333 1 #liftFirstValue: 30106626 false) 
	#(311 1 #liftFirstValue: 26152964 false) 
	#(325 1 #liftFirstValue: 28535809 false) 
	#(311 1 #liftFirstValue: 26152963 false) 
	#(206 1 #liftFirstValue: 10021893 false) 
	#(311 1 #liftFirstValue: 26152962 false) 
	#(321 1 #liftFirstValue: 27847682 false) 
	#(321 1 #liftFirstValue: 27847683 false) 
	#(205 1 #liftFirstValue: 9921537 false) 
	#(333 1 #liftFirstValue: 30106628 false) 
	#(445 2 #reduceActionForsymbolLiteral3: 42656771 false) 
	#(445 2 #reduceActionForsymbolLiteral1: 42656769 false) 
	#(205 1 #liftFirstValue: 9921538 false) 
	#(206 1 #liftFirstValue: 10021892 false) 
	#(206 1 #liftFirstValue: 10021894 false) 
	#(206 1 #liftFirstValue: 10021891 false) 
	#(206 1 #liftFirstValue: 10021890 false) 
	#(206 1 #liftFirstValue: 10021889 false) 
	#(163 2 #liftFirstValue: 3842049 false) 
	#(167 1 #liftFirstValue: 4245505 false) 
	#(167 1 #liftFirstValue: 4245506 false) 
	#(166 0 #reduceActionFor_____identifier__identifier___1: 4149249 false) 
	#(233 0 #reduceActionFor_____identifier__identifier___1: 12929025 false) 
	#(257 2 #reduceActionForlistLiteral1: 18946049 false) 
	#(262 1 #reduceActionForexpressionElement1: 19414017 false) 
	#(260 0 #reduceActionFor_____identifier__identifier___1: 19097601 false) 
	#(261 1 #reduceActionForelement1: 19156993 false) 
	#(261 1 #reduceActionForelement2: 19156994 false) 
	#(261 1 #reduceActionForelement3: 19156995 false) 
	#(261 1 #reduceActionForelement4: 19156996 false) 
	#(261 1 #reduceActionForelement5: 19156997 false) 
	#(307 1 #liftFirstValue: 25305090 false) 
	#(307 1 #liftFirstValue: 25305089 false) 
	#(344 1 #liftFirstValue: 31791105 false) 
	#(245 2 #reduceActionForprimary3: 16956419 false) 
	#(245 2 #reduceActionForprimary2: 16956418 false) 
	#(346 2 #reduceActionForassignableExpression2: 31909890 false) 
	#(268 2 #reduceActionForthrowExpression1: 19840001 false) 
	#(339 2 #reduceActionForawaitExpression1: 31309825 false) 
	#(449 0 #reduceActionFor_____identifier__identifier___1: 43503617 false) 
	#(452 0 #reduceActionFor_____identifier__identifier___1: 44098561 false) 
	#(256 2 #reduceActionForsetOrMapLiteral1: 18810881 false) 
	#(276 1 #liftFirstValue: 20965377 false) 
	#(270 2 #reduceActionForfunctionExpression1: 20020225 false) 
	#(275 2 #liftFirstValue: 20887553 false) 
	#(162 2 #reduceActionForformalParameterPart2: 3699714 false) 
	#(242 2 #reduceActionForexpressionList1: 16063489 false) 
	#(282 2 #reduceActionForargumentList2: 21725186 false) 
	#(340 2 #reduceActionForpostfixExpression2: 31410178 false) 
	#(346 2 #reduceActionForassignableExpression1: 31909889 false) 
	#(253 2 #reduceActionForimportOrExport_2: 18613250 false) 
	#(281 3 #liftSecondValue: 21664770 false) 
	#(282 2 #reduceActionForargumentList1: 21725185 false) 
	#(297 1 #reduceActionFor______logicalOrExpression__logicalOrExpression___1: 23816193 false) 
	#(295 2 #reduceActionForifNullExpression2: 23717890 false) 
	#(300 1 #reduceActionFor______logicalOrExpression__logicalOrExpression___1: 24188929 false) 
	#(298 2 #reduceActionForlogicalOrExpression2: 24083458 false) 
	#(303 1 #reduceActionFor______logicalOrExpression__logicalOrExpression___1: 24548353 false) 
	#(301 2 #reduceActionForlogicalAndExpression2: 24448002 false) 
	#(306 1 #reduceActionFor_multiLineString__multiLineString____singleLineString__singleLineString___1: 25067521 false) 
	#(304 2 #reduceActionForequalityExpression2: 24962050 false) 
	#(355 1 #liftFirstValue: 33464321 false) 
	#(357 1 #liftFirstValue: 33559553 false) 
	#(310 1 #reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression___1: 25865217 false) 
	#(308 2 #reduceActionForrelationalExpression2: 25752578 false) 
	#(309 1 #reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression__1: 25865217 false) 
	#(309 1 #reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression__2: 25865218 false) 
	#(314 1 #reduceActionFor______logicalOrExpression__logicalOrExpression___1: 26627073 false) 
	#(312 2 #reduceActionForbitwiseOrExpression2: 26521602 false) 
	#(317 1 #reduceActionFor______logicalOrExpression__logicalOrExpression___1: 27182081 false) 
	#(315 2 #reduceActionForbitwiseXorExpression2: 27076610 false) 
	#(320 1 #reduceActionFor______logicalOrExpression__logicalOrExpression___1: 27696129 false) 
	#(318 2 #reduceActionForbitwiseAndExpression2: 27604994 false) 
	#(324 1 #reduceActionFor_multiLineString__multiLineString____singleLineString__singleLineString___1: 28317697 false) 
	#(322 2 #reduceActionForshiftExpression2: 28222466 false) 
	#(328 1 #reduceActionFor_multiLineString__multiLineString____singleLineString__singleLineString___1: 29096961 false) 
	#(326 2 #reduceActionForadditiveExpression2: 28980226 false) 
	#(332 1 #reduceActionFor_multiLineString__multiLineString____singleLineString__singleLineString___1: 29848577 false) 
	#(330 2 #reduceActionFormultiplicativeExpression2: 29753346 false) 
	#(334 2 #reduceActionForunaryExpression1: 30686209 false) 
	#(334 2 #reduceActionForunaryExpression4: 30686212 false) 
	#(334 2 #reduceActionForunaryExpression5: 30686213 false) 
	#(334 2 #reduceActionForunaryExpression6: 30686214 false) 
	#(293 1 #liftFirstValue: 22779908 false) 
	#(293 1 #liftFirstValue: 22779914 false) 
	#(293 1 #liftFirstValue: 22779905 false) 
	#(293 1 #liftFirstValue: 22779909 false) 
	#(293 1 #liftFirstValue: 22779910 false) 
	#(293 1 #liftFirstValue: 22779906 false) 
	#(293 1 #liftFirstValue: 22779911 false) 
	#(292 1 #reduceActionForassignmentOperator1: 22605825 false) 
	#(293 1 #liftFirstValue: 22779917 false) 
	#(293 1 #liftFirstValue: 22779915 false) 
	#(293 1 #liftFirstValue: 22779916 false) 
	#(293 1 #liftFirstValue: 22779907 false) 
	#(292 1 #reduceActionForassignmentOperator2: 22605826 false) 
	#(340 2 #reduceActionForpostfixExpression1: 31410177 false) 
	#(342 1 #liftFirstValue: 31624193 false) 
	#(385 2 #reduceActionForlabel1: 37148673 false) 
	#(285 2 #reduceActionFornamedArgument1: 21943297 false) 
	#(279 2 #reduceActionFornewExpression1: 21371905 false) 
	#(184 0 #reduceActionForimportOrExport_1: 6053889 false) 
	#(181 2 #reduceActionFortypeWithParameters1: 5779458 false) 
	#(147 3 #reduceActionFortopLevelDefinition2: 1634319 false) 
	#(200 2 #reduceActionForstaticFinalDeclarationList1: 9457665 false) 
	#(147 3 #reduceActionFortopLevelDefinition2: 1634317 false) 
	#(182 3 #reduceActionForclassDeclaration18: 5877778 false) 
	#(152 2 #liftSecondValue: 2619394 false) 
	#(403 0 #reduceActionFor_____identifier__identifier___1: 38647809 false) 
	#(147 3 #reduceActionFortopLevelDefinition2: 1634310 false) 
	#(147 3 #reduceActionFortopLevelDefinition2: 1634311 false) 
	#(147 3 #reduceActionFortopLevelDefinition2: 1634312 false) 
	#(432 2 #liftFirstValue: 41281537 false) 
	#(435 0 #reduceActionFor_____identifier__identifier___1: 41558017 false) 
	#(437 1 #liftFirstValue: 41836545 false) 
	#(437 1 #liftFirstValue: 41836546 false) 
	#(429 3 #reduceActionForfunctionTypeTail2: 40814594 false) 
	#(157 0 #reduceActionFor_____identifier__identifier___1: 2952193 false) 
	#(154 1 #reduceActionForinitializedIdentifier1: 2742273 false) 
	#(192 0 #nil 6967297 false) 
	#(208 3 #reduceActionForsetterSignature1: 10306561 false) 
	#(428 2 #reduceActionForfunctionPrefix1: 40700929 false) 
	#(160 2 #reduceActionForfunctionBody4: 3329028 false) 
	#(161 2 #reduceActionForblock1: 3618817 false) 
	#(358 1 #reduceActionForstatements1: 33688577 false) 
	#(207 3 #reduceActionForgetterSignature2: 10205186 false) 
	#(158 3 #reduceActionForfunctionSignature2: 3051522 false) 
	#(417 3 #liftFirstValue: 39832580 false) 
	#(430 3 #reduceActionForfunctionTypeTails2: 40957954 false) 
	#(400 2 #liftSecondValue: 38510594 false) 
	#(400 2 #liftSecondValue: 38510593 false) 
	#(352 5 #reduceActionForqualifiedName4: 32877572 false) 
	#(352 5 #reduceActionForqualifiedName3: 32877571 false) 
	#(422 2 #reduceActionFor_____identifier__identifier___2: 40141826 false) 
	#(311 2 #liftFirstValue: 26152961 false) 
	#(325 2 #liftFirstValue: 28535811 false) 
	#(205 2 #liftFirstValue: 9921539 false) 
	#(445 3 #reduceActionForsymbolLiteral2: 42656770 false) 
	#(179 1 #liftFirstValue: 5590017 false) 
	#(170 0 #reduceActionFor_____identifier__identifier___1: 4466689 false) 
	#(180 1 #liftFirstValue: 5675009 false) 
	#(173 0 #reduceActionFor_____identifier__identifier___1: 4671489 false) 
	#(163 3 #liftSecondValue: 3842050 false) 
	#(163 3 #liftSecondValue: 3842053 false) 
	#(164 2 #reduceActionFornormalFormalParameters1: 4068353 false) 
	#(151 1 #liftFirstValue: 2502661 false) 
	#(151 1 #liftFirstValue: 2502657 false) 
	#(177 1 #liftFirstValue: 5278721 false) 
	#(151 1 #liftFirstValue: 2502663 false) 
	#(174 2 #reduceActionFornormalFormalParameter1: 4781057 false) 
	#(175 1 #liftFirstValue: 4938753 false) 
	#(175 1 #liftFirstValue: 4938755 false) 
	#(175 1 #liftFirstValue: 4938754 false) 
	#(177 1 #liftFirstValue: 5278722 false) 
	#(245 3 #reduceActionForprimary11: 16956427 false) 
	#(230 2 #reduceActionFortypeParameter1: 12722177 false) 
	#(264 2 #liftSecondValue: 19552257 false) 
	#(264 2 #liftSecondValue: 19552258 false) 
	#(257 3 #reduceActionForlistLiteral2: 18946050 false) 
	#(258 2 #reduceActionForelements1: 19062785 false) 
	#(257 3 #reduceActionForlistLiteral1: 18946053 false) 
	#(256 3 #reduceActionForsetOrMapLiteral1: 18810885 false) 
	#(280 3 #reduceActionForconstObjectExpression1: 21515265 false) 
	#(279 3 #reduceActionFornewExpression2: 21371906 false) 
	#(318 3 #reduceActionForbitwiseAndExpression3: 27604995 false) 
	#(348 2 #liftSecondValue: 32290818 false) 
	#(315 3 #reduceActionForbitwiseXorExpression3: 27076611 false) 
	#(312 3 #reduceActionForbitwiseOrExpression3: 26521603 false) 
	#(304 3 #reduceActionForequalityExpression3: 24962051 false) 
	#(308 3 #reduceActionForrelationalExpression3: 25752579 false) 
	#(322 3 #reduceActionForshiftExpression3: 28222467 false) 
	#(326 3 #reduceActionForadditiveExpression3: 28980227 false) 
	#(330 3 #reduceActionFormultiplicativeExpression3: 29753347 false) 
	#(344 2 #liftFirstValue: 31791106 false) 
	#(256 3 #reduceActionForsetOrMapLiteral2: 18810882 false) 
	#(271 2 #liftSecondValue: 20175873 false) 
	#(276 2 #liftSecondValue: 20965378 false) 
	#(244 2 #reduceActionFor_____identifier__identifier___2: 16118786 false) 
	#(284 2 #reduceActionFor_____identifier__identifier___2: 21779458 false) 
	#(343 1 #liftFirstValue: 31679489 false) 
	#(290 2 #liftFirstValue: 22460418 false) 
	#(343 1 #liftFirstValue: 31679491 false) 
	#(349 1 #liftFirstValue: 32389121 false) 
	#(347 2 #liftFirstValue: 32217089 false) 
	#(343 1 #liftFirstValue: 31679490 false) 
	#(343 1 #liftFirstValue: 31679492 false) 
	#(341 2 #reduceActionFor_____identifier__identifier___2: 31569922 false) 
	#(281 4 #liftSecondValue: 21664771 false) 
	#(286 3 #reduceActionForcascade1: 22035457 false) 
	#(288 1 #liftFirstValue: 22324226 false) 
	#(286 3 #reduceActionForcascade3: 22035459 false) 
	#(286 3 #reduceActionForcascade3: 22035458 false) 
	#(240 1 #liftFirstValue: 15591425 false) 
	#(240 1 #liftFirstValue: 15591428 false) 
	#(240 1 #liftFirstValue: 15591426 false) 
	#(240 1 #liftFirstValue: 15591427 false) 
	#(296 2 #liftSecondValue: 23816193 false) 
	#(297 2 #reduceActionFor_____identifier__identifier___2: 23816194 false) 
	#(299 2 #liftSecondValue: 24188929 false) 
	#(300 2 #reduceActionFor_____identifier__identifier___2: 24188930 false) 
	#(302 2 #liftSecondValue: 24548353 false) 
	#(303 2 #reduceActionFor_____identifier__identifier___2: 24548354 false) 
	#(306 2 #reduceActionForimportOrExport_2: 25067522 false) 
	#(305 2 #reduceActionFor_equalityOperator__equalityOperator__relationalExpression__relationalExpression__1: 25067521 false) 
	#(355 2 #liftFirstValue: 33464322 false) 
	#(310 2 #reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression___2: 25865218 false) 
	#(309 2 #reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression__3: 25865219 false) 
	#(354 2 #liftFirstValue: 33411073 false) 
	#(415 1 #liftFirstValue: 39669763 false) 
	#(415 1 #liftFirstValue: 39669761 false) 
	#(356 2 #liftFirstValue: 33506305 false) 
	#(313 2 #liftSecondValue: 26627073 false) 
	#(314 2 #reduceActionFor_____identifier__identifier___2: 26627074 false) 
	#(316 2 #liftSecondValue: 27182081 false) 
	#(317 2 #reduceActionFor_____identifier__identifier___2: 27182082 false) 
	#(319 2 #liftSecondValue: 27696129 false) 
	#(320 2 #reduceActionFor_____identifier__identifier___2: 27696130 false) 
	#(324 2 #reduceActionForimportOrExport_2: 28317698 false) 
	#(323 2 #reduceActionFor_equalityOperator__equalityOperator__relationalExpression__relationalExpression__1: 28317697 false) 
	#(328 2 #reduceActionForimportOrExport_2: 29096962 false) 
	#(327 2 #reduceActionFor_equalityOperator__equalityOperator__relationalExpression__relationalExpression__1: 29096961 false) 
	#(332 2 #reduceActionForimportOrExport_2: 29848578 false) 
	#(331 2 #reduceActionFor_equalityOperator__equalityOperator__relationalExpression__relationalExpression__1: 29848577 false) 
	#(238 3 #reduceActionForexpression1: 13216769 false) 
	#(267 3 #liftFirstValue: 19765249 false) 
	#(257 3 #reduceActionForlistLiteral3: 18946051 false) 
	#(256 3 #reduceActionForsetOrMapLiteral3: 18810883 false) 
	#(185 2 #liftSecondValue: 6264833 false) 
	#(425 0 #reduceActionFor_____identifier__identifier___1: 40275969 false) 
	#(186 2 #liftSecondValue: 6330369 false) 
	#(187 2 #liftSecondValue: 6392833 false) 
	#(202 2 #reduceActionFor_____identifier__identifier___2: 9544706 false) 
	#(203 3 #reduceActionForstaticFinalDeclaration1: 9647105 false) 
	#(147 4 #reduceActionFortopLevelDefinition2: 1634320 false) 
	#(224 0 #nil 12343297 false) 
	#(147 4 #reduceActionFortopLevelDefinition2: 1634318 false) 
	#(196 0 #nil 7191553 false) 
	#(401 2 #reduceActionForidentifierList1: 38597633 false) 
	#(147 4 #reduceActionFortopLevelDefinition2: 1634313 false) 
	#(441 0 #reduceActionFor_____identifier__identifier___1: 42115073 false) 
	#(436 2 #reduceActionFornormalParameterType2: 41648130 false) 
	#(436 2 #reduceActionFornormalParameterType1: 41648129 false) 
	#(432 3 #liftSecondValue: 41281539 false) 
	#(433 2 #reduceActionFornormalParameterTypes1: 41483265 false) 
	#(432 3 #liftSecondValue: 41281541 false) 
	#(155 2 #reduceActionForinitializedIdentifierList1: 2868225 false) 
	#(147 4 #reduceActionFortopLevelDefinition2: 1634321 false) 
	#(427 3 #reduceActionForfunctionTypeAlias1: 40559617 false) 
	#(147 4 #reduceActionFortopLevelDefinition2: 1634323 false) 
	#(149 2 #liftFirstValue: 2306050 false) 
	#(160 3 #reduceActionForfunctionBody1: 3329025 false) 
	#(160 3 #reduceActionForfunctionBody5: 3329029 false) 
	#(160 3 #reduceActionForfunctionBody5: 3329030 false) 
	#(161 3 #reduceActionForblock2: 3618818 false) 
	#(358 2 #reduceActionForstatements2: 33688578 false) 
	#(362 1 #liftFirstValue: 34538497 false) 
	#(361 1 #liftFirstValue: 33927169 false) 
	#(359 2 #reduceActionForstatement1: 33811457 false) 
	#(361 1 #liftFirstValue: 33927185 false) 
	#(361 1 #liftFirstValue: 33927170 false) 
	#(361 1 #liftFirstValue: 33927181 false) 
	#(361 1 #liftFirstValue: 33927175 false) 
	#(361 1 #liftFirstValue: 33927171 false) 
	#(361 1 #liftFirstValue: 33927172 false) 
	#(361 1 #liftFirstValue: 33927173 false) 
	#(361 1 #liftFirstValue: 33927174 false) 
	#(361 1 #liftFirstValue: 33927176 false) 
	#(361 1 #liftFirstValue: 33927177 false) 
	#(361 1 #liftFirstValue: 33927180 false) 
	#(360 2 #reduceActionFor_____identifier__identifier___2: 33831938 false) 
	#(361 1 #liftFirstValue: 33927178 false) 
	#(361 1 #liftFirstValue: 33927179 false) 
	#(361 1 #liftFirstValue: 33927183 false) 
	#(361 1 #liftFirstValue: 33927184 false) 
	#(361 1 #liftFirstValue: 33927182 false) 
	#(208 4 #reduceActionForsetterSignature2: 10306562 false) 
	#(413 1 #reduceActionForuriTest1: 39421953 false) 
	#(398 6 #reduceActionForimportSpecification2: 38339586 false) 
	#(421 2 #liftSecondValue: 40141825 false) 
	#(325 3 #liftFirstValue: 28535810 false) 
	#(205 3 #liftFirstValue: 9921540 false) 
	#(180 2 #liftSecondValue: 5675012 false) 
	#(163 4 #liftSecondValue: 3842051 false) 
	#(166 2 #reduceActionFor_____identifier__identifier___2: 4149250 false) 
	#(151 2 #liftSecondValue: 2502662 false) 
	#(151 2 #liftSecondValue: 2502658 false) 
	#(177 2 #liftSecondValue: 5278723 false) 
	#(151 2 #liftFirstValue: 2502659 false) 
	#(151 2 #liftSecondValue: 2502664 false) 
	#(150 2 #reduceActionFordeclaredIdentifier1: 2350081 false) 
	#(176 2 #reduceActionForfunctionFormalParameter1: 5083137 false) 
	#(231 4 #reduceActionFortypeParameters1: 12868609 false) 
	#(233 2 #reduceActionFor_____identifier__identifier___2: 12929026 false) 
	#(371 1 #reduceActionForforInitializerStatement2: 35628034 false) 
	#(371 1 #reduceActionForforInitializerStatement2: 35628033 false) 
	#(263 3 #liftFirstValue: 19496961 false) 
	#(258 3 #reduceActionForelements1: 19062786 false) 
	#(260 2 #reduceActionFor_____identifier__identifier___2: 19097602 false) 
	#(257 4 #reduceActionForlistLiteral6: 18946054 false) 
	#(256 4 #reduceActionForsetOrMapLiteral6: 18810886 false) 
	#(257 4 #reduceActionForlistLiteral7: 18946055 false) 
	#(256 4 #reduceActionForsetOrMapLiteral7: 18810887 false) 
	#(348 3 #liftSecondValue: 32290817 false) 
	#(447 4 #reduceActionForsingleLineString3: 43287555 false) 
	#(449 2 #reduceActionFor_____identifier__identifier___2: 43503618 false) 
	#(447 4 #reduceActionForsingleLineString3: 43287557 false) 
	#(450 4 #reduceActionFormultiLineString3: 43888643 false) 
	#(452 2 #reduceActionFor_____identifier__identifier___2: 44098562 false) 
	#(450 4 #reduceActionFormultiLineString3: 43888645 false) 
	#(276 3 #reduceActionForfunctionPrimaryBody3: 20965379 false) 
	#(271 3 #reduceActionForfunctionPrimaryBody3: 20175874 false) 
	#(276 3 #reduceActionForfunctionPrimaryBody3: 20965380 false) 
	#(243 2 #liftSecondValue: 16118785 false) 
	#(283 2 #liftSecondValue: 21779457 false) 
	#(349 2 #liftSecondValue: 32389122 false) 
	#(287 2 #liftFirstValue: 22252545 false) 
	#(289 1 #liftFirstValue: 22402050 false) 
	#(289 1 #liftFirstValue: 22402049 false) 
	#(269 2 #liftSecondValue: 19935233 false) 
	#(273 2 #liftFirstValue: 20475905 false) 
	#(415 2 #liftFirstValue: 39669762 false) 
	#(293 3 #liftFirstValue: 22779913 false) 
	#(246 4 #reduceActionForconstructorInvocation2: 17446914 false) 
	#(267 4 #liftFirstValue: 19765250 false) 
	#(257 4 #reduceActionForlistLiteral4: 18946052 false) 
	#(256 4 #reduceActionForsetOrMapLiteral4: 18810884 false) 
	#(189 4 #reduceActionFormixinApplicationClass1: 6666241 false) 
	#(221 2 #reduceActionFormixinApplication1: 12084225 false) 
	#(423 2 #reduceActionFortypeNotVoidNotFunctionList1: 40188929 false) 
	#(182 5 #reduceActionForclassDeclaration1: 5877761 false) 
	#(184 2 #reduceActionForimportOrExport_2: 6053890 false) 
	#(201 2 #liftSecondValue: 9544705 false) 
	#(226 0 #nil 12378113 false) 
	#(229 2 #reduceActionForenumEntry1: 12449793 false) 
	#(403 2 #reduceActionFor_____identifier__identifier___2: 38647810 false) 
	#(438 3 #liftSecondValue: 41945089 false) 
	#(442 2 #reduceActionFornamedParameterType1: 42216449 false) 
	#(443 2 #reduceActionFortypedIdentifier1: 42347521 false) 
	#(432 4 #liftSecondValue: 41281540 false) 
	#(435 2 #reduceActionFor_____identifier__identifier___2: 41558018 false) 
	#(157 2 #reduceActionFor_____identifier__identifier___2: 2952194 false) 
	#(154 3 #reduceActionForinitializedIdentifier2: 2742274 false) 
	#(147 5 #reduceActionFortopLevelDefinition2: 1634322 false) 
	#(147 5 #reduceActionFortopLevelDefinition2: 1634325 false) 
	#(190 5 #liftSecondValue: 6821889 false) 
	#(192 2 #liftFirstValue: 6967298 false) 
	#(426 5 #reduceActionFortypeAlias1: 40378369 false) 
	#(148 2 #liftSecondValue: 2306049 false) 
	#(160 4 #reduceActionForfunctionBody3: 3329027 false) 
	#(386 2 #reduceActionForbreakStatement1: 37219329 false) 
	#(387 2 #reduceActionForcontinueStatement1: 37299201 false) 
	#(378 2 #reduceActionForrethrowStatement1: 36404225 false) 
	#(384 2 #reduceActionForreturnStatement1: 37046273 false) 
	#(366 0 #reduceActionFor_____identifier__identifier___1: 34887681 false) 
	#(362 2 #liftFirstValue: 34538498 false) 
	#(390 2 #reduceActionForassertStatement1: 37599233 false) 
	#(398 7 #reduceActionForimportSpecification3: 38339587 false) 
	#(179 3 #liftFirstValue: 5590018 false) 
	#(168 4 #reduceActionForoptionalPositionalFormalParameters1: 4367361 false) 
	#(170 2 #reduceActionFor_____identifier__identifier___2: 4466690 false) 
	#(180 3 #liftFirstValue: 5675010 false) 
	#(180 3 #liftFirstValue: 5675011 false) 
	#(171 4 #reduceActionFornamedFormalParameters1: 4582401 false) 
	#(173 2 #reduceActionFor_____identifier__identifier___2: 4671490 false) 
	#(163 5 #liftSecondValue: 3842052 false) 
	#(165 2 #liftSecondValue: 4149249 false) 
	#(178 3 #reduceActionForfieldFormalParameter1: 5391361 false) 
	#(150 3 #reduceActionFordeclaredIdentifier2: 2350082 false) 
	#(176 3 #reduceActionForfunctionFormalParameter5: 5083141 false) 
	#(151 3 #reduceActionForfunctionPrimaryBody3: 2502660 false) 
	#(176 3 #reduceActionForfunctionFormalParameter1: 5083138 false) 
	#(176 3 #reduceActionForfunctionFormalParameter3: 5083139 false) 
	#(232 2 #liftSecondValue: 12929025 false) 
	#(230 4 #reduceActionFortypeParameter2: 12722178 false) 
	#(371 2 #reduceActionForforInitializerStatement3: 35628035 false) 
	#(370 2 #reduceActionForforLoopParts3: 35430403 false) 
	#(259 2 #liftSecondValue: 19097601 false) 
	#(257 5 #reduceActionForlistLiteral8: 18946056 false) 
	#(256 5 #reduceActionForsetOrMapLiteral8: 18810888 false) 
	#(448 2 #liftSecondValue: 43503617 false) 
	#(451 2 #liftSecondValue: 44098561 false) 
	#(288 3 #liftSecondValue: 22324225 false) 
	#(291 2 #liftFirstValue: 22521857 false) 
	#(274 2 #liftSecondValue: 20588545 false) 
	#(294 5 #reduceActionForconditionalExpression2: 23307266 false) 
	#(241 3 #reduceActionForassignableExpressionWithoutCascadeWithOperator1: 15804417 false) 
	#(293 4 #liftFirstValue: 22779912 false) 
	#(246 5 #reduceActionForconstructorInvocation1: 17446913 false) 
	#(221 3 #reduceActionFormixinApplication2: 12084226 false) 
	#(425 2 #reduceActionFor_____identifier__identifier___2: 40275970 false) 
	#(199 1 #liftFirstValue: 7784458 false) 
	#(198 1 #reduceActionFormethodSignature3: 7321603 false) 
	#(183 2 #reduceActionFor_equalityOperator__equalityOperator__relationalExpression__relationalExpression__1: 6053889 false) 
	#(199 1 #liftFirstValue: 7784466 false) 
	#(198 1 #liftFirstValue: 7321609 false) 
	#(199 1 #liftFirstValue: 7784452 false) 
	#(198 1 #reduceActionFormethodSignature5: 7321605 false) 
	#(199 1 #liftFirstValue: 7784455 false) 
	#(198 1 #reduceActionFormethodSignature7: 7321607 false) 
	#(199 1 #reduceActionFordeclaration42: 7784490 false) 
	#(198 1 #liftFirstValue: 7321610 false) 
	#(198 1 #liftFirstValue: 7321602 false) 
	#(199 1 #liftFirstValue: 7784486 false) 
	#(199 1 #reduceActionFordeclaration39: 7784487 false) 
	#(210 1 #reduceActionForconstructorName1: 10596353 false) 
	#(182 6 #reduceActionForclassDeclaration5: 5877765 false) 
	#(182 6 #reduceActionForclassDeclaration3: 5877763 false) 
	#(182 6 #reduceActionForclassDeclaration2: 5877762 false) 
	#(228 0 #nil 12383233 false) 
	#(224 2 #liftFirstValue: 12343298 false) 
	#(226 1 #liftFirstValue: 12378114 false) 
	#(229 3 #reduceActionForenumEntry2: 12449794 false) 
	#(182 6 #reduceActionForclassDeclaration9: 5877769 false) 
	#(194 6 #reduceActionForfunctionPrimaryBody3: 7089153 false) 
	#(196 2 #liftFirstValue: 7191554 false) 
	#(402 2 #liftSecondValue: 38647809 false) 
	#(438 4 #liftSecondValue: 41945090 false) 
	#(442 3 #reduceActionFornamedParameterType2: 42216450 false) 
	#(439 4 #reduceActionFornamedParameterTypes1: 42034177 false) 
	#(441 2 #reduceActionFor_____identifier__identifier___2: 42115074 false) 
	#(432 5 #liftSecondValue: 41281538 false) 
	#(434 2 #liftSecondValue: 41558017 false) 
	#(156 2 #liftSecondValue: 2952193 false) 
	#(193 1 #liftFirstValue: 7023617 false) 
	#(191 2 #liftFirstValue: 6967297 false) 
	#(190 6 #liftSecondValue: 6821890 false) 
	#(190 6 #liftSecondValue: 6821893 false) 
	#(426 6 #reduceActionFortypeAlias2: 40378370 false) 
	#(147 6 #reduceActionFortopLevelDefinition20: 1634324 false) 
	#(386 3 #reduceActionForbreakStatement1: 37219330 false) 
	#(387 3 #reduceActionForcontinueStatement1: 37299202 false) 
	#(384 3 #reduceActionForreturnStatement2: 37046274 false) 
	#(381 1 #liftFirstValue: 36793346 false) 
	#(379 3 #reduceActionFortryStatement1: 36477953 false) 
	#(379 3 #reduceActionFortryStatement3: 36477955 false) 
	#(388 3 #reduceActionForyieldStatement1: 37388289 false) 
	#(364 2 #reduceActionForinitializedVariableDeclaration1: 34762753 false) 
	#(367 3 #reduceActionForlocalFunctionDeclaration1: 34988033 false) 
	#(363 3 #reduceActionForlocalVariableDeclaration1: 34596865 false) 
	#(413 3 #reduceActionForuriTest2: 39421954 false) 
	#(412 5 #reduceActionForconfigurationUri1: 39310337 false) 
	#(168 5 #reduceActionForoptionalPositionalFormalParameters1: 4367362 false) 
	#(169 2 #liftSecondValue: 4466689 false) 
	#(180 4 #liftSecondValue: 5675013 false) 
	#(180 4 #liftSecondValue: 5675014 false) 
	#(171 5 #reduceActionFornamedFormalParameters1: 4582402 false) 
	#(172 2 #liftSecondValue: 4671489 false) 
	#(178 4 #reduceActionForfieldFormalParameter2: 5391362 false) 
	#(176 4 #reduceActionForfunctionFormalParameter5: 5083142 false) 
	#(176 4 #reduceActionForfunctionFormalParameter7: 5083143 false) 
	#(178 4 #reduceActionForfieldFormalParameter4: 5391364 false) 
	#(176 4 #reduceActionForfunctionFormalParameter3: 5083140 false) 
	#(266 5 #reduceActionForfunctionPrimaryBody3: 19691521 false) 
	#(370 3 #reduceActionForforLoopParts3: 35430404 false) 
	#(370 3 #reduceActionForforLoopParts5: 35430405 false) 
	#(265 5 #reduceActionForfunctionPrimaryBody3: 19612673 false) 
	#(349 4 #reduceActionForfunctionPrimaryBody3: 32389123 false) 
	#(289 3 #liftFirstValue: 22402051 false) 
	#(274 3 #reduceActionForfunctionPrimaryBody3: 20588546 false) 
	#(424 2 #liftSecondValue: 40275969 false) 
	#(199 2 #reduceActionFordeclaration32: 7784480 false) 
	#(199 2 #liftSecondValue: 7784459 false) 
	#(199 2 #liftSecondValue: 7784467 false) 
	#(199 2 #liftSecondValue: 7784453 false) 
	#(199 2 #liftSecondValue: 7784456 false) 
	#(199 2 #liftSecondValue: 7784451 false) 
	#(199 2 #liftSecondValue: 7784449 false) 
	#(199 2 #liftSecondValue: 7784450 false) 
	#(198 2 #reduceActionFormethodSignature4: 7321604 false) 
	#(198 2 #reduceActionFormethodSignature6: 7321606 false) 
	#(198 2 #reduceActionFormethodSignature8: 7321608 false) 
	#(199 2 #reduceActionFordeclaration34: 7784482 false) 
	#(188 2 #reduceActionForclassMemberDefinition1: 6465537 false) 
	#(188 2 #reduceActionForclassMemberDefinition2: 6465538 false) 
	#(199 2 #reduceActionFordeclaration43: 7784491 false) 
	#(199 2 #reduceActionFordeclaration44: 7784492 false) 
	#(198 2 #reduceActionFormethodSignature1: 7321601 false) 
	#(209 2 #reduceActionForconstructorSignature1: 10450945 false) 
	#(199 2 #reduceActionFordeclaration40: 7784488 false) 
	#(199 2 #reduceActionFordeclaration41: 7784489 false) 
	#(182 7 #reduceActionForclassDeclaration7: 5877767 false) 
	#(182 7 #reduceActionForclassDeclaration6: 5877766 false) 
	#(182 7 #reduceActionForclassDeclaration4: 5877764 false) 
	#(223 2 #liftSecondValue: 12343297 false) 
	#(225 2 #liftSecondValue: 12378113 false) 
	#(222 7 #liftSecondValue: 12234753 false) 
	#(182 7 #reduceActionForclassDeclaration13: 5877773 false) 
	#(182 7 #reduceActionForclassDeclaration11: 5877771 false) 
	#(182 7 #reduceActionForclassDeclaration10: 5877770 false) 
	#(197 1 #liftFirstValue: 7251969 false) 
	#(195 2 #liftFirstValue: 7191553 false) 
	#(194 7 #liftSecondValue: 7089154 false) 
	#(194 7 #liftSecondValue: 7089155 false) 
	#(439 5 #reduceActionFornamedParameterTypes1: 42034178 false) 
	#(440 2 #liftSecondValue: 42115073 false) 
	#(147 7 #reduceActionFortopLevelDefinition22: 1634326 false) 
	#(190 7 #liftSecondValue: 6821891 false) 
	#(190 7 #liftSecondValue: 6821894 false) 
	#(391 4 #reduceActionForassertion1: 37683201 false) 
	#(383 2 #reduceActionForfinallyPart1: 36972545 false) 
	#(381 2 #liftFirstValue: 36793345 false) 
	#(379 4 #reduceActionFortryStatement2: 36477954 false) 
	#(380 2 #reduceActionForonPart1: 36626433 false) 
	#(389 4 #reduceActionForyieldEachStatement1: 37485569 false) 
	#(366 2 #reduceActionFor_____identifier__identifier___2: 34887682 false) 
	#(178 5 #reduceActionForfieldFormalParameter2: 5391363 false) 
	#(176 5 #reduceActionForfunctionFormalParameter7: 5083144 false) 
	#(178 5 #reduceActionForfieldFormalParameter5: 5391365 false) 
	#(370 4 #reduceActionForforLoopParts1: 35430401 false) 
	#(370 4 #reduceActionForforLoopParts1: 35430402 false) 
	#(370 4 #reduceActionForforLoopParts5: 35430406 false) 
	#(266 6 #reduceActionForforElement2: 19691522 false) 
	#(220 3 #reduceActionForconstantConstructorSignature1: 11914241 false) 
	#(199 3 #reduceActionFordeclaration33: 7784481 false) 
	#(199 3 #reduceActionFordeclaration16: 7784464 false) 
	#(199 3 #reduceActionFordeclaration30: 7784478 false) 
	#(199 3 #reduceActionForfunctionPrimaryBody3: 7784460 false) 
	#(199 3 #reduceActionForfunctionPrimaryBody3: 7784454 false) 
	#(199 3 #reduceActionForfunctionPrimaryBody3: 7784457 false) 
	#(199 3 #reduceActionFordeclaration13: 7784461 false) 
	#(218 3 #reduceActionForfactoryConstructorSignature1: 11494401 false) 
	#(199 3 #reduceActionFordeclaration35: 7784483 false) 
	#(199 3 #reduceActionFordeclaration30: 7784485 false) 
	#(204 3 #reduceActionForoperatorSignature1: 9772033 false) 
	#(199 3 #reduceActionFordeclaration22: 7784470 false) 
	#(199 3 #reduceActionFordeclaration22: 7784468 false) 
	#(199 3 #reduceActionFordeclaration30: 7784474 false) 
	#(214 0 #reduceActionFor_____identifier__identifier___1: 10930177 false) 
	#(215 1 #liftFirstValue: 11010052 false) 
	#(215 1 #liftFirstValue: 11010053 false) 
	#(210 3 #reduceActionForconstructorName1: 10596355 false) 
	#(210 3 #reduceActionForconstructorName2: 10596354 false) 
	#(182 8 #reduceActionForclassDeclaration8: 5877768 false) 
	#(222 8 #liftSecondValue: 12234754 false) 
	#(228 2 #liftFirstValue: 12383234 false) 
	#(229 5 #reduceActionForenumEntry3: 12449795 false) 
	#(222 8 #liftSecondValue: 12234757 false) 
	#(222 8 #liftSecondValue: 12234755 false) 
	#(222 8 #liftSecondValue: 12234761 false) 
	#(182 8 #reduceActionForclassDeclaration15: 5877775 false) 
	#(182 8 #reduceActionForclassDeclaration14: 5877774 false) 
	#(182 8 #reduceActionForclassDeclaration12: 5877772 false) 
	#(194 8 #liftSecondValue: 7089156 false) 
	#(190 8 #liftSecondValue: 6821892 false) 
	#(190 8 #liftSecondValue: 6821895 false) 
	#(391 5 #reduceActionForassertion1: 37683202 false) 
	#(369 5 #reduceActionForforStatement1: 35318785 false) 
	#(368 5 #reduceActionForifStatement1: 35151873 false) 
	#(375 0 #reduceActionFor_____identifier__identifier___1: 36087809 false) 
	#(380 3 #reduceActionForonPart2: 36626434 false) 
	#(372 5 #reduceActionForwhileStatement1: 35725313 false) 
	#(364 4 #reduceActionForinitializedVariableDeclaration2: 34762754 false) 
	#(365 2 #liftSecondValue: 34887681 false) 
	#(178 6 #reduceActionForfieldFormalParameter5: 5391366 false) 
	#(265 7 #reduceActionForfunctionPrimaryBody3: 19612674 false) 
	#(218 4 #reduceActionForfactoryConstructorSignature2: 11494402 false) 
	#(199 4 #reduceActionFordeclaration16: 7784465 false) 
	#(199 4 #reduceActionFordeclaration28: 7784476 false) 
	#(199 4 #reduceActionFordeclaration31: 7784479 false) 
	#(199 4 #reduceActionFordeclaration15: 7784463 false) 
	#(199 4 #reduceActionFordeclaration14: 7784462 false) 
	#(199 4 #reduceActionFordeclaration36: 7784484 false) 
	#(199 4 #reduceActionFordeclaration23: 7784471 false) 
	#(199 4 #reduceActionFordeclaration23: 7784469 false) 
	#(199 4 #reduceActionFordeclaration24: 7784472 false) 
	#(199 4 #reduceActionFordeclaration31: 7784475 false) 
	#(215 2 #liftSecondValue: 11010049 false) 
	#(211 3 #reduceActionForredirection1: 10732545 false) 
	#(212 3 #reduceActionForinitializers1: 10857473 false) 
	#(204 4 #reduceActionForoperatorSignature2: 9772034 false) 
	#(227 2 #liftFirstValue: 12383233 false) 
	#(229 6 #reduceActionForenumEntry4: 12449796 false) 
	#(222 9 #liftSecondValue: 12234758 false) 
	#(222 9 #liftSecondValue: 12234759 false) 
	#(222 9 #liftSecondValue: 12234756 false) 
	#(222 9 #liftSecondValue: 12234762 false) 
	#(222 9 #liftSecondValue: 12234765 false) 
	#(222 9 #liftSecondValue: 12234763 false) 
	#(182 9 #reduceActionForclassDeclaration16: 5877776 false) 
	#(190 9 #liftSecondValue: 6821896 false) 
	#(391 6 #reduceActionForassertion3: 37683203 false) 
	#(382 4 #reduceActionForcatchPart1: 36854785 false) 
	#(380 4 #reduceActionForonPart3: 36626435 false) 
	#(369 6 #reduceActionForforStatement2: 35318786 false) 
	#(199 5 #reduceActionFordeclaration29: 7784477 false) 
	#(219 5 #reduceActionForredirectingFactoryConstructorSignature1: 11673601 false) 
	#(199 5 #reduceActionFordeclaration25: 7784473 false) 
	#(214 2 #reduceActionFor_____identifier__identifier___2: 10930178 false) 
	#(216 3 #reduceActionForfieldInitializer1: 11172865 false) 
	#(217 1 #reduceActionForinitializerExpression2: 11322370 false) 
	#(217 1 #reduceActionForinitializerExpression1: 11322369 false) 
	#(222 10 #liftSecondValue: 12234760 false) 
	#(222 10 #liftSecondValue: 12234766 false) 
	#(222 10 #liftSecondValue: 12234767 false) 
	#(222 10 #liftSecondValue: 12234764 false) 
	#(391 7 #reduceActionForassertion3: 37683204 false) 
	#(373 7 #reduceActionFordoStatement1: 35864577 false) 
	#(368 7 #reduceActionForifStatement2: 35151874 false) 
	#(374 7 #reduceActionForswitchStatement1: 35999745 false) 
	#(375 2 #reduceActionFor_____identifier__identifier___2: 36087810 false) 
	#(219 6 #reduceActionForredirectingFactoryConstructorSignature2: 11673602 false) 
	#(215 4 #reduceActionForforElement2: 11010051 false) 
	#(215 4 #reduceActionForfunctionPrimaryBody3: 11010050 false) 
	#(211 5 #reduceActionForredirection3: 10732547 false) 
	#(211 5 #reduceActionForredirection2: 10732546 false) 
	#(213 2 #liftSecondValue: 10930177 false) 
	#(222 11 #liftSecondValue: 12234768 false) 
	#(374 8 #reduceActionForswitchStatement2: 35999746 false) 
	#(382 6 #reduceActionForcatchPart2: 36854786 false) 
	#(216 5 #reduceActionForfieldInitializer2: 11172866 false) 
	#(377 3 #reduceActionFordefaultCase1: 36299777 false) 
	#(376 4 #reduceActionForswitchCase1: 36175873 false) 
	#(377 4 #reduceActionFordefaultCase2: 36299778 false) 
	#(376 5 #reduceActionForswitchCase2: 36175874 false)
	).
]

{ #category : #'generated-accessing' }
DartParser class >> scannerClass [
	^DartScanner
]

{ #category : #generated }
DartParser class >> startingStateForlibraryDefinition [

	^ 1
]

{ #category : #generated }
DartParser class >> symbolNames [

	^ #( '"!"' '"!="' '"#"' '"%"' '"%="' '"&"' '"&&"' '"&="' '"("' '")"'
	     '"*"' '"*="' '"+"' '"++"' '"+="' '","' '"-"' '"--"' '"-="'
	     '"."' '".."' '"..."' '"...?"' '"/"' '"/="' '":"' '";"' '"<"'
	     '"<<"' '"<<="' '"<="' '"="' '"=="' '"=>"' '">"' '"?"' '"?."'
	     '"?.."' '"??"' '"??="' '"@"' '"["' '"]"' '"^"' '"^="' '"|"'
	     '"|="' '"||"' '"~"' '"~/"' '"~/="' '<ASSERT>' '<break>'
	     '<case>' '<catch>' '<clazz>' '<const>' '<continue>' '<default>'
	     '<do>' '<else>' '<enum>' '<extends>' '<false>' '<final>'
	     '<finally>' '<for>' '<if>' '<in>' '<is>' '<new>' '<null>'
	     '<rethrow>' '<return>' '<super>' '<switch>' '<this>' '<throw>'
	     '<true>' '<try>' '<var>' '<void>' '<while>' '<with>' '<abstract>'
	     '<as>' '<covariant>' '<deferred>' '<dynamic>' '<export>'
	     '<extension>' '<external>' '<factory>' '<function>' '<get>'
	     '<implements>' '<import>' '<interface>' '<late>' '<library>'
	     '<operator>' '<mixin>' '<part>' '<required>' '<set>' '<static>'
	     '<typedef>' '<await>' '<yield>' '<async>' '<hide>' '<of>' '<on>'
	     '<show>' '<sync>' '<number>' '<HEX_NUMBER>' '<RAW_SINGLE_LINE_STRING>'
	     '<RAW_MULTI_LINE_STRING>' '<SINGLE_LINE_STRING_SQ_BEGIN_END>'
	     '<SINGLE_LINE_STRING_SQ_BEGIN_MID>'
	     '<SINGLE_LINE_STRING_SQ_MID_END>'
	     '<SINGLE_LINE_STRING_DQ_BEGIN_END>'
	     '<SINGLE_LINE_STRING_DQ_BEGIN_MID>'
	     '<SINGLE_LINE_STRING_DQ_MID_END>'
	     '<SINGLE_LINE_STRING_MID_MID>' '<MULTI_LINE_STRING_SQ_BEGIN_END>'
	     '<MULTI_LINE_STRING_SQ_BEGIN_MID>'
	     '<MULTI_LINE_STRING_SQ_MID_END>'
	     '<MULTI_LINE_STRING_DQ_BEGIN_END>'
	     '<MULTI_LINE_STRING_DQ_BEGIN_MID>'
	     '<MULTI_LINE_STRING_DQ_MID_END>'
	     '<MULTI_LINE_STRING_MID_MID>' '<lbrace>' '<rbrace>' '<SCRIPT_TAG>'
	     '<IDENTIFIER>' '<FEFF>' '<whitespace>' '<comment>' 'B e g i n'
	     'libraryDefinition' 'importOrExport*' 'partDirective*'
	     '(metadata topLevelDefinition)' '(metadata topLevelDefinition)*'
	     'topLevelDefinition' '("," initializedIdentifier)'
	     '("," initializedIdentifier)*' 'declaredIdentifier'
	     'finalConstVarOrType' 'finalVarOrType' 'varOrType' 'initializedIdentifier'
	     'initializedIdentifierList' '("," initializedIdentifier ''nextInitializedIdentifier'')'
	     '("," initializedIdentifier ''nextInitializedIdentifier'')*'
	     'functionSignature' 'functionBodyPrefix' 'functionBody'
	     'block' 'formalParameterPart' 'formalParameterList'
	     'normalFormalParameters' '("," normalFormalParameter ''nextNormalFormalParameter'')'
	     '("," normalFormalParameter ''nextNormalFormalParameter'')*'
	     'optionalOrNamedFormalParameters'
	     'optionalPositionalFormalParameters'
	     '("," defaultFormalParameter ''defaultFormalParameter'')'
	     '("," defaultFormalParameter ''defaultFormalParameter'')*'
	     'namedFormalParameters' '("," defaultNamedParameter ''nextDefaultNamedParameter'')'
	     '("," defaultNamedParameter ''nextDefaultNamedParameter'')*'
	     'normalFormalParameter' 'normalFormalParameterNoMetadata'
	     'functionFormalParameter' 'simpleFormalParameter'
	     'fieldFormalParameter' 'defaultFormalParameter'
	     'defaultNamedParameter' 'typeWithParameters'
	     'classDeclaration' '(metadata ''metadata'' classMemberDefinition ''classMemberDefinition'')'
	     '(metadata ''metadata'' classMemberDefinition ''classMemberDefinition'')*'
	     'superclass' 'mixins' 'interfaces' 'classMemberDefinition'
	     'mixinApplicationClass' 'mixinDeclaration' '(metadata mixinMemberDefinition)'
	     '(metadata mixinMemberDefinition)*'
	     'mixinMemberDefinition' 'extensionDeclaration'
	     '(metadata extensionMemberDefinition)'
	     '(metadata extensionMemberDefinition)*'
	     'extensionMemberDefinition' 'methodSignature' 'declaration'
	     'staticFinalDeclarationList' '("," staticFinalDeclaration ''nextStaticFinalDeclaration'')'
	     '("," staticFinalDeclaration ''nextStaticFinalDeclaration'')*'
	     'staticFinalDeclaration' 'operatorSignature' 'operator'
	     'binaryOperator' 'getterSignature' 'setterSignature'
	     'constructorSignature' 'constructorName' 'redirection'
	     'initializers' '("," initializerListEntry ''InitializerListEntry'')'
	     '("," initializerListEntry ''InitializerListEntry'')*'
	     'initializerListEntry' 'fieldInitializer' 'initializerExpression'
	     'factoryConstructorSignature' 'redirectingFactoryConstructorSignature'
	     'constantConstructorSignature' 'mixinApplication'
	     'enumType' '("," enumEntry)' '("," enumEntry)*'
	     '(";" (metadata classMemberDefinition)*)'
	     '(";" (metadata classMemberDefinition)*)?'
	     '(metadata classMemberDefinition)'
	     '(metadata classMemberDefinition)*'
	     'enumEntry' 'typeParameter' 'typeParameters' '("," typeParameter ''nextTypeParameter'')'
	     '("," typeParameter ''nextTypeParameter'')*'
	     'metadata' '("@" metadatum)' '("@" metadatum)*'
	     'metadatum' 'expression' 'assignableExpressionWithOperator'
	     'expressionWithoutCascade' 'assignableExpressionWithoutCascadeWithOperator'
	     'expressionList' '("," expression ''nextExpression'')'
	     '("," expression ''nextExpression'')*'
	     'primary' 'constructorInvocation' 'literal' 'nullLiteral'
	     'numericLiteral' 'booleanLiteral' 'stringLiteral'
	     '(multiLineString ''multiLineString'' | singleLineString ''singleLineString'')'
	     '(multiLineString ''multiLineString'' | singleLineString ''singleLineString'')+'
	     'stringLiteralWithoutInterpolation'
	     'singleStringWithoutInterpolation+'
	     'setOrMapLiteral' 'listLiteral' 'elements' '("," element ''nextElements'')'
	     '("," element ''nextElements'')*'
	     'element' 'expressionElement' 'mapElement' 'spreadElement'
	     'ifElement' 'forElement' 'constructorTearoff'
	     'throwExpression' 'throwExpressionWithoutCascade'
	     'functionExpression' 'functionExpressionBody'
	     'functionExpressionBodyPrefix' 'functionExpressionWithoutCascade'
	     'functionExpressionWithoutCascadeBody'
	     'functionPrimary' 'functionPrimaryBody' 'functionPrimaryBodyPrefix'
	     'thisExpression' 'newExpression' 'constObjectExpression'
	     'arguments' 'argumentList' '("," namedArgument ''namedArgument'')'
	     '("," namedArgument ''namedArgument'')*'
	     'namedArgument' 'cascade' 'cascadeSection' 'cascadeSelector'
	     'cascadeSectionTail' 'selector*' 'cascadeAssignment'
	     'assignmentOperator' 'compoundAssignmentOperator'
	     'conditionalExpression' 'ifNullExpression' '("??" logicalOrExpression ''logicalOrExpression'')'
	     '("??" logicalOrExpression ''logicalOrExpression'')+'
	     'logicalOrExpression' '("||" logicalAndExpression ''logicalAndExpression'')'
	     '("||" logicalAndExpression ''logicalAndExpression'')+'
	     'logicalAndExpression' '("&&" equalityExpression ''equalityExpression'')'
	     '("&&" equalityExpression ''equalityExpression'')+'
	     'equalityExpression' '(equalityOperator ''equalityOperator'' relationalExpression ''relationalExpression'')'
	     '(equalityOperator ''equalityOperator'' relationalExpression ''relationalExpression'')+'
	     'equalityOperator' 'relationalExpression' '(typeTest ''typeTest'' | typeCast ''typeCast'' | relationalOperator ''relationalOperator'' bitwiseOrExpression ''bitwiseOrExpression'')'
	     '(typeTest ''typeTest'' | typeCast ''typeCast'' | relationalOperator ''relationalOperator'' bitwiseOrExpression ''bitwiseOrExpression'')+'
	     'relationalOperator' 'bitwiseOrExpression' '("|" bitwiseXorExpression ''bitwiseXorExpression'')'
	     '("|" bitwiseXorExpression ''bitwiseXorExpression'')+'
	     'bitwiseXorExpression' '( "^" bitwiseAndExpression ''bitwiseAndExpression'')'
	     '( "^" bitwiseAndExpression ''bitwiseAndExpression'')+'
	     'bitwiseAndExpression' '("&" shiftExpression ''shiftExpression'')'
	     '("&" shiftExpression ''shiftExpression'')+'
	     'bitwiseOperator' 'shiftExpression' '( shiftOperator ''shiftOperator'' additiveExpression ''additiveExpression'')'
	     '( shiftOperator ''shiftOperator'' additiveExpression ''additiveExpression'')+'
	     'shiftOperator' 'additiveExpression' '(additiveOperator ''additiveOperator'' multiplicativeExpression ''multiplicativeExpression'')'
	     '(additiveOperator ''additiveOperator'' multiplicativeExpression ''multiplicativeExpression'')+'
	     'additiveOperator' 'multiplicativeExpression'
	     '(multiplicativeOperator ''multiplicativeOperator'' unaryExpression ''unaryExpression'')'
	     '(multiplicativeOperator ''multiplicativeOperator'' unaryExpression ''unaryExpression'')+'
	     'multiplicativeOperator' 'unaryExpression' 'prefixOperator'
	     'minusOperator' 'negationOperator' 'tildeOperator'
	     'awaitExpression' 'postfixExpression' 'selector ''selector''*'
	     'postfixOperator' 'selector' 'argumentPart' 'incrementOperator'
	     'assignableExpression' 'assignableSelectorPart'
	     'unconditionalAssignableSelector'
	     'assignableSelector' 'identifierNotFUNCTION'
	     'identifier' 'qualifiedName' 'typeIdentifier' 'typeTest'
	     'isOperator' 'typeCast' 'asOperator' 'statements' 'statement'
	     'label ''label''*' 'nonLabelledStatement' 'expressionStatement'
	     'localVariableDeclaration' 'initializedVariableDeclaration'
	     '("," initializedIdentifier ''initializedIdentifier'')'
	     '("," initializedIdentifier ''initializedIdentifier'')*'
	     'localFunctionDeclaration' 'ifStatement' 'forStatement'
	     'forLoopParts' 'forInitializerStatement'
	     'whileStatement' 'doStatement' 'switchStatement'
	     'switchCase ''cases''*' 'switchCase' 'defaultCase' 'rethrowStatement'
	     'tryStatement' 'onPart' 'onParts' 'catchPart' 'finallyPart'
	     'returnStatement' 'label' 'breakStatement' 'continueStatement'
	     'yieldStatement' 'yieldEachStatement' 'assertStatement'
	     'assertion' 'libraryName' 'dottedIdentifierList'
	     '("." identifier ''identifier'')'
	     '("." identifier ''identifier'')*'
	     'importOrExport' 'libraryImport' 'importSpecification'
	     'combinator*' 'combinator' 'identifierList' '("," identifier ''nextIdentifier'')'
	     '("," identifier ''nextIdentifier'')*'
	     'libraryExport' 'partDirective' 'partHeader' 'partDeclaration'
	     'topLevelDefinition*' 'uri' 'configurableUri' 'configurationUri ''configurationUri''*'
	     'configurationUri' 'uriTest' 'type' 'typeNotVoid' 'typeNotFunction'
	     'typeNotVoidNotFunction' 'typeName' 'typeArguments'
	     'typeList' '("," type ''nextType'')' '("," type ''nextType'')*'
	     'typeNotVoidNotFunctionList' '("," typeNotVoidNotFunction ''nextTypeNotVoidNotFunction'')'
	     '("," typeNotVoidNotFunction ''nextTypeNotVoidNotFunction'')*'
	     'typeAlias' 'functionTypeAlias' 'functionPrefix'
	     'functionTypeTail' 'functionTypeTails' 'functionType'
	     'parameterTypeList' 'normalParameterTypes'
	     '("," normalParameterType ''nextNormalParameterType'')'
	     '("," normalParameterType ''nextNormalParameterType'')*'
	     'normalParameterType' 'optionalParameterTypes'
	     'optionalPositionalParameterTypes'
	     'namedParameterTypes' '("," namedParameterType ''nextNamedParameterType'')'
	     '("," namedParameterType ''nextNamedParameterType'')*'
	     'namedParameterType' 'typedIdentifier' 'constructorDesignation'
	     'symbolLiteral' 'singleStringWithoutInterpolation'
	     'singleLineString' '(<SINGLE_LINE_STRING_MID_MID> expression ''nextExpressions'')'
	     '(<SINGLE_LINE_STRING_MID_MID> expression ''nextExpressions'')*'
	     'multiLineString' '(<MULTI_LINE_STRING_MID_MID> expression ''nextExpressions'')'
	     '(<MULTI_LINE_STRING_MID_MID> expression ''nextExpressions'')*'
	     'reservedWord' 'builtInIdentifier' 'E O F' 'error' )
]

{ #category : #generated }
DartParser class >> symbolTypes [

	^ #( #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken #SmaCCToken
	     #DartLibraryDefinitionNode #DartLibraryDefinitionNode
	     #OrderedCollection nil #OrderedCollection #OrderedCollection
	     #OrderedCollection #DartInitializedIdentifierNode
	     nil #DartDeclaredIdentifierNode #Object #Object #Object #DartInitializedIdentifierNode
	     #DartInitializedIdentifierListNode
	     #DartInitializedIdentifierNode #OrderedCollection
	     #DartFunctionSignatureNode #SmaCCToken #DartProgramNode
	     #DartBlockNode #DartFormalParameterPartNode
	     #Object #DartNormalFormalParametersNode
	     #DartNormalFormalParameterNode #OrderedCollection
	     #DartProgramNode #DartOptionalPositionalFormalParametersNode
	     #DartNormalFormalParameterNode #OrderedCollection
	     #DartNamedFormalParametersNode #DartNormalFormalParameterNode
	     #OrderedCollection #DartNormalFormalParameterNode
	     #DartProgramNode #DartFunctionFormalParameterNode
	     #DartProgramNode #DartFieldFormalParameterNode
	     #DartNormalFormalParameterNode #DartNormalFormalParameterNode
	     #DartTypeNode #DartClassDeclarationNode
	     #OrderedCollection #OrderedCollection #Object #DartTypeNotVoidNotFunctionListNode
	     #DartTypeNotVoidNotFunctionListNode
	     #DartClassMemberDefinitionNode #DartMixinApplicationClassNode
	     #SmaCCToken nil nil #DartClassMemberDefinitionNode
	     #DartProgramNode nil nil #DartClassMemberDefinitionNode
	     #DartProgramNode #DartProgramNode #DartStaticFinalDeclarationListNode
	     #DartStaticFinalDeclarationNode #OrderedCollection
	     #DartStaticFinalDeclarationNode #DartOperatorSignatureNode
	     #SmaCCToken #SmaCCToken #DartGetterSignatureNode
	     #DartSetterSignatureNode #DartConstructorSignatureNode
	     #DartConstructorNameNode #DartRedirectionNode
	     #DartInitializersNode #Object #OrderedCollection
	     #Object #DartFieldInitializerNode #DartInitializerExpressionNode
	     #DartFactoryConstructorSignatureNode
	     #DartRedirectingFactoryConstructorSignatureNode
	     #DartConstantConstructorSignatureNode
	     #DartMixinApplicationNode #SmaCCToken #DartEnumEntryNode
	     nil nil nil nil nil #DartEnumEntryNode #DartTypeParameterNode
	     #DartTypeParametersNode #DartTypeParameterNode
	     #OrderedCollection nil #DartProgramNode nil #DartProgramNode
	     #OrderedCollection #DartAssignableExpressionWithOperatorNode
	     #DartProgramNode #DartAssignableExpressionWithoutCascadeWithOperatorNode
	     #DartExpressionListNode #OrderedCollection #OrderedCollection
	     #DartProgramNode #DartConstructorInvocationNode
	     #DartProgramNode #DartNullLiteralNode #DartNumericLiteralNode
	     #DartBooleanLiteralNode #DartStringLiteralNode
	     #OrderedCollection #OrderedCollection #SmaCCToken #SmaCCToken
	     #DartSetOrMapLiteralNode #DartListLiteralNode
	     #DartElementsNode #DartElementNode #OrderedCollection
	     #DartElementNode #DartExpressionElementNode
	     #OrderedCollection #OrderedCollection #OrderedCollection
	     #OrderedCollection #DartTypeNameNode #DartThrowExpressionNode
	     #DartProgramNode #DartFunctionExpressionNode
	     #OrderedCollection #SmaCCToken #DartFormalParameterPartNode
	     #DartProgramNode #DartFormalParameterPartNode
	     #DartBlockNode #SmaCCToken #DartThisExpressionNode
	     #DartNewExpressionNode #DartConstObjectExpressionNode
	     #Object #DartArgumentListNode #DartNamedArgumentNode
	     #OrderedCollection #DartNamedArgumentNode #DartCascadeNode
	     #Object #Object #DartAssignmentOperatorNode
	     nil #DartAssignmentOperatorNode #DartAssignmentOperatorNode
	     #SmaCCToken #DartProgramNode #DartProgramNode #DartProgramNode
	     #OrderedCollection #DartProgramNode #DartProgramNode
	     #OrderedCollection #DartProgramNode #DartProgramNode
	     #OrderedCollection #DartProgramNode #OrderedCollection
	     #OrderedCollection #SmaCCToken #DartProgramNode #OrderedCollection
	     #OrderedCollection #SmaCCToken #DartProgramNode #DartProgramNode
	     #OrderedCollection #DartProgramNode #DartProgramNode
	     #OrderedCollection #DartProgramNode #DartProgramNode
	     #OrderedCollection #SmaCCToken #DartProgramNode #OrderedCollection
	     #OrderedCollection #SmaCCToken #DartProgramNode #OrderedCollection
	     #OrderedCollection #SmaCCToken #DartProgramNode #OrderedCollection
	     #OrderedCollection #SmaCCToken #DartProgramNode #SmaCCToken
	     #SmaCCToken #SmaCCToken #SmaCCToken #DartAwaitExpressionNode
	     #DartPostfixExpressionNode #OrderedCollection #SmaCCToken
	     #Object #Object #SmaCCToken #DartAssignableExpressionNode
	     nil #Object #Object #SmaCCToken #DartIdentifierNode
	     #DartQualifiedNameNode #SmaCCToken #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCToken #DartStatementsNode #DartSingleStatementNode
	     #OrderedCollection #Object #Object #DartLocalVariableDeclarationNode
	     #DartInitializedVariableDeclarationNode
	     #DartInitializedIdentifierNode #OrderedCollection
	     #DartLocalFunctionDeclarationNode
	     #DartIfStatementNode #DartForStatementNode #OrderedCollection
	     #OrderedCollection #DartWhileStatementNode
	     #DartDoStatementNode #DartSwitchStatementNode
	     #OrderedCollection #DartSwitchCaseNode #DartDefaultCaseNode
	     #DartRethrowStatementNode #DartTryStatementNode
	     #DartOnPartNode #DartOnPartNode #DartCatchPartNode
	     #DartFinallyPartNode #DartReturnStatementNode
	     #DartLabelNode #DartBreakStatementNode #DartContinueStatementNode
	     #DartYieldStatementNode #DartYieldEachStatementNode
	     #DartAssertStatementNode #DartAssertionNode #DartLibraryNameNode
	     #DartDottedIdentifierListNode #DartIdentifierNode
	     #OrderedCollection #OrderedCollection #DartLibraryImportNode
	     #DartImportSpecificationNode nil #DartIdentifierListNode
	     #DartIdentifierListNode #DartIdentifierNode #OrderedCollection
	     #DartExportDeclarationNode #DartPartDirectiveNode
	     #DartPartHeaderNode #DartPartDeclarationNode
	     #OrderedCollection #DartUriNode #DartConfigurableUriNode
	     #OrderedCollection #DartConfigurationUriNode
	     #DartUriTestNode #DartTypeNode #Object #Object #Object #DartTypeNameNode
	     #DartTypeListNode #DartTypeListNode #DartTypeNode #OrderedCollection
	     #DartTypeNotVoidNotFunctionListNode
	     #Object #OrderedCollection #DartProgramNode #DartFunctionTypeAliasNode
	     #DartProgramNode #DartFunctionTypeTailNode
	     #DartProgramNode #DartProgramNode #Object #DartNormalParameterTypesNode
	     #DartNormalParameterTypeNode #OrderedCollection
	     #DartNormalParameterTypeNode #DartProgramNode #DartNormalParameterTypesNode
	     #DartNamedParameterTypesNode #DartNamedParameterTypeNode
	     #OrderedCollection #DartNamedParameterTypeNode
	     #DartTypedIdentifierNode #Object #DartSymbolLiteralNode
	     #SmaCCToken #DartSingleLineStringNode #OrderedCollection
	     #OrderedCollection #DartMultiLineStringNode
	     #OrderedCollection #OrderedCollection #SmaCCToken #SmaCCToken
	     #SmaCCToken #SmaCCErrorNode )
]

{ #category : #generated }
DartParser class >> transitionTable [
^#(
#[1 0 7 0 41 0 6 0 56 0 6 0 57 0 6 0 62 0 6 0 65 0 6 0 81 0 6 0 82 0 6 0 85 0 6 0 86 0 6 0 87 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 93 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 97 0 6 0 98 0 6 0 99 0 7 0 100 0 6 0 101 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 110 0 6 0 111 0 6 0 112 0 6 0 113 0 6 0 114 0 6 0 115 0 9 0 136 0 6 0 137 0 13 0 138 0 17 0 142 0 21 0 143 0 25 0 234 0 29 0 236 0 33 1 136 0 6 1 199] 
#[1 0 7 0 41 0 6 0 56 0 6 0 57 0 6 0 62 0 6 0 65 0 6 0 81 0 6 0 82 0 6 0 85 0 6 0 86 0 6 0 87 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 93 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 97 0 6 0 98 0 6 0 99 0 7 0 100 0 6 0 101 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 110 0 6 0 111 0 6 0 112 0 6 0 113 0 6 0 114 0 6 0 115 0 6 0 137 0 37 0 143 0 25 0 234 0 29 0 236 0 41 1 136 0 6 1 199] 
#[1 0 7 0 41 0 6 0 56 0 6 0 57 0 6 0 62 0 6 0 65 0 6 0 81 0 6 0 82 0 6 0 85 0 6 0 86 0 6 0 87 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 93 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 97 0 6 0 98 0 6 0 99 0 7 0 100 0 6 0 101 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 110 0 6 0 111 0 6 0 112 0 6 0 113 0 6 0 114 0 6 0 115 0 45 0 136 0 6 0 137 0 49 0 143 0 25 0 234 0 29 0 236 0 53 1 136 0 6 1 199] 
#[0 0 0 1 199] 
#[1 0 11 0 41 0 14 0 56 0 14 0 57 0 14 0 62 0 14 0 65 0 14 0 81 0 14 0 82 0 14 0 85 0 14 0 86 0 14 0 87 0 14 0 88 0 14 0 89 0 11 0 90 0 14 0 91 0 14 0 92 0 14 0 93 0 14 0 94 0 14 0 95 0 14 0 96 0 11 0 97 0 14 0 98 0 14 0 99 0 14 0 100 0 14 0 101 0 14 0 102 0 14 0 103 0 14 0 104 0 14 0 105 0 14 0 106 0 14 0 107 0 14 0 108 0 14 0 109 0 14 0 110 0 14 0 111 0 14 0 112 0 14 0 113 0 14 0 114 0 14 0 115 0 14 0 137 0 57 0 144 0 61 0 234 0 29 0 236 0 65 1 140 0 69 1 141 0 73 1 148 0 14 1 199] 
#[0 0 77 0 100] 
#[1 0 81 0 41 0 18 0 56 0 18 0 57 0 18 0 62 0 18 0 65 0 18 0 77 0 18 0 81 0 18 0 82 0 18 0 85 0 18 0 86 0 18 0 87 0 18 0 88 0 18 0 89 0 18 0 90 0 18 0 91 0 18 0 92 0 18 0 93 0 18 0 94 0 18 0 95 0 18 0 96 0 18 0 97 0 18 0 98 0 18 0 99 0 18 0 100 0 18 0 101 0 18 0 102 0 18 0 103 0 18 0 104 0 18 0 105 0 18 0 106 0 18 0 107 0 18 0 108 0 18 0 109 0 18 0 110 0 18 0 111 0 18 0 112 0 18 0 113 0 18 0 114 0 18 0 115 0 18 0 137 0 85 0 235] 
#[1 0 6 0 41 0 6 0 56 0 6 0 57 0 6 0 62 0 6 0 65 0 6 0 81 0 6 0 82 0 6 0 85 0 6 0 86 0 6 0 87 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 93 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 97 0 6 0 98 0 6 0 99 0 6 0 100 0 6 0 101 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 110 0 6 0 111 0 6 0 112 0 6 0 113 0 6 0 114 0 6 0 115 0 6 0 137 0 89 0 143 0 6 1 199] 
#[1 0 11 0 41 0 14 0 56 0 14 0 57 0 14 0 62 0 14 0 65 0 14 0 81 0 14 0 82 0 14 0 85 0 14 0 86 0 14 0 87 0 14 0 88 0 14 0 89 0 11 0 90 0 14 0 91 0 14 0 92 0 14 0 93 0 14 0 94 0 14 0 95 0 14 0 96 0 11 0 97 0 14 0 98 0 14 0 99 0 14 0 100 0 14 0 101 0 14 0 102 0 14 0 103 0 14 0 104 0 14 0 105 0 14 0 106 0 14 0 107 0 14 0 108 0 14 0 109 0 14 0 110 0 14 0 111 0 14 0 112 0 14 0 113 0 14 0 114 0 14 0 115 0 14 0 137 0 93 0 144 0 61 0 234 0 29 0 236 0 65 1 140 0 69 1 141 0 73 1 148 0 14 1 199] 
#[1 0 6 0 41 0 6 0 56 0 6 0 57 0 6 0 62 0 6 0 65 0 6 0 81 0 6 0 82 0 6 0 85 0 6 0 86 0 6 0 87 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 93 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 97 0 6 0 98 0 6 0 99 0 6 0 100 0 6 0 101 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 110 0 6 0 111 0 6 0 112 0 6 0 113 0 6 0 114 0 6 0 115 0 6 0 137 0 97 0 143 0 6 1 199] 
#[1 0 7 0 41 0 6 0 56 0 6 0 57 0 6 0 62 0 6 0 65 0 6 0 81 0 6 0 82 0 6 0 85 0 6 0 86 0 6 0 87 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 93 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 97 0 6 0 98 0 6 0 99 0 7 0 100 0 6 0 101 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 110 0 6 0 111 0 6 0 112 0 6 0 113 0 6 0 114 0 6 0 115 0 6 0 137 0 101 0 143 0 25 0 234 0 29 0 236 0 105 1 136 0 6 1 199] 
#[1 0 11 0 41 0 14 0 56 0 14 0 57 0 14 0 62 0 14 0 65 0 14 0 81 0 14 0 82 0 14 0 85 0 14 0 86 0 14 0 87 0 14 0 88 0 14 0 89 0 11 0 90 0 14 0 91 0 14 0 92 0 14 0 93 0 14 0 94 0 14 0 95 0 14 0 96 0 11 0 97 0 14 0 98 0 14 0 99 0 14 0 100 0 14 0 101 0 14 0 102 0 14 0 103 0 14 0 104 0 14 0 105 0 14 0 106 0 14 0 107 0 14 0 108 0 14 0 109 0 14 0 110 0 14 0 111 0 14 0 112 0 14 0 113 0 14 0 114 0 14 0 115 0 14 0 137 0 109 0 144 0 61 0 234 0 29 0 236 0 65 1 140 0 69 1 141 0 73 1 148 0 14 1 199] 
#[1 0 6 0 41 0 6 0 56 0 6 0 57 0 6 0 62 0 6 0 65 0 6 0 81 0 6 0 82 0 6 0 85 0 6 0 86 0 6 0 87 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 93 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 97 0 6 0 98 0 6 0 99 0 6 0 100 0 6 0 101 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 110 0 6 0 111 0 6 0 112 0 6 0 113 0 6 0 114 0 6 0 115 0 6 0 137 0 113 0 143 0 6 1 199] 
#[1 0 15 0 41 0 22 0 56 0 22 0 57 0 22 0 62 0 22 0 65 0 22 0 81 0 22 0 82 0 22 0 85 0 22 0 86 0 22 0 87 0 22 0 88 0 22 0 89 0 22 0 90 0 22 0 91 0 22 0 92 0 22 0 93 0 22 0 94 0 22 0 95 0 22 0 96 0 22 0 97 0 22 0 98 0 22 0 99 0 22 0 100 0 22 0 101 0 22 0 102 0 15 0 103 0 22 0 104 0 22 0 105 0 22 0 106 0 22 0 107 0 22 0 108 0 22 0 109 0 22 0 110 0 22 0 111 0 22 0 112 0 22 0 113 0 22 0 114 0 22 0 115 0 22 0 137 0 117 0 146 0 121 0 234 0 29 0 236 0 125 1 149 0 22 1 199] 
#[1 0 129 0 90 0 133 0 97 0 137 1 142] 
#[0 0 26 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 0 30 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 0 34 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 1 17 1 95 1 21 1 137 1 13 1 198] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 1 69 0 237 1 13 1 94 1 69 1 95 1 77 1 96 1 81 1 97 1 85 1 162 1 89 1 188 1 13 1 198] 
#[0 0 38 0 41 0 56 0 57 0 62 0 65 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[1 0 11 0 41 0 14 0 56 0 14 0 57 0 14 0 62 0 14 0 65 0 14 0 81 0 14 0 82 0 14 0 85 0 14 0 86 0 14 0 87 0 14 0 88 0 14 0 89 0 11 0 90 0 14 0 91 0 14 0 92 0 14 0 93 0 14 0 94 0 14 0 95 0 14 0 96 0 11 0 97 0 14 0 98 0 14 0 99 0 14 0 100 0 14 0 101 0 14 0 102 0 14 0 103 0 14 0 104 0 14 0 105 0 14 0 106 0 14 0 107 0 14 0 108 0 14 0 109 0 14 0 110 0 14 0 111 0 14 0 112 0 14 0 113 0 14 0 114 0 14 0 115 0 14 0 137 1 93 0 144 0 61 0 234 0 29 0 236 0 65 1 140 0 69 1 141 0 73 1 148 0 14 1 199] 
#[1 0 15 0 41 0 22 0 56 0 22 0 57 0 22 0 62 0 22 0 65 0 22 0 81 0 22 0 82 0 22 0 85 0 22 0 86 0 22 0 87 0 22 0 88 0 22 0 89 0 22 0 90 0 22 0 91 0 22 0 92 0 22 0 93 0 22 0 94 0 22 0 95 0 22 0 96 0 22 0 97 0 22 0 98 0 22 0 99 0 22 0 100 0 22 0 101 0 22 0 102 0 15 0 103 0 22 0 104 0 22 0 105 0 22 0 106 0 22 0 107 0 22 0 108 0 22 0 109 0 22 0 110 0 22 0 111 0 22 0 112 0 22 0 113 0 22 0 114 0 22 0 115 0 22 0 137 1 97 0 146 0 121 0 234 0 29 0 236 0 125 1 149 0 22 1 199] 
#[1 0 11 0 41 0 14 0 56 0 14 0 57 0 14 0 62 0 14 0 65 0 14 0 81 0 14 0 82 0 14 0 85 0 14 0 86 0 14 0 87 0 14 0 88 0 14 0 89 0 11 0 90 0 14 0 91 0 14 0 92 0 14 0 93 0 14 0 94 0 14 0 95 0 14 0 96 0 11 0 97 0 14 0 98 0 14 0 99 0 14 0 100 0 14 0 101 0 14 0 102 0 14 0 103 0 14 0 104 0 14 0 105 0 14 0 106 0 14 0 107 0 14 0 108 0 14 0 109 0 14 0 110 0 14 0 111 0 14 0 112 0 14 0 113 0 14 0 114 0 14 0 115 0 14 0 137 1 101 0 144 0 61 0 234 0 29 0 236 0 65 1 140 0 69 1 141 0 73 1 148 0 14 1 199] 
#[1 0 11 0 41 0 14 0 56 0 14 0 57 0 14 0 62 0 14 0 65 0 14 0 81 0 14 0 82 0 14 0 85 0 14 0 86 0 14 0 87 0 14 0 88 0 14 0 89 0 11 0 90 0 14 0 91 0 14 0 92 0 14 0 93 0 14 0 94 0 14 0 95 0 14 0 96 0 11 0 97 0 14 0 98 0 14 0 99 0 14 0 100 0 14 0 101 0 14 0 102 0 14 0 103 0 14 0 104 0 14 0 105 0 14 0 106 0 14 0 107 0 14 0 108 0 14 0 109 0 14 0 110 0 14 0 111 0 14 0 112 0 14 0 113 0 14 0 114 0 14 0 115 0 14 0 137 1 105 0 144 0 61 0 234 0 29 0 236 0 65 1 140 0 69 1 141 0 73 1 148 0 14 1 199] 
#[1 0 6 0 41 0 6 0 56 0 6 0 57 0 6 0 62 0 6 0 65 0 6 0 81 0 6 0 82 0 6 0 85 0 6 0 86 0 6 0 87 0 6 0 88 0 6 0 89 0 6 0 90 0 6 0 91 0 6 0 92 0 6 0 93 0 6 0 94 0 6 0 95 0 6 0 96 0 6 0 97 0 6 0 98 0 6 0 99 0 6 0 100 0 6 0 101 0 6 0 102 0 6 0 103 0 6 0 104 0 6 0 105 0 6 0 106 0 6 0 107 0 6 0 108 0 6 0 109 0 6 0 110 0 6 0 111 0 6 0 112 0 6 0 113 0 6 0 114 0 6 0 115 0 6 0 137 1 109 0 143 0 6 1 199] 
#[1 0 15 0 41 0 22 0 56 0 22 0 57 0 22 0 62 0 22 0 65 0 22 0 81 0 22 0 82 0 22 0 85 0 22 0 86 0 22 0 87 0 22 0 88 0 22 0 89 0 22 0 90 0 22 0 91 0 22 0 92 0 22 0 93 0 22 0 94 0 22 0 95 0 22 0 96 0 22 0 97 0 22 0 98 0 22 0 99 0 22 0 100 0 22 0 101 0 22 0 102 0 15 0 103 0 22 0 104 0 22 0 105 0 22 0 106 0 22 0 107 0 22 0 108 0 22 0 109 0 22 0 110 0 22 0 111 0 22 0 112 0 22 0 113 0 22 0 114 0 22 0 115 0 22 0 137 1 113 0 146 0 121 0 234 0 29 0 236 0 125 1 149 0 22 1 199] 
#[1 0 11 0 41 0 14 0 56 0 14 0 57 0 14 0 62 0 14 0 65 0 14 0 81 0 14 0 82 0 14 0 85 0 14 0 86 0 14 0 87 0 14 0 88 0 14 0 89 0 11 0 90 0 14 0 91 0 14 0 92 0 14 0 93 0 14 0 94 0 14 0 95 0 14 0 96 0 11 0 97 0 14 0 98 0 14 0 99 0 14 0 100 0 14 0 101 0 14 0 102 0 14 0 103 0 14 0 104 0 14 0 105 0 14 0 106 0 14 0 107 0 14 0 108 0 14 0 109 0 14 0 110 0 14 0 111 0 14 0 112 0 14 0 113 0 14 0 114 0 14 0 115 0 14 0 137 1 117 0 144 0 61 0 234 0 29 0 236 0 65 1 140 0 69 1 141 0 73 1 148 0 14 1 199] 
#[1 0 10 0 41 0 10 0 56 0 10 0 57 0 10 0 62 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 1 121 0 145 1 125 0 234 0 29 0 236 0 42 1 199] 
#[0 1 129 0 103] 
#[0 0 46 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 1 161 0 118 1 161 0 119 1 161 0 120 1 161 0 123 1 161 0 127 1 161 0 130 1 157 0 254 1 161 0 255 1 165 1 153 1 161 1 190] 
#[1 1 161 0 118 1 161 0 119 1 161 0 120 1 161 0 123 1 161 0 127 1 161 0 130 1 157 0 254 1 161 0 255 1 173 1 153 1 177 1 154 1 161 1 190] 
#[0 0 50 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 0 54 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 58 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 62 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 66 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 70 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 74 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 78 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 82 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 86 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 19 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 98 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 102 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 106 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 110 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 114 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 118 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 122 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 126 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 130 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 134 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 138 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 142 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 146 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 150 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 154 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 158 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 162 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 166 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 170 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 174 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 178 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 182 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 186 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 0 190 0 10 0 190 0 20 0 190 0 27 0 190 0 33 1 181 1 139] 
#[0 1 185 0 27] 
#[0 0 194 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 41 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 56 0 57 0 61 0 62 0 65 0 69 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 0 70 0 1 0 70 0 2 0 70 0 4 0 70 0 5 0 70 0 6 0 70 0 7 0 70 0 8 0 23 0 9 0 70 0 10 0 70 0 11 0 70 0 12 0 70 0 13 0 70 0 14 0 70 0 15 0 70 0 16 0 70 0 17 0 70 0 18 0 70 0 19 0 23 0 20 0 70 0 21 0 70 0 24 0 70 0 25 0 70 0 26 0 70 0 27 0 23 0 28 0 70 0 29 0 70 0 30 0 70 0 31 0 23 0 32 0 70 0 33 0 70 0 34 0 70 0 35 0 23 0 36 0 70 0 37 0 70 0 38 0 70 0 39 0 70 0 40 0 70 0 41 0 70 0 42 0 70 0 43 0 70 0 44 0 70 0 45 0 70 0 46 0 70 0 47 0 70 0 48 0 70 0 50 0 70 0 51 0 70 0 56 0 70 0 57 0 70 0 61 0 70 0 62 0 70 0 65 0 70 0 69 0 70 0 70 0 23 0 77 0 70 0 81 0 70 0 82 0 23 0 85 0 23 0 86 0 23 0 87 0 23 0 88 0 23 0 89 0 23 0 90 0 23 0 91 0 23 0 92 0 23 0 93 0 23 0 94 0 23 0 95 0 23 0 96 0 23 0 97 0 23 0 98 0 23 0 99 0 23 0 100 0 23 0 101 0 23 0 102 0 23 0 103 0 23 0 104 0 23 0 105 0 23 0 106 0 23 0 107 0 23 0 108 0 23 0 109 0 23 0 110 0 23 0 111 0 23 0 112 0 23 0 113 0 23 0 114 0 23 0 115 0 70 0 122 0 70 0 125 0 70 0 126 0 70 0 129 0 70 0 132 0 70 0 133 0 70 0 134 0 70 0 135 0 23 0 137] 
#[1 0 150 0 1 0 150 0 2 0 150 0 4 0 150 0 6 0 150 0 7 0 27 0 9 0 150 0 10 0 150 0 11 0 150 0 13 0 150 0 16 0 150 0 17 0 27 0 20 0 150 0 21 0 150 0 24 0 150 0 26 0 150 0 27 0 27 0 28 0 150 0 29 0 150 0 31 0 27 0 32 0 150 0 33 0 150 0 34 0 150 0 35 0 27 0 36 0 150 0 37 0 150 0 38 0 150 0 39 0 150 0 41 0 150 0 42 0 150 0 43 0 150 0 44 0 150 0 46 0 150 0 48 0 150 0 50 0 150 0 56 0 150 0 57 0 150 0 61 0 150 0 62 0 150 0 65 0 150 0 69 0 150 0 70 0 27 0 77 0 150 0 81 0 150 0 82 0 27 0 85 0 27 0 86 0 27 0 87 0 27 0 88 0 27 0 89 0 27 0 90 0 27 0 91 0 27 0 92 0 27 0 93 0 27 0 94 0 27 0 95 0 27 0 96 0 27 0 97 0 27 0 98 0 27 0 99 0 27 0 100 0 27 0 101 0 27 0 102 0 27 0 103 0 27 0 104 0 27 0 105 0 27 0 106 0 27 0 107 0 27 0 108 0 27 0 109 0 27 0 110 0 27 0 111 0 27 0 112 0 27 0 113 0 27 0 114 0 27 0 115 0 150 0 122 0 150 0 125 0 150 0 126 0 150 0 129 0 150 0 132 0 150 0 133 0 150 0 134 0 150 0 135 0 27 0 137] 
#[1 0 154 0 1 0 154 0 2 0 154 0 4 0 154 0 5 0 154 0 6 0 154 0 7 0 154 0 8 0 31 0 9 0 154 0 10 0 154 0 11 0 154 0 12 0 154 0 13 0 154 0 14 0 154 0 15 0 154 0 16 0 154 0 17 0 154 0 18 0 154 0 19 0 31 0 20 0 154 0 21 0 154 0 24 0 154 0 25 0 154 0 26 0 154 0 27 0 31 0 28 0 154 0 29 0 154 0 30 0 154 0 31 0 31 0 32 0 154 0 33 0 154 0 34 0 154 0 35 0 31 0 36 0 154 0 37 0 154 0 38 0 154 0 39 0 154 0 40 0 154 0 41 0 154 0 42 0 154 0 43 0 154 0 44 0 154 0 45 0 154 0 46 0 154 0 47 0 154 0 48 0 154 0 50 0 154 0 51 0 154 0 56 0 154 0 57 0 154 0 61 0 154 0 62 0 154 0 65 0 154 0 69 0 154 0 70 0 31 0 77 0 154 0 81 0 154 0 82 0 31 0 85 0 31 0 86 0 31 0 87 0 31 0 88 0 31 0 89 0 31 0 90 0 31 0 91 0 31 0 92 0 31 0 93 0 31 0 94 0 31 0 95 0 31 0 96 0 31 0 97 0 31 0 98 0 31 0 99 0 31 0 100 0 31 0 101 0 31 0 102 0 31 0 103 0 31 0 104 0 31 0 105 0 31 0 106 0 31 0 107 0 31 0 108 0 31 0 109 0 31 0 110 0 31 0 111 0 31 0 112 0 31 0 113 0 31 0 114 0 31 0 115 0 154 0 122 0 154 0 125 0 154 0 126 0 154 0 129 0 154 0 132 0 154 0 133 0 154 0 134 0 154 0 135 0 31 0 137] 
#[1 0 158 0 1 0 158 0 2 0 158 0 4 0 158 0 5 0 158 0 6 0 158 0 7 0 158 0 8 0 35 0 9 0 158 0 10 0 158 0 11 0 158 0 12 0 158 0 13 0 158 0 14 0 158 0 15 0 158 0 16 0 158 0 17 0 158 0 18 0 158 0 19 0 35 0 20 0 158 0 21 0 158 0 24 0 158 0 25 0 158 0 26 0 158 0 27 0 35 0 28 0 158 0 29 0 158 0 30 0 158 0 31 0 35 0 32 0 158 0 33 0 158 0 34 0 158 0 35 0 35 0 36 0 158 0 37 0 158 0 38 0 158 0 39 0 158 0 40 0 158 0 41 0 158 0 42 0 158 0 43 0 158 0 44 0 158 0 45 0 158 0 46 0 158 0 47 0 158 0 48 0 158 0 50 0 158 0 51 0 158 0 56 0 158 0 57 0 158 0 61 0 158 0 62 0 158 0 65 0 158 0 69 0 158 0 70 0 35 0 77 0 158 0 81 0 158 0 82 0 35 0 85 0 35 0 86 0 35 0 87 0 35 0 88 0 35 0 89 0 35 0 90 0 35 0 91 0 35 0 92 0 35 0 93 0 35 0 94 0 35 0 95 0 35 0 96 0 35 0 97 0 35 0 98 0 35 0 99 0 35 0 100 0 35 0 101 0 35 0 102 0 35 0 103 0 35 0 104 0 35 0 105 0 35 0 106 0 35 0 107 0 35 0 108 0 35 0 109 0 35 0 110 0 35 0 111 0 35 0 112 0 35 0 113 0 35 0 114 0 35 0 115 0 158 0 122 0 158 0 125 0 158 0 126 0 158 0 129 0 158 0 132 0 158 0 133 0 158 0 134 0 158 0 135 0 35 0 137] 
#[1 0 162 0 1 0 162 0 2 0 162 0 4 0 162 0 5 0 162 0 6 0 162 0 7 0 162 0 8 0 39 0 9 0 162 0 10 0 162 0 11 0 162 0 12 0 162 0 13 0 162 0 14 0 162 0 15 0 162 0 16 0 162 0 17 0 162 0 18 0 162 0 19 0 39 0 20 0 162 0 21 0 162 0 24 0 162 0 25 0 162 0 26 0 162 0 27 0 39 0 28 0 162 0 29 0 162 0 30 0 162 0 31 0 39 0 32 0 162 0 33 0 162 0 34 0 162 0 35 0 39 0 36 0 162 0 37 0 162 0 38 0 162 0 39 0 162 0 40 0 162 0 41 0 162 0 42 0 162 0 43 0 162 0 44 0 162 0 45 0 162 0 46 0 162 0 47 0 162 0 48 0 162 0 50 0 162 0 51 0 162 0 56 0 162 0 57 0 162 0 61 0 162 0 62 0 162 0 65 0 162 0 69 0 162 0 70 0 39 0 77 0 162 0 81 0 162 0 82 0 39 0 85 0 39 0 86 0 39 0 87 0 39 0 88 0 39 0 89 0 39 0 90 0 39 0 91 0 39 0 92 0 39 0 93 0 39 0 94 0 39 0 95 0 39 0 96 0 39 0 97 0 39 0 98 0 39 0 99 0 39 0 100 0 39 0 101 0 39 0 102 0 39 0 103 0 39 0 104 0 39 0 105 0 39 0 106 0 39 0 107 0 39 0 108 0 39 0 109 0 39 0 110 0 39 0 111 0 39 0 112 0 39 0 113 0 39 0 114 0 39 0 115 0 162 0 122 0 162 0 125 0 162 0 126 0 162 0 129 0 162 0 132 0 162 0 133 0 162 0 134 0 162 0 135 0 39 0 137] 
#[1 0 166 0 1 0 166 0 2 0 166 0 4 0 166 0 5 0 166 0 6 0 166 0 7 0 166 0 8 0 43 0 9 0 166 0 10 0 166 0 11 0 166 0 12 0 166 0 13 0 166 0 14 0 166 0 15 0 166 0 16 0 166 0 17 0 166 0 18 0 166 0 19 0 43 0 20 0 166 0 21 0 166 0 24 0 166 0 25 0 166 0 26 0 166 0 27 0 43 0 28 0 166 0 29 0 166 0 30 0 166 0 31 0 43 0 32 0 166 0 33 0 166 0 34 0 166 0 35 0 43 0 36 0 166 0 37 0 166 0 38 0 166 0 39 0 166 0 40 0 166 0 41 0 166 0 42 0 166 0 43 0 166 0 44 0 166 0 45 0 166 0 46 0 166 0 47 0 166 0 48 0 166 0 50 0 166 0 51 0 166 0 56 0 166 0 57 0 166 0 61 0 166 0 62 0 166 0 65 0 166 0 69 0 166 0 70 0 43 0 77 0 166 0 81 0 166 0 82 0 43 0 85 0 43 0 86 0 43 0 87 0 43 0 88 0 43 0 89 0 43 0 90 0 43 0 91 0 43 0 92 0 43 0 93 0 43 0 94 0 43 0 95 0 43 0 96 0 43 0 97 0 43 0 98 0 43 0 99 0 43 0 100 0 43 0 101 0 43 0 102 0 43 0 103 0 43 0 104 0 43 0 105 0 43 0 106 0 43 0 107 0 43 0 108 0 43 0 109 0 43 0 110 0 43 0 111 0 43 0 112 0 43 0 113 0 43 0 114 0 43 0 115 0 166 0 122 0 166 0 125 0 166 0 126 0 166 0 129 0 166 0 132 0 166 0 133 0 166 0 134 0 166 0 135 0 43 0 137] 
#[1 0 170 0 1 0 170 0 2 0 170 0 4 0 170 0 5 0 170 0 6 0 170 0 7 0 170 0 8 0 47 0 9 0 170 0 10 0 170 0 11 0 170 0 12 0 170 0 13 0 170 0 14 0 170 0 15 0 170 0 16 0 170 0 17 0 170 0 18 0 170 0 19 0 47 0 20 0 170 0 21 0 170 0 24 0 170 0 25 0 170 0 26 0 170 0 27 0 47 0 28 0 170 0 29 0 170 0 30 0 170 0 31 0 47 0 32 0 170 0 33 0 170 0 34 0 170 0 35 0 47 0 36 0 170 0 37 0 170 0 38 0 170 0 39 0 170 0 40 0 170 0 41 0 170 0 42 0 170 0 43 0 170 0 44 0 170 0 45 0 170 0 46 0 170 0 47 0 170 0 48 0 170 0 50 0 170 0 51 0 170 0 56 0 170 0 57 0 170 0 61 0 170 0 62 0 170 0 65 0 170 0 69 0 170 0 70 0 47 0 77 0 170 0 81 0 170 0 82 0 47 0 85 0 47 0 86 0 47 0 87 0 47 0 88 0 47 0 89 0 47 0 90 0 47 0 91 0 47 0 92 0 47 0 93 0 47 0 94 0 47 0 95 0 47 0 96 0 47 0 97 0 47 0 98 0 47 0 99 0 47 0 100 0 47 0 101 0 47 0 102 0 47 0 103 0 47 0 104 0 47 0 105 0 47 0 106 0 47 0 107 0 47 0 108 0 47 0 109 0 47 0 110 0 47 0 111 0 47 0 112 0 47 0 113 0 47 0 114 0 47 0 115 0 170 0 122 0 170 0 125 0 170 0 126 0 170 0 129 0 170 0 132 0 170 0 133 0 170 0 134 0 170 0 135 0 47 0 137] 
#[1 0 174 0 1 0 174 0 2 0 174 0 4 0 174 0 5 0 174 0 6 0 174 0 7 0 174 0 8 0 51 0 9 0 174 0 10 0 174 0 11 0 174 0 12 0 174 0 13 0 174 0 14 0 174 0 15 0 174 0 16 0 174 0 17 0 174 0 18 0 174 0 19 0 51 0 20 0 174 0 21 0 174 0 24 0 174 0 25 0 174 0 26 0 174 0 27 0 51 0 28 0 174 0 29 0 174 0 30 0 174 0 31 0 51 0 32 0 174 0 33 0 174 0 34 0 174 0 35 0 51 0 36 0 174 0 37 0 174 0 38 0 174 0 39 0 174 0 40 0 174 0 41 0 174 0 42 0 174 0 43 0 174 0 44 0 174 0 45 0 174 0 46 0 174 0 47 0 174 0 48 0 174 0 50 0 174 0 51 0 174 0 56 0 174 0 57 0 174 0 61 0 174 0 62 0 174 0 65 0 174 0 69 0 174 0 70 0 51 0 77 0 174 0 81 0 174 0 82 0 51 0 85 0 51 0 86 0 51 0 87 0 51 0 88 0 51 0 89 0 51 0 90 0 51 0 91 0 51 0 92 0 51 0 93 0 51 0 94 0 51 0 95 0 51 0 96 0 51 0 97 0 51 0 98 0 51 0 99 0 51 0 100 0 51 0 101 0 51 0 102 0 51 0 103 0 51 0 104 0 51 0 105 0 51 0 106 0 51 0 107 0 51 0 108 0 51 0 109 0 51 0 110 0 51 0 111 0 51 0 112 0 51 0 113 0 51 0 114 0 51 0 115 0 174 0 122 0 174 0 125 0 174 0 126 0 174 0 129 0 174 0 132 0 174 0 133 0 174 0 134 0 174 0 135 0 51 0 137] 
#[1 0 178 0 1 0 178 0 2 0 178 0 4 0 178 0 5 0 178 0 6 0 178 0 7 0 178 0 8 0 55 0 9 0 178 0 10 0 178 0 11 0 178 0 12 0 178 0 13 0 178 0 14 0 178 0 15 0 178 0 16 0 178 0 17 0 178 0 18 0 178 0 19 0 55 0 20 0 178 0 21 0 178 0 24 0 178 0 25 0 178 0 26 0 178 0 27 0 55 0 28 0 178 0 29 0 178 0 30 0 178 0 31 0 55 0 32 0 178 0 33 0 178 0 34 0 178 0 35 0 55 0 36 0 178 0 37 0 178 0 38 0 178 0 39 0 178 0 40 0 178 0 41 0 178 0 42 0 178 0 43 0 178 0 44 0 178 0 45 0 178 0 46 0 178 0 47 0 178 0 48 0 178 0 50 0 178 0 51 0 178 0 56 0 178 0 57 0 178 0 61 0 178 0 62 0 178 0 65 0 178 0 69 0 178 0 70 0 55 0 77 0 178 0 81 0 178 0 82 0 55 0 85 0 55 0 86 0 55 0 87 0 55 0 88 0 55 0 89 0 55 0 90 0 55 0 91 0 55 0 92 0 55 0 93 0 55 0 94 0 55 0 95 0 55 0 96 0 55 0 97 0 55 0 98 0 55 0 99 0 55 0 100 0 55 0 101 0 55 0 102 0 55 0 103 0 55 0 104 0 55 0 105 0 55 0 106 0 55 0 107 0 55 0 108 0 55 0 109 0 55 0 110 0 55 0 111 0 55 0 112 0 55 0 113 0 55 0 114 0 55 0 115 0 178 0 122 0 178 0 125 0 178 0 126 0 178 0 129 0 178 0 132 0 178 0 133 0 178 0 134 0 178 0 135 0 55 0 137] 
#[1 0 182 0 1 0 182 0 2 0 182 0 4 0 182 0 5 0 182 0 6 0 182 0 7 0 182 0 8 0 59 0 9 0 182 0 10 0 182 0 11 0 182 0 12 0 182 0 13 0 182 0 14 0 182 0 15 0 182 0 16 0 182 0 17 0 182 0 18 0 182 0 19 0 59 0 20 0 182 0 21 0 182 0 24 0 182 0 25 0 182 0 26 0 182 0 27 0 59 0 28 0 182 0 29 0 182 0 30 0 182 0 31 0 59 0 32 0 182 0 33 0 182 0 34 0 182 0 35 0 59 0 36 0 182 0 37 0 182 0 38 0 182 0 39 0 182 0 40 0 182 0 41 0 182 0 42 0 182 0 43 0 182 0 44 0 182 0 45 0 182 0 46 0 182 0 47 0 182 0 48 0 182 0 50 0 182 0 51 0 182 0 56 0 182 0 57 0 182 0 61 0 182 0 62 0 182 0 65 0 182 0 69 0 182 0 70 0 59 0 77 0 182 0 81 0 182 0 82 0 59 0 85 0 59 0 86 0 59 0 87 0 59 0 88 0 59 0 89 0 59 0 90 0 59 0 91 0 59 0 92 0 59 0 93 0 59 0 94 0 59 0 95 0 59 0 96 0 59 0 97 0 59 0 98 0 59 0 99 0 59 0 100 0 59 0 101 0 59 0 102 0 59 0 103 0 59 0 104 0 59 0 105 0 59 0 106 0 59 0 107 0 59 0 108 0 59 0 109 0 59 0 110 0 59 0 111 0 59 0 112 0 59 0 113 0 59 0 114 0 59 0 115 0 182 0 122 0 182 0 125 0 182 0 126 0 182 0 129 0 182 0 132 0 182 0 133 0 182 0 134 0 182 0 135 0 59 0 137] 
#[0 0 238 0 41 0 56 0 57 0 62 0 65 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 0 242 0 41 0 56 0 57 0 62 0 65 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[1 0 246 0 9 0 250 0 41 0 250 0 56 0 250 0 57 0 250 0 62 0 250 0 65 0 250 0 77 0 250 0 81 0 250 0 82 0 250 0 85 0 250 0 86 0 250 0 87 0 250 0 88 0 250 0 89 0 250 0 90 0 250 0 91 0 250 0 92 0 250 0 93 0 250 0 94 0 250 0 95 0 250 0 96 0 250 0 97 0 250 0 98 0 250 0 99 0 250 0 100 0 250 0 101 0 250 0 102 0 250 0 103 0 250 0 104 0 250 0 105 0 250 0 106 0 250 0 107 0 250 0 108 0 250 0 109 0 250 0 110 0 250 0 111 0 250 0 112 0 250 0 113 0 250 0 114 0 250 0 115 0 250 0 137] 
#[1 0 254 0 9 0 63 0 20 0 254 0 27 1 2 0 28] 
#[1 1 193 0 28 1 197 1 163] 
#[1 1 201 0 9 1 205 1 25] 
#[1 0 15 0 41 0 22 0 56 0 22 0 57 0 22 0 62 0 22 0 65 0 22 0 81 0 22 0 82 0 22 0 85 0 22 0 86 0 22 0 87 0 22 0 88 0 22 0 89 0 22 0 90 0 22 0 91 0 22 0 92 0 22 0 93 0 22 0 94 0 22 0 95 0 22 0 96 0 22 0 97 0 22 0 98 0 22 0 99 0 22 0 100 0 22 0 101 0 22 0 102 0 15 0 103 0 22 0 104 0 22 0 105 0 22 0 106 0 22 0 107 0 22 0 108 0 22 0 109 0 22 0 110 0 22 0 111 0 22 0 112 0 22 0 113 0 22 0 114 0 22 0 115 0 22 0 137 1 209 0 146 0 121 0 234 0 29 0 236 0 125 1 149 0 22 1 199] 
#[1 0 10 0 41 0 10 0 56 0 10 0 57 0 10 0 62 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 1 121 0 145 1 125 0 234 0 29 0 236 1 6 1 199] 
#[1 0 15 0 41 0 22 0 56 0 22 0 57 0 22 0 62 0 22 0 65 0 22 0 81 0 22 0 82 0 22 0 85 0 22 0 86 0 22 0 87 0 22 0 88 0 22 0 89 0 22 0 90 0 22 0 91 0 22 0 92 0 22 0 93 0 22 0 94 0 22 0 95 0 22 0 96 0 22 0 97 0 22 0 98 0 22 0 99 0 22 0 100 0 22 0 101 0 22 0 102 0 15 0 103 0 22 0 104 0 22 0 105 0 22 0 106 0 22 0 107 0 22 0 108 0 22 0 109 0 22 0 110 0 22 0 111 0 22 0 112 0 22 0 113 0 22 0 114 0 22 0 115 0 22 0 137 1 213 0 146 0 121 0 234 0 29 0 236 0 125 1 149 0 22 1 199] 
#[1 0 15 0 41 0 22 0 56 0 22 0 57 0 22 0 62 0 22 0 65 0 22 0 81 0 22 0 82 0 22 0 85 0 22 0 86 0 22 0 87 0 22 0 88 0 22 0 89 0 22 0 90 0 22 0 91 0 22 0 92 0 22 0 93 0 22 0 94 0 22 0 95 0 22 0 96 0 22 0 97 0 22 0 98 0 22 0 99 0 22 0 100 0 22 0 101 0 22 0 102 0 15 0 103 0 22 0 104 0 22 0 105 0 22 0 106 0 22 0 107 0 22 0 108 0 22 0 109 0 22 0 110 0 22 0 111 0 22 0 112 0 22 0 113 0 22 0 114 0 22 0 115 0 22 0 137 1 217 0 146 0 121 0 234 0 29 0 236 0 125 1 149 0 22 1 199] 
#[1 0 11 0 41 0 14 0 56 0 14 0 57 0 14 0 62 0 14 0 65 0 14 0 81 0 14 0 82 0 14 0 85 0 14 0 86 0 14 0 87 0 14 0 88 0 14 0 89 0 11 0 90 0 14 0 91 0 14 0 92 0 14 0 93 0 14 0 94 0 14 0 95 0 14 0 96 0 11 0 97 0 14 0 98 0 14 0 99 0 14 0 100 0 14 0 101 0 14 0 102 0 14 0 103 0 14 0 104 0 14 0 105 0 14 0 106 0 14 0 107 0 14 0 108 0 14 0 109 0 14 0 110 0 14 0 111 0 14 0 112 0 14 0 113 0 14 0 114 0 14 0 115 0 14 0 137 1 221 0 144 0 61 0 234 0 29 0 236 0 65 1 140 0 69 1 141 0 73 1 148 0 14 1 199] 
#[1 0 10 0 41 0 10 0 56 0 10 0 57 0 10 0 62 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 1 121 0 145 1 125 0 234 0 29 0 236 1 10 1 199] 
#[1 0 15 0 41 0 22 0 56 0 22 0 57 0 22 0 62 0 22 0 65 0 22 0 81 0 22 0 82 0 22 0 85 0 22 0 86 0 22 0 87 0 22 0 88 0 22 0 89 0 22 0 90 0 22 0 91 0 22 0 92 0 22 0 93 0 22 0 94 0 22 0 95 0 22 0 96 0 22 0 97 0 22 0 98 0 22 0 99 0 22 0 100 0 22 0 101 0 22 0 102 0 15 0 103 0 22 0 104 0 22 0 105 0 22 0 106 0 22 0 107 0 22 0 108 0 22 0 109 0 22 0 110 0 22 0 111 0 22 0 112 0 22 0 113 0 22 0 114 0 22 0 115 0 22 0 137 1 225 0 146 0 121 0 234 0 29 0 236 0 125 1 149 0 22 1 199] 
#[0 1 14 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 1 229 0 56 1 233 0 57 1 237 0 62 1 241 0 65 2 37 0 81 2 81 0 82 1 253 0 85 2 69 0 86 2 69 0 87 2 69 0 88 1 29 0 89 2 69 0 90 2 1 0 91 2 5 0 92 2 69 0 93 2 9 0 94 2 13 0 95 2 69 0 96 2 69 0 97 2 69 0 98 2 17 0 99 2 69 0 100 2 69 0 101 2 21 0 102 2 69 0 103 2 69 0 104 2 25 0 105 2 69 0 106 2 29 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 2 33 0 147 2 37 0 153 2 41 0 158 2 45 0 182 2 49 0 190 2 53 0 194 2 57 0 207 2 61 0 208 2 65 0 222 2 69 1 94 2 73 1 97 2 77 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 93 1 170 2 97 1 173 2 105 1 174 2 105 1 175 2 69 1 198] 
#[1 1 161 0 118 1 161 0 119 1 161 0 120 1 161 0 123 1 161 0 127 1 161 0 130 1 157 0 254 1 161 0 255 2 109 1 153 1 161 1 190] 
#[0 1 18 0 27 0 68 0 86 0 88 0 111 0 114 0 118 0 119 0 120 0 123 0 127 0 130] 
#[0 1 22 0 27 0 68 0 86 0 88 0 111 0 114 0 118 0 119 0 120 0 123 0 127 0 130] 
#[0 1 26 0 27 0 68 0 86 0 88 0 111 0 114 0 118 0 119 0 120 0 123 0 127 0 130] 
#[0 1 30 0 27 0 68 0 86 0 88 0 111 0 114 0 118 0 119 0 120 0 123 0 127 0 130] 
#[0 1 34 0 27 0 68 0 86 0 88 0 111 0 114 0 118 0 119 0 120 0 123 0 127 0 130] 
#[0 1 38 0 27 0 68 0 86 0 88 0 111 0 114 0 118 0 119 0 120 0 123 0 127 0 130] 
#[0 1 42 0 27 0 68 0 86 0 88 0 111 0 114] 
#[1 1 46 0 27 1 46 0 68 1 46 0 86 1 46 0 88 1 46 0 111 1 46 0 114 2 113 0 118 2 113 0 119 2 113 0 120 2 113 0 123 2 113 0 127 2 113 0 130 2 113 1 190] 
#[1 1 50 0 27 1 50 0 111 1 50 0 114 2 117 1 143] 
#[0 1 54 0 27 0 68 0 86 0 88 0 111 0 114 0 118 0 119 0 120 0 123 0 127 0 130] 
#[1 1 58 0 27 1 58 0 68 1 58 0 86 1 58 0 88 1 58 0 111 1 58 0 114 2 121 1 155] 
#[1 1 50 0 27 2 125 0 86 2 129 0 88 1 50 0 111 1 50 0 114 2 133 1 143] 
#[1 1 62 0 10 2 137 0 20 1 62 0 27 1 62 0 33 2 141 1 138] 
#[0 1 66 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 2 145 0 71 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 1 13 1 94 2 149 1 95 2 153 1 97 1 13 1 198] 
#[1 2 81 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 2 201 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 205 1 164 2 97 1 173 2 105 1 174 2 105 1 175] 
#[1 1 70 0 9 2 209 0 20 1 70 0 27] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 2 225 0 10 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 97 0 238 3 101 0 242 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 177 1 26 3 181 1 29 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 4 17 1 95 4 37 1 96 1 81 1 97 4 25 1 129 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 1 74 0 41 0 56 0 57 0 62 0 65 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[1 0 10 0 41 0 10 0 56 0 10 0 57 0 10 0 62 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 1 121 0 145 1 125 0 234 0 29 0 236 1 78 1 199] 
#[1 0 10 0 41 0 10 0 56 0 10 0 57 0 10 0 62 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 1 121 0 145 1 125 0 234 0 29 0 236 1 82 1 199] 
#[1 0 10 0 41 0 10 0 56 0 10 0 57 0 10 0 62 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 1 121 0 145 1 125 0 234 0 29 0 236 1 86 1 199] 
#[1 0 15 0 41 0 22 0 56 0 22 0 57 0 22 0 62 0 22 0 65 0 22 0 81 0 22 0 82 0 22 0 85 0 22 0 86 0 22 0 87 0 22 0 88 0 22 0 89 0 22 0 90 0 22 0 91 0 22 0 92 0 22 0 93 0 22 0 94 0 22 0 95 0 22 0 96 0 22 0 97 0 22 0 98 0 22 0 99 0 22 0 100 0 22 0 101 0 22 0 102 0 15 0 103 0 22 0 104 0 22 0 105 0 22 0 106 0 22 0 107 0 22 0 108 0 22 0 109 0 22 0 110 0 22 0 111 0 22 0 112 0 22 0 113 0 22 0 114 0 22 0 115 0 22 0 137 4 53 0 146 0 121 0 234 0 29 0 236 0 125 1 149 0 22 1 199] 
#[1 0 10 0 41 0 10 0 56 0 10 0 57 0 10 0 62 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 1 121 0 145 1 125 0 234 0 29 0 236 1 90 1 199] 
#[1 4 65 0 89 4 65 0 108 4 65 0 109 4 65 0 110 4 65 0 111 4 65 0 112 4 65 0 113 4 65 0 114 4 65 0 115 4 65 0 137 4 57 0 181 4 61 0 189 4 65 1 97] 
#[1 2 81 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 69 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 4 73 0 200 4 77 0 203 1 13 1 94 4 81 1 95 2 73 1 97 4 85 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 1 13 1 198] 
#[0 4 89 0 89 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 97] 
#[1 2 81 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 69 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 4 93 0 200 4 77 0 203 1 13 1 94 4 81 1 95 2 73 1 97 4 97 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 1 13 1 198] 
#[0 1 94 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 1 98 0 10 0 16 0 27 0 35 0 43 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 134 0 137] 
#[1 0 54 0 9 0 54 0 28 4 101 0 56] 
#[1 0 78 0 9 0 67 0 28 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 4 109 0 113 1 13 0 114 1 13 0 115 1 13 0 137 4 113 0 231 1 13 1 94 4 117 1 95 1 13 1 198] 
#[1 0 82 0 9 0 82 0 28 4 121 0 65 4 125 0 81 2 81 0 82 2 69 0 85 2 69 0 86 2 69 0 87 2 69 0 88 1 29 0 89 2 69 0 90 2 69 0 91 2 69 0 92 2 69 0 93 2 9 0 94 2 13 0 95 2 69 0 96 2 69 0 97 2 69 0 98 2 69 0 99 2 69 0 100 2 69 0 101 2 69 0 102 2 69 0 103 2 69 0 104 2 25 0 105 2 69 0 106 2 69 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 4 125 0 152 4 125 0 153 4 133 0 158 4 137 0 207 4 141 0 208 2 69 1 94 2 73 1 97 2 77 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 2 69 1 198] 
#[1 0 71 0 9 0 75 0 28 4 149 0 36 1 102 0 85 1 102 0 86 1 102 0 87 1 102 0 88 1 102 0 89 1 102 0 90 1 102 0 91 1 102 0 92 1 102 0 93 1 102 0 94 1 102 0 95 1 102 0 96 1 102 0 97 1 102 0 98 1 102 0 99 1 102 0 100 1 102 0 101 1 102 0 102 1 102 0 103 1 102 0 104 1 102 0 105 1 102 0 106 1 102 0 107 1 102 0 108 1 102 0 109 1 102 0 110 1 102 0 111 1 102 0 112 1 102 0 113 1 102 0 114 1 102 0 115 1 102 0 137 4 153 0 231 4 157 1 176] 
#[1 0 98 0 9 0 98 0 28 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 4 161 1 95 1 13 1 198] 
#[1 0 114 0 9 0 114 0 28 4 165 0 65 4 169 0 81 2 81 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 4 169 0 153 2 73 1 97 4 169 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[1 0 126 0 9 0 126 0 28 4 177 0 89 4 177 0 108 4 177 0 109 4 177 0 110 4 177 0 111 4 177 0 112 4 177 0 113 4 177 0 114 4 177 0 115 4 177 0 137 4 177 1 97] 
#[1 0 138 0 9 0 138 0 28 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 4 181 1 95 1 13 1 198] 
#[1 0 146 0 9 0 146 0 28 2 81 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 69 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 1 13 1 94 4 201 1 95 4 189 1 97 4 193 1 158 2 81 1 160 2 81 1 161 2 89 1 162 4 197 1 171 4 201 1 172 2 97 1 173 2 105 1 174 2 105 1 175 1 13 1 198] 
#[0 1 106 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 4 205 1 95 1 13 1 198] 
#[1 4 209 0 34 4 213 0 110 4 217 0 115 4 221 0 134 4 225 0 160 4 229 0 161] 
#[0 1 110 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 1 114 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 1 118 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 4 209 0 34 4 213 0 110 4 217 0 115 4 221 0 134 4 233 0 160 4 229 0 161] 
#[1 4 209 0 34 4 213 0 110 4 217 0 115 4 221 0 134 4 237 0 160 4 229 0 161] 
#[0 1 122 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 4 241 0 9 4 105 0 28 4 245 0 162 3 89 0 163 3 93 0 231] 
#[1 1 2 0 1 1 2 0 2 1 2 0 4 1 2 0 6 1 2 0 7 1 2 0 9 1 2 0 10 1 2 0 11 1 2 0 13 1 2 0 16 1 2 0 17 0 79 0 20 1 2 0 21 1 2 0 24 1 2 0 26 1 2 0 27 1 2 0 28 1 2 0 29 1 2 0 31 1 2 0 33 1 2 0 34 1 2 0 35 1 2 0 36 1 2 0 37 1 2 0 38 1 2 0 39 1 2 0 42 1 2 0 43 1 2 0 44 1 2 0 46 1 2 0 48 1 2 0 50 1 2 0 55 1 2 0 61 1 2 0 70 1 2 0 77 1 2 0 84 1 2 0 85 1 2 0 86 1 2 0 87 1 2 0 88 1 2 0 89 1 2 0 90 1 2 0 91 1 2 0 92 1 2 0 93 1 2 0 94 1 2 0 95 1 2 0 96 1 2 0 97 1 2 0 98 1 2 0 99 1 2 0 100 1 2 0 101 1 2 0 102 1 2 0 103 1 2 0 104 1 2 0 105 1 2 0 106 1 2 0 107 1 2 0 108 1 2 0 109 1 2 0 110 1 2 0 111 1 2 0 112 1 2 0 113 1 2 0 114 1 2 0 115 1 2 0 122 1 2 0 125 1 2 0 126 1 2 0 129 1 2 0 132 1 2 0 133 1 2 0 134 1 2 0 135 1 2 0 137] 
#[1 0 83 0 85 0 87 0 86 0 91 0 87 0 95 0 88 0 99 0 89 0 103 0 90 0 107 0 91 0 111 0 92 0 115 0 93 0 119 0 94 0 123 0 95 0 127 0 96 0 131 0 97 0 135 0 98 0 139 0 99 0 143 0 100 0 147 0 101 0 151 0 102 0 155 0 103 0 159 0 104 0 163 0 105 0 167 0 106 0 171 0 107 0 175 0 108 0 179 0 109 0 183 0 110 0 187 0 111 0 191 0 112 0 195 0 113 0 199 0 114 0 203 0 115 0 207 0 137 5 9 1 94 5 9 1 198] 
#[1 1 130 0 10 1 130 0 16 1 130 0 27 1 130 0 35 1 130 0 43 1 130 0 77 1 130 0 85 1 130 0 86 1 130 0 87 1 130 0 88 1 130 0 89 1 130 0 90 1 130 0 91 1 130 0 92 1 130 0 93 0 211 0 94 1 130 0 95 1 130 0 96 1 130 0 97 1 130 0 98 1 130 0 99 1 130 0 100 1 130 0 101 1 130 0 102 1 130 0 103 1 130 0 104 1 130 0 105 1 130 0 106 1 130 0 107 1 130 0 108 1 130 0 109 1 130 0 110 1 130 0 111 1 130 0 112 1 130 0 113 1 130 0 114 1 130 0 115 1 130 0 134 1 130 0 137 2 97 1 173 5 17 1 174] 
#[0 1 134 0 10 0 16 0 27 0 35 0 43 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 134 0 137] 
#[1 1 138 0 1 1 138 0 2 1 138 0 4 1 138 0 6 1 138 0 7 1 138 0 9 1 138 0 10 1 138 0 11 1 138 0 13 1 138 0 16 1 138 0 17 1 138 0 20 1 138 0 21 1 138 0 24 1 138 0 26 1 138 0 27 0 215 0 28 1 138 0 29 1 138 0 31 1 138 0 33 1 138 0 34 1 138 0 35 0 219 0 36 1 138 0 37 1 138 0 38 1 138 0 39 1 138 0 42 1 138 0 43 1 138 0 44 1 138 0 46 1 138 0 48 1 138 0 50 1 138 0 55 1 138 0 61 1 138 0 70 1 138 0 77 1 138 0 84 1 138 0 85 1 138 0 86 1 138 0 87 1 138 0 88 1 138 0 89 1 138 0 90 1 138 0 91 1 138 0 92 1 138 0 93 1 138 0 94 1 138 0 95 1 138 0 96 1 138 0 97 1 138 0 98 1 138 0 99 1 138 0 100 1 138 0 101 1 138 0 102 1 138 0 103 1 138 0 104 1 138 0 105 1 138 0 106 1 138 0 107 1 138 0 108 1 138 0 109 1 138 0 110 1 138 0 111 1 138 0 112 1 138 0 113 1 138 0 114 1 138 0 115 1 138 0 122 1 138 0 125 1 138 0 126 1 138 0 129 1 138 0 132 1 138 0 133 1 138 0 134 1 138 0 135 1 138 0 137 5 25 1 163] 
#[0 1 142 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 1 146 0 1 1 146 0 2 1 146 0 4 1 146 0 6 1 146 0 7 1 146 0 9 1 146 0 10 1 146 0 11 1 146 0 13 1 146 0 16 1 146 0 17 1 146 0 20 1 146 0 21 1 146 0 24 1 146 0 26 1 146 0 27 1 146 0 28 1 146 0 29 1 146 0 31 1 146 0 33 1 146 0 34 1 146 0 35 0 223 0 36 1 146 0 37 1 146 0 38 1 146 0 39 1 146 0 42 1 146 0 43 1 146 0 44 1 146 0 46 1 146 0 48 1 146 0 50 1 146 0 55 1 146 0 61 1 146 0 70 1 146 0 77 1 146 0 85 1 146 0 86 1 146 0 87 1 146 0 88 1 146 0 89 1 146 0 90 1 146 0 91 1 146 0 92 1 146 0 93 0 227 0 94 1 146 0 95 1 146 0 96 1 146 0 97 1 146 0 98 1 146 0 99 1 146 0 100 1 146 0 101 1 146 0 102 1 146 0 103 1 146 0 104 1 146 0 105 1 146 0 106 1 146 0 107 1 146 0 108 1 146 0 109 1 146 0 110 1 146 0 111 1 146 0 112 1 146 0 113 1 146 0 114 1 146 0 115 1 146 0 122 1 146 0 125 1 146 0 126 1 146 0 129 1 146 0 132 1 146 0 133 1 146 0 134 1 146 0 135 1 146 0 137 2 97 1 173 5 33 1 174] 
#[0 1 150 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 1 154 0 10 1 154 0 16 1 154 0 27 1 154 0 35 5 37 0 36 1 154 0 43 1 154 0 77 1 154 0 85 1 154 0 86 1 154 0 87 1 154 0 88 1 154 0 89 1 154 0 90 1 154 0 91 1 154 0 92 1 154 0 93 1 154 0 94 1 154 0 95 1 154 0 96 1 154 0 97 1 154 0 98 1 154 0 99 1 154 0 100 1 154 0 101 1 154 0 102 1 154 0 103 1 154 0 104 1 154 0 105 1 154 0 106 1 154 0 107 1 154 0 108 1 154 0 109 1 154 0 110 1 154 0 111 1 154 0 112 1 154 0 113 1 154 0 114 1 154 0 115 1 154 0 134 1 154 0 137] 
#[0 5 41 0 27] 
#[0 1 158 0 27 0 68 0 86 0 88 0 111 0 114 0 118 0 119 0 120 0 123 0 127 0 130] 
#[1 5 45 0 27 5 49 0 111 5 53 0 114 5 57 1 144] 
#[1 1 162 0 27 5 61 0 68 1 162 0 86 1 162 0 88 1 162 0 111 1 162 0 114 5 65 1 156] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 5 69 1 95 1 13 1 198] 
#[0 5 73 0 86] 
#[1 5 77 0 27 5 49 0 111 5 53 0 114 5 57 1 144] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 5 81 1 95 1 13 1 198] 
#[0 1 166 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 1 170 0 9 0 27 0 41 0 56 0 57 0 62 0 65 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 1 174 0 9 0 27 0 41 0 56 0 57 0 62 0 65 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[1 0 231 0 20 1 178 0 28] 
#[0 0 198 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 1 102 0 1 1 102 0 2 1 102 0 4 1 102 0 6 1 102 0 7 0 235 0 9 1 102 0 10 1 102 0 11 1 102 0 13 1 102 0 16 1 102 0 17 1 102 0 20 1 102 0 21 1 102 0 24 1 102 0 26 1 102 0 27 0 239 0 28 1 102 0 29 1 102 0 31 1 102 0 33 1 102 0 34 1 102 0 35 0 243 0 36 1 102 0 37 1 102 0 38 1 102 0 39 1 102 0 42 1 102 0 43 1 102 0 44 1 102 0 46 1 102 0 48 1 102 0 50 1 102 0 55 1 102 0 61 1 102 0 70 1 102 0 77 1 102 0 85 1 102 0 86 1 102 0 87 1 102 0 88 1 102 0 89 1 102 0 90 1 102 0 91 1 102 0 92 1 102 0 93 1 102 0 94 1 102 0 95 1 102 0 96 1 102 0 97 1 102 0 98 1 102 0 99 1 102 0 100 1 102 0 101 1 102 0 102 1 102 0 103 1 102 0 104 1 102 0 105 1 102 0 106 1 102 0 107 1 102 0 108 1 102 0 109 1 102 0 110 1 102 0 111 1 102 0 112 1 102 0 113 1 102 0 114 1 102 0 115 1 102 0 122 1 102 0 125 1 102 0 126 1 102 0 129 1 102 0 132 1 102 0 133 1 102 0 134 1 102 0 135 1 102 0 137 4 153 0 231 4 157 1 176] 
#[0 0 202 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 206 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 210 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 214 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 218 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 222 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 226 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 230 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 0 234 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 63 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 1 182 0 16 1 182 0 35 5 89 1 166] 
#[0 5 93 0 35] 
#[1 5 97 0 71 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 5 101 1 95 1 13 1 198] 
#[0 1 186 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[1 5 173 0 4 5 173 0 6 5 173 0 11 5 173 0 13 5 173 0 17 5 173 0 24 5 173 0 28 5 173 0 29 5 173 0 31 5 173 0 33 5 145 0 35 5 149 0 42 5 173 0 44 5 173 0 46 5 173 0 49 5 173 0 50 5 169 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 5 173 0 205 5 173 0 206 5 173 1 55 5 173 1 65 5 173 1 69 5 173 1 73 5 173 1 77 1 13 1 94 5 201 1 95 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 5 205 0 10 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 0 10 0 41 5 209 0 42 3 253 0 49 0 247 0 57 3 1 0 64 0 10 0 65 3 5 0 71 3 9 0 72 3 13 0 75 0 251 0 77 3 21 0 78 3 25 0 79 0 10 0 81 0 10 0 82 0 255 0 85 1 3 0 86 1 7 0 87 1 11 0 88 1 15 0 89 1 19 0 90 1 23 0 91 1 27 0 92 1 31 0 93 1 35 0 94 1 39 0 95 1 43 0 96 1 47 0 97 1 51 0 98 1 55 0 99 1 59 0 100 1 63 0 101 1 67 0 102 1 71 0 103 1 75 0 104 1 79 0 105 1 83 0 106 1 87 0 107 1 91 0 108 1 95 0 109 1 99 0 110 1 103 0 111 1 107 0 112 1 111 0 113 1 115 0 114 1 119 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 5 213 0 134 1 123 0 137 3 85 0 162 3 89 0 163 5 217 0 164 5 221 0 167 5 221 0 168 5 221 0 171 5 233 0 174 3 93 0 231 5 237 0 234 0 29 0 236 5 241 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 1 190 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 41 0 42 0 43 0 44 0 46 0 48 0 50 0 56 0 57 0 61 0 62 0 65 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 1 194 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 1 198 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 1 202 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[1 0 10 0 41 2 81 0 82 1 127 0 89 2 161 0 94 1 131 0 108 1 135 0 109 1 139 0 110 1 143 0 111 1 147 0 112 1 151 0 113 1 155 0 114 1 159 0 115 1 163 0 137 5 249 0 230 5 253 0 234 0 29 0 236 2 73 1 97 2 201 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 205 1 164 2 97 1 173 2 105 1 174 2 105 1 175] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 6 1 0 22 6 5 0 23 2 241 0 28 2 245 0 42 6 9 0 43 3 253 0 49 2 253 0 57 3 1 0 64 6 13 0 67 6 17 0 68 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 21 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 25 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 6 29 1 2 6 33 1 5 6 37 1 6 6 41 1 7 6 45 1 8 6 49 1 9 6 53 1 10 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 1 206 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[1 1 193 0 28 6 57 0 42 1 81 0 89 1 81 0 108 1 81 0 109 1 81 0 110 1 81 0 111 1 81 0 112 1 81 0 113 1 81 0 114 1 81 0 115 6 61 0 134 1 81 0 137 6 69 1 96 1 81 1 97 1 85 1 162 6 65 1 163 6 69 1 188] 
#[0 1 210 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 1 81 0 89 1 81 0 108 1 81 0 109 1 81 0 110 1 81 0 111 1 81 0 112 1 81 0 113 1 81 0 114 1 81 0 115 1 81 0 137 6 73 1 96 1 81 1 97 1 85 1 162 6 73 1 188] 
#[0 1 214 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 113 0 2 6 129 0 4 6 81 0 6 1 201 0 9 6 129 0 11 6 125 0 13 6 125 0 17 6 85 0 20 6 129 0 24 6 89 0 28 6 121 0 29 6 117 0 31 6 113 0 33 5 145 0 35 6 97 0 42 6 101 0 44 6 105 0 46 6 129 0 50 6 133 1 25 6 113 1 51 6 117 1 55 6 121 1 69 6 125 1 73 6 129 1 77 6 133 1 88 6 137 1 92 6 141 1 163] 
#[0 1 218 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 145 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 1 222 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 1 167 0 1 0 150 0 2 2 217 0 3 0 150 0 4 0 150 0 5 0 150 0 6 0 150 0 7 0 150 0 8 1 171 0 9 0 150 0 10 0 150 0 11 0 150 0 12 0 150 0 13 1 175 0 14 0 150 0 15 0 150 0 16 1 179 0 17 1 183 0 18 0 150 0 19 0 27 0 20 0 150 0 21 0 150 0 24 0 150 0 25 0 150 0 26 0 150 0 27 1 187 0 28 0 150 0 29 0 150 0 30 0 150 0 31 0 150 0 32 0 150 0 33 0 150 0 34 0 150 0 35 0 150 0 36 0 150 0 37 0 150 0 38 0 150 0 39 0 150 0 40 1 191 0 42 0 150 0 43 0 150 0 44 0 150 0 45 0 150 0 46 0 150 0 47 0 150 0 48 3 253 0 49 0 150 0 50 0 150 0 51 2 253 0 57 0 150 0 61 3 1 0 64 0 150 0 70 3 5 0 71 3 9 0 72 6 149 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 195 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 199 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 203 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 0 150 0 122 3 57 0 123 3 61 0 124 0 150 0 125 0 150 0 126 3 65 0 127 3 69 0 128 0 150 0 129 3 73 0 130 3 77 0 131 0 150 0 132 0 150 0 133 1 207 0 134 0 150 0 135 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 6 153 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 6 153 1 83 6 153 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 1 226 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 1 230 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 1 234 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[0 1 238 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[0 1 242 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 161 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 1 246 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 165 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 1 250 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 169 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 1 254 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 173 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 6 1 0 22 6 5 0 23 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 6 13 0 67 6 17 0 68 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 21 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 6 177 0 135 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 25 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 6 181 1 2 6 33 1 5 6 37 1 6 6 41 1 7 6 45 1 8 6 49 1 9 6 53 1 10 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 6 185 0 34 6 189 0 110 6 193 0 115 4 221 0 134 6 205 0 161 6 201 1 15 6 205 1 20] 
#[0 2 2 0 10 0 16 0 26 0 27 0 32 0 34 0 36 0 43 0 110 0 115 0 134 0 135] 
#[1 4 241 0 9 6 209 0 163] 
#[1 2 6 0 10 2 6 0 16 6 213 0 244] 
#[1 2 10 0 10 2 10 0 16 6 217 1 28] 
#[1 1 211 0 1 2 18 0 2 2 18 0 4 2 18 0 6 2 18 0 7 1 211 0 9 2 18 0 10 2 18 0 11 2 18 0 13 2 18 0 16 2 18 0 17 1 211 0 20 2 18 0 21 2 18 0 24 2 18 0 26 2 18 0 27 1 211 0 28 2 18 0 29 2 18 0 31 2 18 0 33 2 18 0 34 2 18 0 35 1 211 0 36 1 211 0 37 2 18 0 38 2 18 0 39 1 211 0 42 2 18 0 43 2 18 0 44 2 18 0 46 2 18 0 48 2 18 0 50 2 18 0 61 2 18 0 70 2 18 0 86 2 18 0 110 2 18 0 115 2 18 0 122 2 18 0 125 2 18 0 126 2 18 0 129 2 18 0 132 2 18 0 133 2 18 0 134 2 18 0 135 6 221 1 34 6 225 1 85 6 229 1 91] 
#[0 2 22 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 26 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 30 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 34 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 38 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 42 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 46 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[1 2 50 0 1 2 50 0 2 2 50 0 4 2 50 0 6 2 50 0 7 2 50 0 9 2 50 0 10 2 50 0 11 2 50 0 13 2 50 0 16 2 50 0 17 2 50 0 20 2 50 0 21 2 50 0 24 2 50 0 26 2 50 0 27 2 50 0 28 2 50 0 29 2 50 0 31 2 50 0 33 2 50 0 34 2 50 0 35 2 50 0 36 2 50 0 37 2 50 0 38 2 50 0 39 2 50 0 42 2 50 0 43 2 50 0 44 2 50 0 46 2 50 0 48 2 50 0 50 2 50 0 61 2 50 0 70 2 50 0 86 2 50 0 110 2 50 0 115 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 2 50 0 122 3 57 0 123 3 61 0 124 2 50 0 125 2 50 0 126 3 65 0 127 3 69 0 128 2 50 0 129 3 73 0 130 3 77 0 131 2 50 0 132 2 50 0 133 2 50 0 134 2 50 0 135 6 233 0 252 4 45 1 191 4 49 1 194] 
#[0 2 54 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 58 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 62 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 66 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 70 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 74 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 78 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 82 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 86 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 237 0 10 6 241 0 16] 
#[1 2 10 0 10 2 10 0 16 6 245 1 28] 
#[1 2 90 0 1 2 90 0 2 2 90 0 4 2 90 0 6 2 90 0 7 2 90 0 9 2 90 0 10 2 90 0 11 2 90 0 13 2 90 0 16 2 90 0 17 2 90 0 20 1 215 0 21 2 90 0 24 2 90 0 26 2 90 0 27 2 90 0 28 2 90 0 29 2 90 0 31 2 90 0 33 2 90 0 34 2 90 0 35 2 90 0 36 2 90 0 37 2 90 0 38 2 90 0 39 2 90 0 42 2 90 0 43 2 90 0 44 2 90 0 46 2 90 0 48 2 90 0 50 2 90 0 61 2 90 0 70 2 90 0 86 2 90 0 110 2 90 0 115 2 90 0 122 2 90 0 125 2 90 0 126 2 90 0 129 2 90 0 132 2 90 0 133 2 90 0 134 2 90 0 135] 
#[1 2 94 0 1 2 94 0 2 2 94 0 4 2 94 0 6 2 94 0 7 2 94 0 9 2 94 0 10 2 94 0 11 2 94 0 13 2 94 0 16 2 94 0 17 2 94 0 20 1 219 0 21 2 94 0 24 2 94 0 26 2 94 0 27 2 94 0 28 2 94 0 29 2 94 0 31 2 94 0 33 2 94 0 34 2 94 0 35 2 94 0 36 2 94 0 37 1 223 0 38 2 94 0 39 2 94 0 42 2 94 0 43 2 94 0 44 2 94 0 46 2 94 0 48 2 94 0 50 2 94 0 61 2 94 0 70 2 94 0 86 2 94 0 110 2 94 0 115 2 94 0 122 2 94 0 125 2 94 0 126 2 94 0 129 2 94 0 132 2 94 0 133 2 94 0 134 2 94 0 135] 
#[1 2 98 0 1 2 98 0 2 2 98 0 4 2 98 0 6 2 98 0 7 2 98 0 9 2 98 0 10 2 98 0 11 2 98 0 13 2 98 0 16 2 98 0 17 2 98 0 20 2 98 0 21 2 98 0 24 2 98 0 26 2 98 0 27 2 98 0 28 2 98 0 29 2 98 0 31 2 98 0 33 2 98 0 34 2 98 0 35 1 227 0 36 2 98 0 37 2 98 0 38 2 98 0 39 2 98 0 42 2 98 0 43 2 98 0 44 2 98 0 46 2 98 0 48 2 98 0 50 2 98 0 61 2 98 0 70 2 98 0 86 2 98 0 110 2 98 0 115 2 98 0 122 2 98 0 125 2 98 0 126 2 98 0 129 2 98 0 132 2 98 0 133 2 98 0 134 2 98 0 135] 
#[1 2 102 0 1 2 102 0 2 2 102 0 4 2 102 0 6 2 102 0 7 2 102 0 9 2 102 0 10 2 102 0 11 2 102 0 13 2 102 0 16 2 102 0 17 2 102 0 20 2 102 0 21 2 102 0 24 2 102 0 26 2 102 0 27 2 102 0 28 2 102 0 29 2 102 0 31 2 102 0 33 2 102 0 34 2 102 0 35 2 102 0 36 2 102 0 37 2 102 0 38 1 231 0 39 2 102 0 42 2 102 0 43 2 102 0 44 2 102 0 46 2 102 0 48 2 102 0 50 2 102 0 61 2 102 0 70 2 102 0 86 2 102 0 110 2 102 0 115 2 102 0 122 2 102 0 125 2 102 0 126 2 102 0 129 2 102 0 132 2 102 0 133 2 102 0 134 2 102 0 135 7 13 1 40 7 17 1 41] 
#[1 2 106 0 1 2 106 0 2 2 106 0 4 2 106 0 6 2 106 0 7 2 106 0 9 2 106 0 10 2 106 0 11 2 106 0 13 2 106 0 16 2 106 0 17 2 106 0 20 2 106 0 21 2 106 0 24 2 106 0 26 2 106 0 27 2 106 0 28 2 106 0 29 2 106 0 31 2 106 0 33 2 106 0 34 2 106 0 35 2 106 0 36 2 106 0 37 2 106 0 38 2 106 0 39 2 106 0 42 2 106 0 43 2 106 0 44 2 106 0 46 1 235 0 48 2 106 0 50 2 106 0 61 2 106 0 70 2 106 0 86 2 106 0 110 2 106 0 115 2 106 0 122 2 106 0 125 2 106 0 126 2 106 0 129 2 106 0 132 2 106 0 133 2 106 0 134 2 106 0 135 7 25 1 43 7 29 1 44] 
#[1 2 110 0 1 2 110 0 2 2 110 0 4 2 110 0 6 1 239 0 7 2 110 0 9 2 110 0 10 2 110 0 11 2 110 0 13 2 110 0 16 2 110 0 17 2 110 0 20 2 110 0 21 2 110 0 24 2 110 0 26 2 110 0 27 2 110 0 28 2 110 0 29 2 110 0 31 2 110 0 33 2 110 0 34 2 110 0 35 2 110 0 36 2 110 0 37 2 110 0 38 2 110 0 39 2 110 0 42 2 110 0 43 2 110 0 44 2 110 0 46 2 110 0 48 2 110 0 50 2 110 0 61 2 110 0 70 2 110 0 86 2 110 0 110 2 110 0 115 2 110 0 122 2 110 0 125 2 110 0 126 2 110 0 129 2 110 0 132 2 110 0 133 2 110 0 134 2 110 0 135 7 37 1 46 7 41 1 47] 
#[1 2 114 0 1 1 243 0 2 2 114 0 4 2 114 0 6 2 114 0 7 2 114 0 9 2 114 0 10 2 114 0 11 2 114 0 13 2 114 0 16 2 114 0 17 2 114 0 20 2 114 0 21 2 114 0 24 2 114 0 26 2 114 0 27 2 114 0 28 2 114 0 29 2 114 0 31 1 247 0 33 2 114 0 34 2 114 0 35 2 114 0 36 2 114 0 37 2 114 0 38 2 114 0 39 2 114 0 42 2 114 0 43 2 114 0 44 2 114 0 46 2 114 0 48 2 114 0 50 2 114 0 61 2 114 0 70 2 114 0 86 2 114 0 110 2 114 0 115 2 114 0 122 2 114 0 125 2 114 0 126 2 114 0 129 2 114 0 132 2 114 0 133 2 114 0 134 2 114 0 135 7 45 1 49 7 49 1 50 7 53 1 51] 
#[1 2 118 0 1 2 118 0 2 2 118 0 4 2 118 0 6 2 118 0 7 2 118 0 9 2 118 0 10 2 118 0 11 2 118 0 13 2 118 0 16 2 118 0 17 2 118 0 20 2 118 0 21 2 118 0 24 2 118 0 26 2 118 0 27 1 251 0 28 2 118 0 29 1 255 0 31 2 118 0 33 2 118 0 34 2 3 0 35 2 118 0 36 2 118 0 37 2 118 0 38 2 118 0 39 2 118 0 42 2 118 0 43 2 118 0 44 2 118 0 46 2 118 0 48 2 118 0 50 2 118 0 61 2 7 0 70 2 11 0 86 2 118 0 110 2 118 0 115 2 118 0 122 2 118 0 125 2 118 0 126 2 118 0 129 2 118 0 132 2 118 0 133 2 118 0 134 2 118 0 135 7 69 1 53 7 73 1 54 7 77 1 55 7 81 1 98 7 85 1 99 7 89 1 100 7 93 1 101] 
#[1 2 122 0 1 2 122 0 2 2 122 0 4 2 122 0 6 2 122 0 7 2 122 0 9 2 122 0 10 2 122 0 11 2 122 0 13 2 122 0 16 2 122 0 17 2 122 0 20 2 122 0 21 2 122 0 24 2 122 0 26 2 122 0 27 2 122 0 28 2 122 0 29 2 122 0 31 2 122 0 33 2 122 0 34 2 122 0 35 2 122 0 36 2 122 0 37 2 122 0 38 2 122 0 39 2 122 0 42 2 122 0 43 2 122 0 44 2 15 0 46 2 122 0 48 2 122 0 50 2 122 0 61 2 122 0 70 2 122 0 86 2 122 0 110 2 122 0 115 2 122 0 122 2 122 0 125 2 122 0 126 2 122 0 129 2 122 0 132 2 122 0 133 2 122 0 134 2 122 0 135 7 101 1 57 7 105 1 58] 
#[1 2 126 0 1 2 126 0 2 2 126 0 4 2 126 0 6 2 126 0 7 2 126 0 9 2 126 0 10 2 126 0 11 2 126 0 13 2 126 0 16 2 126 0 17 2 126 0 20 2 126 0 21 2 126 0 24 2 126 0 26 2 126 0 27 2 126 0 28 2 126 0 29 2 126 0 31 2 126 0 33 2 126 0 34 2 126 0 35 2 126 0 36 2 126 0 37 2 126 0 38 2 126 0 39 2 126 0 42 2 126 0 43 2 19 0 44 2 126 0 46 2 126 0 48 2 126 0 50 2 126 0 61 2 126 0 70 2 126 0 86 2 126 0 110 2 126 0 115 2 126 0 122 2 126 0 125 2 126 0 126 2 126 0 129 2 126 0 132 2 126 0 133 2 126 0 134 2 126 0 135 7 113 1 60 7 117 1 61] 
#[1 2 130 0 1 2 130 0 2 2 130 0 4 2 23 0 6 2 130 0 7 2 130 0 9 2 130 0 10 2 130 0 11 2 130 0 13 2 130 0 16 2 130 0 17 2 130 0 20 2 130 0 21 2 130 0 24 2 130 0 26 2 130 0 27 2 130 0 28 2 130 0 29 2 130 0 31 2 130 0 33 2 130 0 34 2 130 0 35 2 130 0 36 2 130 0 37 2 130 0 38 2 130 0 39 2 130 0 42 2 130 0 43 2 130 0 44 2 130 0 46 2 130 0 48 2 130 0 50 2 130 0 61 2 130 0 70 2 130 0 86 2 130 0 110 2 130 0 115 2 130 0 122 2 130 0 125 2 130 0 126 2 130 0 129 2 130 0 132 2 130 0 133 2 130 0 134 2 130 0 135 7 125 1 63 7 129 1 64] 
#[1 2 134 0 1 2 134 0 2 2 134 0 4 2 134 0 6 2 134 0 7 2 134 0 9 2 134 0 10 2 134 0 11 2 134 0 13 2 134 0 16 2 134 0 17 2 134 0 20 2 134 0 21 2 134 0 24 2 134 0 26 2 134 0 27 2 134 0 28 2 27 0 29 2 134 0 31 2 134 0 33 2 134 0 34 2 31 0 35 2 134 0 36 2 134 0 37 2 134 0 38 2 134 0 39 2 134 0 42 2 134 0 43 2 134 0 44 2 134 0 46 2 134 0 48 2 134 0 50 2 134 0 61 2 134 0 70 2 134 0 86 2 134 0 110 2 134 0 115 2 134 0 122 2 134 0 125 2 134 0 126 2 134 0 129 2 134 0 132 2 134 0 133 2 134 0 134 2 134 0 135 7 137 1 67 7 141 1 68 7 145 1 69] 
#[1 2 138 0 1 2 138 0 2 2 138 0 4 2 138 0 6 2 138 0 7 2 138 0 9 2 138 0 10 2 138 0 11 2 35 0 13 2 138 0 16 2 39 0 17 2 138 0 20 2 138 0 21 2 138 0 24 2 138 0 26 2 138 0 27 2 138 0 28 2 138 0 29 2 138 0 31 2 138 0 33 2 138 0 34 2 138 0 35 2 138 0 36 2 138 0 37 2 138 0 38 2 138 0 39 2 138 0 42 2 138 0 43 2 138 0 44 2 138 0 46 2 138 0 48 2 138 0 50 2 138 0 61 2 138 0 70 2 138 0 86 2 138 0 110 2 138 0 115 2 138 0 122 2 138 0 125 2 138 0 126 2 138 0 129 2 138 0 132 2 138 0 133 2 138 0 134 2 138 0 135 7 149 1 71 7 153 1 72 7 157 1 73] 
#[1 2 142 0 1 2 142 0 2 2 43 0 4 2 142 0 6 2 142 0 7 2 142 0 9 2 142 0 10 2 47 0 11 2 142 0 13 2 142 0 16 2 142 0 17 2 142 0 20 2 142 0 21 2 51 0 24 2 142 0 26 2 142 0 27 2 142 0 28 2 142 0 29 2 142 0 31 2 142 0 33 2 142 0 34 2 142 0 35 2 142 0 36 2 142 0 37 2 142 0 38 2 142 0 39 2 142 0 42 2 142 0 43 2 142 0 44 2 142 0 46 2 142 0 48 2 55 0 50 2 142 0 61 2 142 0 70 2 142 0 86 2 142 0 110 2 142 0 115 2 142 0 122 2 142 0 125 2 142 0 126 2 142 0 129 2 142 0 132 2 142 0 133 2 142 0 134 2 142 0 135 7 161 1 75 7 165 1 76 7 169 1 77] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 6 149 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 7 173 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 7 173 1 83 7 173 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 2 146 0 1 2 146 0 3 2 146 0 9 2 146 0 14 2 146 0 17 2 146 0 18 2 146 0 28 2 146 0 42 2 146 0 49 2 146 0 57 2 146 0 64 2 146 0 71 2 146 0 72 2 59 0 75 2 146 0 77 2 146 0 79 2 146 0 85 2 146 0 86 2 146 0 87 2 146 0 88 2 146 0 89 2 146 0 90 2 146 0 91 2 146 0 92 2 146 0 93 2 146 0 94 2 146 0 95 2 146 0 96 2 146 0 97 2 146 0 98 2 146 0 99 2 146 0 100 2 146 0 101 2 146 0 102 2 146 0 103 2 146 0 104 2 146 0 105 2 146 0 106 2 146 0 107 2 146 0 108 2 146 0 109 2 146 0 110 2 146 0 111 2 146 0 112 2 146 0 113 2 146 0 114 2 146 0 115 2 146 0 116 2 146 0 117 2 146 0 118 2 146 0 119 2 146 0 120 2 146 0 121 2 146 0 123 2 146 0 124 2 146 0 127 2 146 0 128 2 146 0 130 2 146 0 131 2 146 0 134 2 146 0 137] 
#[0 2 150 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[1 2 154 0 1 2 154 0 3 2 154 0 9 2 154 0 14 2 154 0 17 2 154 0 18 2 154 0 28 2 154 0 42 2 154 0 49 2 154 0 57 2 154 0 64 2 154 0 71 2 154 0 72 2 63 0 75 2 154 0 77 2 154 0 79 2 154 0 85 2 154 0 86 2 154 0 87 2 154 0 88 2 154 0 89 2 154 0 90 2 154 0 91 2 154 0 92 2 154 0 93 2 154 0 94 2 154 0 95 2 154 0 96 2 154 0 97 2 154 0 98 2 154 0 99 2 154 0 100 2 154 0 101 2 154 0 102 2 154 0 103 2 154 0 104 2 154 0 105 2 154 0 106 2 154 0 107 2 154 0 108 2 154 0 109 2 154 0 110 2 154 0 111 2 154 0 112 2 154 0 113 2 154 0 114 2 154 0 115 2 154 0 116 2 154 0 117 2 154 0 118 2 154 0 119 2 154 0 120 2 154 0 121 2 154 0 123 2 154 0 124 2 154 0 127 2 154 0 128 2 154 0 130 2 154 0 131 2 154 0 134 2 154 0 137] 
#[0 2 158 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 162 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 2 217 0 3 2 221 0 9 2 241 0 28 2 245 0 42 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 6 149 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 7 185 0 245 7 185 0 246 7 185 0 247 7 185 0 248 7 185 0 249 7 185 0 250 7 185 0 251 3 133 0 252 3 137 0 253 7 185 1 0 7 185 1 1 7 185 1 11 7 185 1 14 7 185 1 19 7 185 1 22 7 185 1 23 7 185 1 24 7 189 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 7 185 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 7 249 0 5 7 249 0 8 7 249 0 12 7 253 0 14 7 249 0 15 7 253 0 18 7 249 0 19 7 249 0 25 7 249 0 30 7 221 0 32 7 225 0 35 7 249 0 40 7 249 0 45 7 249 0 47 7 249 0 51 7 245 1 36 7 249 1 37 7 253 1 86 7 253 1 89] 
#[1 2 166 0 1 2 166 0 2 2 166 0 4 2 170 0 5 2 166 0 6 2 166 0 7 2 170 0 8 2 166 0 9 2 166 0 10 2 166 0 11 2 170 0 12 2 166 0 13 2 170 0 14 2 170 0 15 2 166 0 16 2 166 0 17 2 170 0 18 2 170 0 19 2 166 0 20 2 166 0 21 2 166 0 24 2 170 0 25 8 5 0 26 2 166 0 27 2 166 0 28 2 166 0 29 2 170 0 30 2 166 0 31 2 170 0 32 2 166 0 33 2 67 0 35 2 166 0 36 2 166 0 37 2 166 0 38 2 166 0 39 2 170 0 40 2 166 0 42 2 166 0 44 2 170 0 45 2 166 0 46 2 170 0 47 2 166 0 48 2 166 0 50 2 170 0 51 2 166 0 70 2 166 0 86] 
#[0 0 246 0 9 0 27] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 8 9 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 8 13 0 20 1 193 0 28 8 17 1 163] 
#[1 8 21 0 42 8 25 0 134] 
#[1 1 201 0 9 8 29 1 25] 
#[0 2 174 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 2 178 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[0 2 182 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[1 0 10 0 41 0 10 0 56 0 10 0 57 0 10 0 62 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 1 121 0 145 1 125 0 234 0 29 0 236 2 186 1 199] 
#[1 8 33 0 32 8 37 0 63 8 41 0 84 8 45 0 96 8 49 0 134 8 53 0 185 8 57 0 186 8 61 0 187] 
#[0 2 190 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 4 105 0 28 2 194 0 32 2 194 0 63 2 194 0 84 2 194 0 96 2 194 0 134 8 65 0 231] 
#[1 2 71 0 9 0 19 0 10 0 19 0 16 0 19 0 26 0 19 0 27 2 75 0 28 0 19 0 32 4 149 0 36 0 19 0 43 0 19 0 69 1 102 0 77 1 102 0 85 1 102 0 86 1 102 0 87 1 102 0 88 1 102 0 89 1 102 0 90 1 102 0 91 1 102 0 92 1 102 0 93 1 102 0 94 1 102 0 95 1 102 0 96 1 102 0 97 1 102 0 98 1 102 0 99 1 102 0 100 1 102 0 101 1 102 0 102 1 102 0 103 1 102 0 104 1 102 0 105 1 102 0 106 1 102 0 107 1 102 0 108 1 102 0 109 1 102 0 110 1 102 0 111 1 102 0 112 1 102 0 113 1 102 0 114 1 102 0 115 0 19 0 135 1 102 0 137 4 153 0 231 4 157 1 176] 
#[0 8 69 0 27] 
#[1 2 198 0 16 2 198 0 27 8 73 0 202] 
#[0 8 77 0 32] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 81 0 200 4 77 0 203 1 13 1 94 4 81 1 95 1 13 1 198] 
#[1 4 105 0 28 8 41 0 84 8 45 0 96 8 85 0 134 8 89 0 186 8 93 0 187 8 97 0 231] 
#[0 8 101 0 27] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 105 0 200 4 77 0 203 1 13 1 94 4 81 1 95 1 13 1 198] 
#[1 4 65 0 89 4 65 0 108 4 65 0 109 4 65 0 110 4 65 0 111 4 65 0 112 4 65 0 113 4 65 0 114 4 65 0 115 4 65 0 137 8 109 0 181 8 113 0 189 4 65 1 97] 
#[1 0 10 0 41 0 10 0 89 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 5 249 0 230 5 253 0 234 0 29 0 236] 
#[1 0 170 0 28 2 81 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 79 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 8 117 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[0 8 121 0 113] 
#[1 4 105 0 28 8 125 0 113 8 129 0 231] 
#[1 2 81 0 82 2 202 0 85 2 202 0 86 2 202 0 87 2 202 0 88 2 83 0 89 2 202 0 90 2 202 0 91 2 202 0 92 2 202 0 93 2 87 0 94 2 202 0 95 2 202 0 96 2 202 0 97 2 202 0 98 2 202 0 99 2 202 0 100 2 202 0 101 2 202 0 102 2 202 0 103 2 202 0 104 2 202 0 105 2 202 0 106 2 202 0 107 2 91 0 108 2 95 0 109 2 99 0 110 2 103 0 111 2 107 0 112 2 111 0 113 2 115 0 114 2 119 0 115 2 123 0 137 2 73 1 97 8 133 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 8 137 1 95 8 141 1 145 1 13 1 198] 
#[0 2 206 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 8 145 0 27] 
#[0 8 149 0 27] 
#[0 8 153 0 27] 
#[1 8 157 0 10 0 10 0 41 8 161 0 42 0 10 0 82 0 10 0 89 0 10 0 94 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 8 165 0 134 0 10 0 137 8 169 0 234 0 29 0 236 8 173 1 177 8 177 1 180 8 181 1 181 8 181 1 182 8 181 1 183] 
#[0 2 210 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 4 145 0 9 8 193 1 176] 
#[0 2 214 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 2 218 0 27 0 34 0 110 0 115 0 134] 
#[1 2 81 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 69 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 8 197 0 154 8 201 0 155 1 13 1 94 8 205 1 95 2 73 1 97 8 209 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 1 13 1 198] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 8 213 1 95 1 13 1 198] 
#[0 1 126 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[1 4 105 0 28 8 45 0 96 8 217 0 113 8 221 0 134 8 225 0 187 8 229 0 231] 
#[1 4 241 0 9 8 233 0 163] 
#[0 2 222 0 9 0 28] 
#[1 4 249 0 20 2 127 0 28 8 237 0 32 1 2 0 36 1 2 0 85 1 2 0 86 1 2 0 87 1 2 0 88 1 2 0 89 1 2 0 90 1 2 0 91 1 2 0 92 1 2 0 93 1 2 0 94 1 2 0 95 1 2 0 96 1 2 0 97 1 2 0 98 1 2 0 99 1 2 0 100 1 2 0 101 1 2 0 102 1 2 0 103 1 2 0 104 1 2 0 105 1 2 0 106 1 2 0 107 1 2 0 108 1 2 0 109 1 2 0 110 1 2 0 111 1 2 0 112 1 2 0 113 1 2 0 114 1 2 0 115 1 2 0 137 8 241 0 231] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 8 245 1 95 1 13 1 198] 
#[0 2 226 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 4 241 0 9 4 105 0 28 8 249 0 162 3 89 0 163 3 93 0 231] 
#[1 2 230 0 16 2 230 0 27 8 253 0 32 9 1 0 149] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 9 5 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 9 9 0 11 9 13 0 34 4 221 0 134 9 17 0 161] 
#[0 9 21 0 11] 
#[1 2 234 0 1 2 234 0 3 2 234 0 9 2 234 0 14 2 234 0 17 2 234 0 18 2 234 0 27 2 234 0 28 2 234 0 41 2 234 0 42 2 234 0 49 2 234 0 52 2 234 0 53 2 234 0 57 2 234 0 58 2 234 0 60 2 234 0 64 2 234 0 65 2 234 0 67 2 234 0 68 2 234 0 71 2 234 0 72 2 234 0 73 2 234 0 74 2 234 0 75 2 234 0 76 2 234 0 77 2 234 0 78 2 234 0 79 2 234 0 80 2 234 0 81 2 234 0 82 2 234 0 83 2 234 0 85 2 234 0 86 2 234 0 87 2 234 0 88 2 234 0 89 2 234 0 90 2 234 0 91 2 234 0 92 2 234 0 93 2 234 0 94 2 234 0 95 2 234 0 96 2 234 0 97 2 234 0 98 2 234 0 99 2 234 0 100 2 234 0 101 2 234 0 102 2 234 0 103 2 234 0 104 2 234 0 105 2 234 0 106 2 234 0 107 2 234 0 108 2 234 0 109 2 234 0 110 2 234 0 111 2 234 0 112 2 234 0 113 2 234 0 114 2 234 0 115 2 234 0 116 2 234 0 117 2 234 0 118 2 234 0 119 2 234 0 120 2 234 0 121 2 234 0 123 2 234 0 124 2 234 0 127 2 234 0 128 2 234 0 130 2 234 0 131 2 234 0 134 9 25 0 135 2 234 0 137 9 29 1 102 9 33 1 103 9 37 1 104] 
#[0 2 238 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 2 242 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 56 0 57 0 58 0 59 0 60 0 61 0 62 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137 1 199] 
#[0 2 246 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 2 250 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 5 205 0 10 0 10 0 41 9 41 0 42 0 10 0 57 0 10 0 65 0 10 0 77 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 9 45 0 134 0 10 0 137 5 217 0 164 5 221 0 167 5 221 0 168 5 221 0 171 5 233 0 174 5 237 0 234 0 29 0 236] 
#[0 2 254 0 27 0 34 0 110 0 115 0 134] 
#[0 9 49 0 89 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 97] 
#[0 0 94 0 9 0 28] 
#[1 0 98 0 9 0 98 0 28 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 9 53 1 95 1 13 1 198] 
#[1 0 138 0 9 0 138 0 28 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 9 57 1 95 1 13 1 198] 
#[1 4 241 0 9 4 105 0 28 9 61 0 162 3 89 0 163 3 93 0 231] 
#[1 4 145 0 9 4 105 0 28 4 153 0 231 4 157 1 176] 
#[0 3 2 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 3 6 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 3 10 0 1 3 10 0 2 3 10 0 4 3 10 0 6 3 10 0 7 3 10 0 9 3 10 0 10 3 10 0 11 3 10 0 13 3 10 0 16 3 10 0 17 3 10 0 20 3 10 0 21 3 10 0 24 3 10 0 26 3 10 0 27 3 10 0 28 3 10 0 29 3 10 0 31 3 10 0 33 3 10 0 34 3 10 0 35 2 131 0 36 3 10 0 37 3 10 0 38 3 10 0 39 3 10 0 42 3 10 0 43 3 10 0 44 3 10 0 46 3 10 0 48 3 10 0 50 3 10 0 55 3 10 0 61 3 10 0 70 3 10 0 77 3 10 0 84 3 10 0 85 3 10 0 86 3 10 0 87 3 10 0 88 3 10 0 89 3 10 0 90 3 10 0 91 3 10 0 92 3 10 0 93 3 10 0 94 3 10 0 95 3 10 0 96 3 10 0 97 3 10 0 98 3 10 0 99 3 10 0 100 3 10 0 101 3 10 0 102 3 10 0 103 3 10 0 104 3 10 0 105 3 10 0 106 3 10 0 107 3 10 0 108 3 10 0 109 3 10 0 110 3 10 0 111 3 10 0 112 3 10 0 113 3 10 0 114 3 10 0 115 3 10 0 122 3 10 0 125 3 10 0 126 3 10 0 129 3 10 0 132 3 10 0 133 3 10 0 134 3 10 0 135 3 10 0 137] 
#[1 5 13 0 94 2 97 1 173 9 69 1 174] 
#[0 3 14 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 3 18 0 10 0 16 0 27 0 35 0 43 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 134 0 137] 
#[0 3 22 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 3 26 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 8 137 1 95 9 73 1 145 1 13 1 198] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 8 137 1 95 9 77 1 145 1 13 1 198] 
#[0 3 30 0 27 0 111 0 114] 
#[0 9 81 0 9] 
#[0 3 34 0 27 0 68 0 86 0 88 0 111 0 114] 
#[1 1 50 0 27 1 50 0 111 1 50 0 114 9 85 1 143] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 9 89 1 95 1 13 1 198] 
#[0 3 38 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 3 42 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 9 93 0 71 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 9 97 1 95 1 13 1 198] 
#[1 9 101 0 16 3 46 0 35 9 105 1 165] 
#[0 3 50 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 3 54 0 9 0 27] 
#[0 3 58 0 9 0 27] 
#[0 3 62 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 3 66 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 70 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 3 74 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 3 78 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 3 82 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 3 86 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 3 90 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 3 94 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 3 98 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 3 102 0 1 3 102 0 2 3 102 0 3 3 102 0 4 3 102 0 6 3 102 0 7 3 102 0 9 3 102 0 10 3 102 0 11 3 102 0 13 3 102 0 14 3 102 0 16 3 102 0 17 3 102 0 18 3 102 0 20 3 102 0 21 3 102 0 24 3 102 0 26 3 102 0 27 3 102 0 28 3 102 0 29 3 102 0 31 9 109 0 32 3 102 0 33 3 102 0 34 2 135 0 35 3 102 0 36 3 102 0 37 3 102 0 38 3 102 0 39 3 102 0 42 3 102 0 43 3 102 0 44 3 102 0 46 3 102 0 48 3 102 0 49 3 102 0 50 3 102 0 57 3 102 0 61 3 102 0 64 3 102 0 70 3 102 0 71 3 102 0 72 3 102 0 75 3 102 0 77 3 102 0 79 3 102 0 85 3 102 0 86 3 102 0 87 3 102 0 88 3 102 0 89 3 102 0 90 3 102 0 91 3 102 0 92 3 102 0 93 3 102 0 94 3 102 0 95 3 102 0 96 3 102 0 97 3 102 0 98 3 102 0 99 3 102 0 100 3 102 0 101 3 102 0 102 3 102 0 103 3 102 0 104 3 102 0 105 3 102 0 106 3 102 0 107 3 102 0 108 3 102 0 109 3 102 0 110 3 102 0 111 3 102 0 112 3 102 0 113 3 102 0 114 3 102 0 115 3 102 0 116 3 102 0 117 3 102 0 118 3 102 0 119 3 102 0 120 3 102 0 121 3 102 0 122 3 102 0 123 3 102 0 124 3 102 0 125 3 102 0 126 3 102 0 127 3 102 0 128 3 102 0 129 3 102 0 130 3 102 0 131 3 102 0 132 3 102 0 133 3 102 0 134 3 102 0 135 3 102 0 137] 
#[0 9 117 0 43] 
#[0 3 106 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 110 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 114 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 118 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 3 122 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 126 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 130 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 134 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 138 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 142 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 146 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 150 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 0 190 0 1 0 190 0 2 0 190 0 4 0 190 0 6 0 190 0 7 0 190 0 9 0 190 0 10 0 190 0 11 0 190 0 13 0 190 0 16 0 190 0 17 0 190 0 20 0 190 0 21 0 190 0 24 0 190 0 26 0 190 0 27 0 190 0 28 0 190 0 29 0 190 0 31 0 190 0 33 0 190 0 34 0 190 0 35 0 190 0 36 0 190 0 37 0 190 0 38 0 190 0 39 0 190 0 42 0 190 0 43 0 190 0 44 0 190 0 46 0 190 0 48 0 190 0 50 0 190 0 61 0 190 0 70 0 190 0 86 0 190 0 110 0 190 0 115 0 190 0 122 0 190 0 125 0 190 0 126 0 190 0 129 0 190 0 132 0 190 0 133 0 190 0 134 0 190 0 135 9 121 1 139] 
#[0 3 154 0 10 0 16 0 26 0 27 0 32 0 34 0 36 0 43 0 110 0 115 0 134 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 6 1 0 22 6 5 0 23 2 241 0 28 0 10 0 41 2 245 0 42 6 9 0 43 3 253 0 49 0 247 0 57 3 1 0 64 0 10 0 65 6 13 0 67 6 17 0 68 3 5 0 71 3 9 0 72 3 13 0 75 0 251 0 77 3 21 0 78 3 25 0 79 0 10 0 81 0 10 0 82 0 255 0 85 1 3 0 86 1 7 0 87 1 11 0 88 1 15 0 89 1 19 0 90 1 23 0 91 1 27 0 92 1 31 0 93 1 35 0 94 1 39 0 95 1 43 0 96 1 47 0 97 1 51 0 98 1 55 0 99 1 59 0 100 1 63 0 101 1 67 0 102 1 71 0 103 1 75 0 104 1 79 0 105 1 83 0 106 1 87 0 107 2 139 0 108 1 95 0 109 1 99 0 110 1 103 0 111 1 107 0 112 1 111 0 113 1 115 0 114 1 119 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 123 0 137 3 85 0 162 3 89 0 163 9 125 0 174 9 129 0 179 3 93 0 231 5 237 0 234 0 29 0 236 6 25 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 6 29 1 2 6 33 1 5 6 37 1 6 6 41 1 7 6 45 1 8 6 49 1 9 6 53 1 10 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 6 1 0 22 6 5 0 23 2 241 0 28 0 10 0 41 2 245 0 42 3 253 0 49 0 247 0 57 3 1 0 64 0 10 0 65 6 13 0 67 6 17 0 68 3 5 0 71 3 9 0 72 3 13 0 75 0 251 0 77 3 21 0 78 3 25 0 79 0 10 0 81 0 10 0 82 0 255 0 85 1 3 0 86 1 7 0 87 1 11 0 88 1 15 0 89 1 19 0 90 1 23 0 91 1 27 0 92 1 31 0 93 1 35 0 94 1 39 0 95 1 43 0 96 1 47 0 97 1 51 0 98 1 55 0 99 1 59 0 100 1 63 0 101 1 67 0 102 1 71 0 103 2 143 0 104 1 79 0 105 1 83 0 106 1 87 0 107 2 139 0 108 1 95 0 109 1 99 0 110 1 103 0 111 1 107 0 112 1 111 0 113 1 115 0 114 1 119 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 6 177 0 135 1 123 0 137 3 85 0 162 3 89 0 163 9 137 0 174 9 141 0 180 3 93 0 231 5 237 0 234 0 29 0 236 6 25 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 6 181 1 2 6 33 1 5 6 37 1 6 6 41 1 7 6 45 1 8 6 49 1 9 6 53 1 10 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 9 145 0 10 9 149 0 16] 
#[0 9 153 0 10] 
#[0 3 158 0 10] 
#[0 3 162 0 10] 
#[1 3 166 0 10 3 166 0 16 9 157 0 166] 
#[1 9 161 0 57 9 165 0 65 9 169 0 77 9 185 0 81 2 81 0 82 9 209 0 85 9 209 0 86 9 173 0 87 9 209 0 88 1 29 0 89 9 209 0 90 9 209 0 91 9 209 0 92 9 209 0 93 4 69 0 94 9 209 0 95 9 209 0 96 9 209 0 97 9 209 0 98 9 177 0 99 9 209 0 100 9 209 0 101 9 209 0 102 9 209 0 103 9 209 0 104 9 209 0 105 9 209 0 106 9 209 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 9 193 0 150 9 185 0 151 9 185 0 153 9 193 0 175 9 193 0 176 9 193 0 177 9 193 0 178 9 209 1 94 9 193 1 95 2 73 1 97 9 217 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 9 209 1 198] 
#[0 9 221 0 10] 
#[1 2 67 0 1 2 67 0 2 2 67 0 4 2 170 0 5 2 67 0 6 2 67 0 7 2 170 0 8 2 67 0 9 2 67 0 10 2 67 0 11 2 170 0 12 2 67 0 13 2 170 0 14 2 170 0 15 2 67 0 16 2 67 0 17 2 170 0 18 2 170 0 19 2 67 0 20 2 67 0 21 2 67 0 24 2 170 0 25 2 67 0 26 2 67 0 27 2 67 0 28 2 67 0 29 2 170 0 30 2 67 0 31 2 170 0 32 2 67 0 33 2 67 0 34 2 67 0 35 2 67 0 36 2 67 0 37 2 67 0 38 2 67 0 39 2 170 0 40 2 67 0 42 2 67 0 43 2 67 0 44 2 170 0 45 2 67 0 46 2 170 0 47 2 67 0 48 2 67 0 50 2 170 0 51 2 67 0 61 2 67 0 70 2 67 0 86 2 67 0 110 2 67 0 115 2 67 0 122 2 67 0 125 2 67 0 126 2 67 0 129 2 67 0 132 2 67 0 133 2 67 0 134 2 67 0 135] 
#[1 3 170 0 16 3 170 0 35 9 225 0 233] 
#[0 9 229 0 89 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 97] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 9 233 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 9 237 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 3 174 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 9 241 0 9] 
#[0 9 245 0 9] 
#[1 1 167 0 1 0 150 0 2 2 217 0 3 0 150 0 4 0 150 0 5 0 150 0 6 0 150 0 7 0 150 0 8 1 171 0 9 0 150 0 11 0 150 0 12 0 150 0 13 1 175 0 14 0 150 0 15 0 150 0 16 1 179 0 17 1 183 0 18 0 150 0 19 0 27 0 20 0 150 0 21 0 150 0 24 0 150 0 25 0 150 0 26 1 187 0 28 0 150 0 29 0 150 0 30 0 150 0 31 0 150 0 32 0 150 0 33 0 150 0 35 0 150 0 36 0 150 0 37 0 150 0 38 0 150 0 39 0 150 0 40 1 191 0 42 0 150 0 43 0 150 0 44 0 150 0 45 0 150 0 46 0 150 0 47 0 150 0 48 3 253 0 49 0 150 0 50 0 150 0 51 2 253 0 57 0 150 0 61 3 1 0 64 9 249 0 67 0 150 0 70 3 5 0 71 3 9 0 72 6 149 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 195 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 0 150 0 135 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 6 153 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 6 153 1 83 6 153 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 178 0 16 9 253 0 26 3 178 0 43 3 178 0 61 3 178 0 135] 
#[0 10 1 0 43] 
#[1 3 182 0 16 3 182 0 43 3 182 0 135 10 5 1 4] 
#[0 3 186 0 16 0 43 0 61 0 135] 
#[0 3 190 0 16 0 43 0 61 0 135] 
#[0 3 194 0 16 0 43 0 61 0 135] 
#[0 3 198 0 16 0 43 0 61 0 135] 
#[0 3 202 0 16 0 43 0 61 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 6 1 0 22 6 5 0 23 2 241 0 28 2 245 0 42 10 9 0 43 3 253 0 49 2 253 0 57 3 1 0 64 6 13 0 67 6 17 0 68 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 21 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 25 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 10 13 1 2 6 33 1 5 6 37 1 6 6 41 1 7 6 45 1 8 6 49 1 9 6 53 1 10 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 6 1 0 22 6 5 0 23 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 6 13 0 67 6 17 0 68 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 21 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 10 17 0 135 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 25 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 10 21 1 2 6 33 1 5 6 37 1 6 6 41 1 7 6 45 1 8 6 49 1 9 6 53 1 10 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 10 25 0 42 10 29 0 134] 
#[1 1 201 0 9 10 33 1 25] 
#[1 1 201 0 9 10 37 1 25] 
#[0 3 206 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 10 41 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 10 45 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 10 49 1 95 1 13 1 198] 
#[1 3 86 0 1 3 86 0 3 3 86 0 9 3 86 0 14 3 86 0 17 3 86 0 18 3 86 0 28 3 86 0 42 3 86 0 49 3 86 0 57 3 86 0 64 3 86 0 71 3 86 0 72 3 86 0 75 3 86 0 77 3 86 0 79 2 81 0 82 3 86 0 85 3 86 0 86 3 86 0 87 3 86 0 88 2 147 0 89 3 86 0 90 3 86 0 91 3 86 0 92 3 86 0 93 2 151 0 94 3 86 0 95 3 86 0 96 3 86 0 97 3 86 0 98 3 86 0 99 3 86 0 100 3 86 0 101 3 86 0 102 3 86 0 103 3 86 0 104 3 86 0 105 3 86 0 106 3 86 0 107 2 155 0 108 2 159 0 109 2 163 0 110 2 167 0 111 2 171 0 112 2 175 0 113 2 179 0 114 2 183 0 115 3 86 0 116 3 86 0 117 3 86 0 118 3 86 0 119 3 86 0 120 3 86 0 121 3 86 0 123 3 86 0 124 3 86 0 127 3 86 0 128 3 86 0 130 3 86 0 131 3 86 0 134 2 187 0 137 2 73 1 97 2 201 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 205 1 164 2 97 1 173 2 105 1 174 2 105 1 175] 
#[0 3 210 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 10 53 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 10 57 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 10 61 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 10 65 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 10 69 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 3 214 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 10 73 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 10 77 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 10 81 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 10 85 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 10 89 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 10 93 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 10 97 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 10 101 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 6 149 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 10 105 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 10 105 1 83 10 105 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 3 218 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 2 191 0 1 2 191 0 2 2 191 0 4 3 226 0 5 2 191 0 6 2 191 0 7 3 226 0 8 2 191 0 9 2 191 0 10 2 191 0 11 3 226 0 12 2 191 0 13 3 226 0 14 3 226 0 15 2 191 0 16 2 191 0 17 3 226 0 18 3 226 0 19 2 191 0 20 2 191 0 21 2 191 0 24 3 226 0 25 2 191 0 26 2 191 0 27 2 191 0 28 2 191 0 29 3 226 0 30 2 191 0 31 3 226 0 32 2 191 0 33 2 191 0 34 2 191 0 35 2 191 0 36 2 191 0 37 2 191 0 38 2 191 0 39 3 226 0 40 2 191 0 42 2 191 0 43 2 191 0 44 3 226 0 45 2 191 0 46 3 226 0 47 2 191 0 48 2 191 0 50 3 226 0 51 2 191 0 61 2 191 0 70 2 191 0 86 2 191 0 110 2 191 0 115 2 191 0 122 2 191 0 125 2 191 0 126 2 191 0 129 2 191 0 132 2 191 0 133 2 191 0 134 2 191 0 135] 
#[1 1 201 0 9 10 109 1 25] 
#[0 3 230 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 1 201 0 9 6 85 0 20 1 193 0 28 6 97 0 42 6 133 1 25 6 133 1 88 6 137 1 92 6 141 1 163] 
#[0 3 234 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 7 253 0 14 0 18 1 86 1 89] 
#[1 3 238 0 122 3 238 0 126 10 113 1 193] 
#[1 3 238 0 125 3 238 0 126 10 117 1 193] 
#[1 3 242 0 129 3 242 0 133 10 121 1 196] 
#[1 3 242 0 132 3 242 0 133 10 125 1 196] 
#[0 3 246 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 10 129 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 10 133 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 10 137 0 11 10 141 0 34 4 221 0 134 10 145 0 161] 
#[0 10 149 0 11] 
#[0 3 250 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 3 254 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 4 2 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 4 6 0 10 0 16 0 26 0 27 0 32 0 34 0 36 0 43 0 110 0 115 0 134 0 135] 
#[1 4 10 0 10 2 195 0 16 10 157 0 243] 
#[1 4 14 0 10 2 199 0 16 10 165 1 27] 
#[1 10 181 0 1 1 201 0 9 6 85 0 20 1 193 0 28 10 173 0 36 10 177 0 37 6 97 0 42 10 181 1 25 10 181 1 87 10 181 1 88 10 193 1 92 10 193 1 93 10 197 1 163] 
#[1 2 203 0 1 4 18 0 2 4 18 0 4 4 18 0 6 4 18 0 7 2 207 0 9 4 18 0 10 4 18 0 11 4 18 0 13 4 18 0 16 4 18 0 17 2 211 0 20 4 18 0 21 4 18 0 24 4 18 0 26 4 18 0 27 2 215 0 28 4 18 0 29 4 18 0 31 4 18 0 33 4 18 0 34 4 18 0 35 2 219 0 36 2 223 0 37 4 18 0 38 4 18 0 39 2 227 0 42 4 18 0 43 4 18 0 44 4 18 0 46 4 18 0 48 4 18 0 50 4 18 0 61 4 18 0 70 4 18 0 86 4 18 0 110 4 18 0 115 4 18 0 122 4 18 0 125 4 18 0 126 4 18 0 129 4 18 0 132 4 18 0 133 4 18 0 134 4 18 0 135 10 201 1 25 10 201 1 87 10 201 1 88 10 201 1 92 10 201 1 93 10 197 1 163] 
#[0 4 22 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 4 26 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[0 4 30 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 41 0 42 0 43 0 44 0 46 0 48 0 50 0 56 0 57 0 61 0 62 0 65 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 10 209 0 10] 
#[1 4 34 0 10 2 231 0 16 10 165 1 27] 
#[1 10 213 0 42 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 10 217 1 31 10 221 1 32 1 13 1 94 10 221 1 95 1 13 1 198] 
#[1 10 213 0 42 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 10 229 1 31 10 221 1 32 1 13 1 94 10 221 1 95 1 13 1 198] 
#[1 10 213 0 42 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 10 233 1 31 10 221 1 32 1 13 1 94 10 221 1 95 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 10 237 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 10 241 0 162 3 89 0 163 3 93 0 231 10 245 0 240 10 245 0 241 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 10 245 1 13 3 105 1 14 10 245 1 17 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 10 245 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 11 9 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 11 13 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 4 38 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 42 0 1 4 42 0 2 4 42 0 4 4 42 0 6 4 42 0 7 4 42 0 9 4 42 0 10 4 42 0 11 4 42 0 13 4 42 0 16 4 42 0 17 4 42 0 20 4 42 0 21 4 42 0 24 4 42 0 26 4 42 0 27 4 42 0 28 4 42 0 29 4 42 0 31 4 42 0 33 4 42 0 34 4 42 0 35 4 42 0 36 4 42 0 37 4 42 0 38 2 235 0 39 4 42 0 42 4 42 0 43 4 42 0 44 4 42 0 46 4 42 0 48 4 42 0 50 4 42 0 61 4 42 0 70 4 42 0 86 4 42 0 110 4 42 0 115 4 42 0 122 4 42 0 125 4 42 0 126 4 42 0 129 4 42 0 132 4 42 0 133 4 42 0 134 4 42 0 135 11 17 1 40] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 11 21 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 4 46 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 50 0 1 4 50 0 2 4 50 0 4 4 50 0 6 4 50 0 7 4 50 0 9 4 50 0 10 4 50 0 11 4 50 0 13 4 50 0 16 4 50 0 17 4 50 0 20 4 50 0 21 4 50 0 24 4 50 0 26 4 50 0 27 4 50 0 28 4 50 0 29 4 50 0 31 4 50 0 33 4 50 0 34 4 50 0 35 4 50 0 36 4 50 0 37 4 50 0 38 4 50 0 39 4 50 0 42 4 50 0 43 4 50 0 44 4 50 0 46 2 239 0 48 4 50 0 50 4 50 0 61 4 50 0 70 4 50 0 86 4 50 0 110 4 50 0 115 4 50 0 122 4 50 0 125 4 50 0 126 4 50 0 129 4 50 0 132 4 50 0 133 4 50 0 134 4 50 0 135 11 25 1 43] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 11 29 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 4 54 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 58 0 1 4 58 0 2 4 58 0 4 4 58 0 6 2 243 0 7 4 58 0 9 4 58 0 10 4 58 0 11 4 58 0 13 4 58 0 16 4 58 0 17 4 58 0 20 4 58 0 21 4 58 0 24 4 58 0 26 4 58 0 27 4 58 0 28 4 58 0 29 4 58 0 31 4 58 0 33 4 58 0 34 4 58 0 35 4 58 0 36 4 58 0 37 4 58 0 38 4 58 0 39 4 58 0 42 4 58 0 43 4 58 0 44 4 58 0 46 4 58 0 48 4 58 0 50 4 58 0 61 4 58 0 70 4 58 0 86 4 58 0 110 4 58 0 115 4 58 0 122 4 58 0 125 4 58 0 126 4 58 0 129 4 58 0 132 4 58 0 133 4 58 0 134 4 58 0 135 11 33 1 46] 
#[0 4 62 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 66 0 1 2 247 0 2 4 66 0 4 4 66 0 6 4 66 0 7 4 66 0 9 4 66 0 10 4 66 0 11 4 66 0 13 4 66 0 16 4 66 0 17 4 66 0 20 4 66 0 21 4 66 0 24 4 66 0 26 4 66 0 27 4 66 0 28 4 66 0 29 4 66 0 31 2 251 0 33 4 66 0 34 4 66 0 35 4 66 0 36 4 66 0 37 4 66 0 38 4 66 0 39 4 66 0 42 4 66 0 43 4 66 0 44 4 66 0 46 4 66 0 48 4 66 0 50 4 66 0 61 4 66 0 70 4 66 0 86 4 66 0 110 4 66 0 115 4 66 0 122 4 66 0 125 4 66 0 126 4 66 0 129 4 66 0 132 4 66 0 133 4 66 0 134 4 66 0 135 11 37 1 49 7 53 1 51] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 10 73 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 11 41 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 102 0 1 3 102 0 3 3 102 0 9 3 102 0 14 3 102 0 17 3 102 0 18 3 102 0 28 9 109 0 32 3 102 0 42 3 102 0 49 3 102 0 57 3 102 0 64 3 102 0 71 3 102 0 72 3 102 0 75 3 102 0 77 3 102 0 79 3 102 0 85 3 102 0 86 3 102 0 87 3 102 0 88 3 102 0 89 3 102 0 90 3 102 0 91 3 102 0 92 3 102 0 93 3 102 0 94 3 102 0 95 3 102 0 96 3 102 0 97 3 102 0 98 3 102 0 99 3 102 0 100 3 102 0 101 3 102 0 102 3 102 0 103 3 102 0 104 3 102 0 105 3 102 0 106 3 102 0 107 3 102 0 108 3 102 0 109 3 102 0 110 3 102 0 111 3 102 0 112 3 102 0 113 3 102 0 114 3 102 0 115 3 102 0 116 3 102 0 117 3 102 0 118 3 102 0 119 3 102 0 120 3 102 0 121 3 102 0 123 3 102 0 124 3 102 0 127 3 102 0 128 3 102 0 130 3 102 0 131 3 102 0 134 3 102 0 137] 
#[1 11 45 0 1 4 70 0 82 4 70 0 89 4 70 0 94 4 70 0 108 4 70 0 109 4 70 0 110 4 70 0 111 4 70 0 112 4 70 0 113 4 70 0 114 4 70 0 115 4 70 0 137] 
#[0 4 74 0 82 0 89 0 94 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 4 78 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 82 0 1 4 82 0 2 4 82 0 4 4 82 0 6 4 82 0 7 4 82 0 9 4 82 0 10 4 82 0 11 4 82 0 13 4 82 0 16 4 82 0 17 4 82 0 20 4 82 0 21 4 82 0 24 4 82 0 26 4 82 0 27 2 255 0 28 4 82 0 29 3 3 0 31 4 82 0 33 4 82 0 34 3 7 0 35 4 82 0 36 4 82 0 37 4 82 0 38 4 82 0 39 4 82 0 42 4 82 0 43 4 82 0 44 4 82 0 46 4 82 0 48 4 82 0 50 4 82 0 61 3 11 0 70 3 15 0 86 4 82 0 110 4 82 0 115 4 82 0 122 4 82 0 125 4 82 0 126 4 82 0 129 4 82 0 132 4 82 0 133 4 82 0 134 4 82 0 135 11 49 1 53 7 77 1 55 7 81 1 98 7 85 1 99 7 89 1 100 7 93 1 101] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 10 81 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 11 53 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 4 86 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 11 61 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 11 57 1 159 11 61 1 160 11 65 1 161 2 89 1 162 2 97 1 173 11 69 1 174 11 69 1 175] 
#[0 4 90 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 11 61 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 11 73 1 159 11 61 1 160 11 65 1 161 2 89 1 162 2 97 1 173 11 69 1 174 11 69 1 175] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 10 65 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 11 77 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 4 94 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 98 0 1 4 98 0 2 4 98 0 4 4 98 0 6 4 98 0 7 4 98 0 9 4 98 0 10 4 98 0 11 4 98 0 13 4 98 0 16 4 98 0 17 4 98 0 20 4 98 0 21 4 98 0 24 4 98 0 26 4 98 0 27 4 98 0 28 4 98 0 29 4 98 0 31 4 98 0 33 4 98 0 34 4 98 0 35 4 98 0 36 4 98 0 37 4 98 0 38 4 98 0 39 4 98 0 42 4 98 0 43 4 98 0 44 3 19 0 46 4 98 0 48 4 98 0 50 4 98 0 61 4 98 0 70 4 98 0 86 4 98 0 110 4 98 0 115 4 98 0 122 4 98 0 125 4 98 0 126 4 98 0 129 4 98 0 132 4 98 0 133 4 98 0 134 4 98 0 135 11 81 1 57] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 10 57 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 11 85 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 4 102 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 106 0 1 4 106 0 2 4 106 0 4 4 106 0 6 4 106 0 7 4 106 0 9 4 106 0 10 4 106 0 11 4 106 0 13 4 106 0 16 4 106 0 17 4 106 0 20 4 106 0 21 4 106 0 24 4 106 0 26 4 106 0 27 4 106 0 28 4 106 0 29 4 106 0 31 4 106 0 33 4 106 0 34 4 106 0 35 4 106 0 36 4 106 0 37 4 106 0 38 4 106 0 39 4 106 0 42 4 106 0 43 3 23 0 44 4 106 0 46 4 106 0 48 4 106 0 50 4 106 0 61 4 106 0 70 4 106 0 86 4 106 0 110 4 106 0 115 4 106 0 122 4 106 0 125 4 106 0 126 4 106 0 129 4 106 0 132 4 106 0 133 4 106 0 134 4 106 0 135 11 89 1 60] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 10 41 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 11 93 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 4 110 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 114 0 1 4 114 0 2 4 114 0 4 3 27 0 6 4 114 0 7 4 114 0 9 4 114 0 10 4 114 0 11 4 114 0 13 4 114 0 16 4 114 0 17 4 114 0 20 4 114 0 21 4 114 0 24 4 114 0 26 4 114 0 27 4 114 0 28 4 114 0 29 4 114 0 31 4 114 0 33 4 114 0 34 4 114 0 35 4 114 0 36 4 114 0 37 4 114 0 38 4 114 0 39 4 114 0 42 4 114 0 43 4 114 0 44 4 114 0 46 4 114 0 48 4 114 0 50 4 114 0 61 4 114 0 70 4 114 0 86 4 114 0 110 4 114 0 115 4 114 0 122 4 114 0 125 4 114 0 126 4 114 0 129 4 114 0 132 4 114 0 133 4 114 0 134 4 114 0 135 11 97 1 63] 
#[0 9 113 0 35] 
#[0 4 118 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 122 0 1 4 122 0 2 4 122 0 4 4 122 0 6 4 122 0 7 4 122 0 9 4 122 0 10 4 122 0 11 4 122 0 13 4 122 0 16 4 122 0 17 4 122 0 20 4 122 0 21 4 122 0 24 4 122 0 26 4 122 0 27 4 122 0 28 3 31 0 29 4 122 0 31 4 122 0 33 4 122 0 34 3 35 0 35 4 122 0 36 4 122 0 37 4 122 0 38 4 122 0 39 4 122 0 42 4 122 0 43 4 122 0 44 4 122 0 46 4 122 0 48 4 122 0 50 4 122 0 61 4 122 0 70 4 122 0 86 4 122 0 110 4 122 0 115 4 122 0 122 4 122 0 125 4 122 0 126 4 122 0 129 4 122 0 132 4 122 0 133 4 122 0 134 4 122 0 135 11 101 1 67 7 145 1 69] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 10 89 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 11 105 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 4 126 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 130 0 1 4 130 0 2 4 130 0 4 4 130 0 6 4 130 0 7 4 130 0 9 4 130 0 10 4 130 0 11 3 39 0 13 4 130 0 16 3 43 0 17 4 130 0 20 4 130 0 21 4 130 0 24 4 130 0 26 4 130 0 27 4 130 0 28 4 130 0 29 4 130 0 31 4 130 0 33 4 130 0 34 4 130 0 35 4 130 0 36 4 130 0 37 4 130 0 38 4 130 0 39 4 130 0 42 4 130 0 43 4 130 0 44 4 130 0 46 4 130 0 48 4 130 0 50 4 130 0 61 4 130 0 70 4 130 0 86 4 130 0 110 4 130 0 115 4 130 0 122 4 130 0 125 4 130 0 126 4 130 0 129 4 130 0 132 4 130 0 133 4 130 0 134 4 130 0 135 11 109 1 71 7 157 1 73] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 10 97 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 11 113 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 4 134 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 138 0 1 4 138 0 2 3 47 0 4 4 138 0 6 4 138 0 7 4 138 0 9 4 138 0 10 3 51 0 11 4 138 0 13 4 138 0 16 4 138 0 17 4 138 0 20 4 138 0 21 3 55 0 24 4 138 0 26 4 138 0 27 4 138 0 28 4 138 0 29 4 138 0 31 4 138 0 33 4 138 0 34 4 138 0 35 4 138 0 36 4 138 0 37 4 138 0 38 4 138 0 39 4 138 0 42 4 138 0 43 4 138 0 44 4 138 0 46 4 138 0 48 3 59 0 50 4 138 0 61 4 138 0 70 4 138 0 86 4 138 0 110 4 138 0 115 4 138 0 122 4 138 0 125 4 138 0 126 4 138 0 129 4 138 0 132 4 138 0 133 4 138 0 134 4 138 0 135 11 117 1 75 7 169 1 77] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 6 149 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 11 121 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 11 121 1 83 11 121 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 4 142 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 4 146 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 4 150 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 2 14 0 1 2 14 0 9 2 14 0 20 2 14 0 28 2 14 0 36 2 14 0 37 2 14 0 42 6 221 1 34 6 229 1 91] 
#[0 4 154 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 4 158 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 162 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 166 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 170 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 174 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 178 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 182 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 186 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 11 125 0 35] 
#[0 4 190 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 194 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 198 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 202 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 11 129 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 4 206 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 210 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 4 214 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 4 218 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 4 222 0 10 0 16] 
#[0 11 133 0 71] 
#[1 1 70 0 9 11 137 0 20] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 6 1 0 22 6 5 0 23 2 241 0 28 2 245 0 42 11 141 0 43 3 253 0 49 2 253 0 57 3 1 0 64 6 13 0 67 6 17 0 68 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 21 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 25 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 11 145 1 2 6 33 1 5 6 37 1 6 6 41 1 7 6 45 1 8 6 49 1 9 6 53 1 10 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 6 1 0 22 6 5 0 23 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 6 13 0 67 6 17 0 68 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 21 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 11 149 0 135 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 25 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 11 153 1 2 6 33 1 5 6 37 1 6 6 41 1 7 6 45 1 8 6 49 1 9 6 53 1 10 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 4 226 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 2 73 0 89 11 157 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 11 161 0 221 2 73 1 97 11 165 1 161 2 89 1 162] 
#[1 2 73 0 89 11 157 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 11 169 1 161 2 89 1 162] 
#[1 2 73 0 89 11 157 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 11 173 1 161 2 89 1 162 11 177 1 167] 
#[1 2 73 0 89 11 157 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 11 173 1 161 2 89 1 162 11 181 1 167] 
#[1 4 230 0 41 4 230 0 57 4 230 0 65 4 230 0 81 4 230 0 82 4 230 0 85 4 230 0 86 4 230 0 87 4 230 0 88 4 230 0 89 4 230 0 90 4 230 0 91 4 230 0 92 4 230 0 93 4 230 0 94 4 230 0 95 4 230 0 96 4 230 0 97 4 230 0 98 4 230 0 99 4 230 0 100 4 230 0 101 4 230 0 102 4 230 0 103 4 230 0 104 4 230 0 105 4 230 0 106 4 230 0 107 4 230 0 108 4 230 0 109 4 230 0 110 4 230 0 111 4 230 0 112 4 230 0 113 4 230 0 114 4 230 0 115 4 230 0 135 4 230 0 137 11 185 0 184] 
#[1 8 41 0 84 8 45 0 96 11 189 0 134 11 193 0 186 11 197 0 187] 
#[1 8 45 0 96 11 201 0 134 11 205 0 187] 
#[0 11 209 0 134] 
#[0 4 234 0 32 0 63 0 84 0 96 0 134] 
#[0 4 238 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 11 213 0 16 4 242 0 27 11 217 0 201] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 11 221 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 11 225 0 27] 
#[1 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 11 229 0 229 11 233 0 234 0 29 0 236] 
#[1 8 45 0 96 11 237 0 134 11 241 0 187] 
#[0 11 245 0 134] 
#[1 8 41 0 84 8 45 0 96 11 249 0 134 11 253 0 186 12 1 0 187] 
#[0 4 246 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 12 5 0 27] 
#[1 8 33 0 32 8 37 0 63 8 41 0 84 8 45 0 96 12 9 0 134 12 13 0 185 12 17 0 186 12 21 0 187] 
#[0 4 250 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 12 25 0 134] 
#[1 2 81 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 12 29 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[1 2 81 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 12 33 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[0 12 37 0 113] 
#[0 4 254 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[1 5 2 0 16 5 2 0 27 5 2 0 111 5 2 0 114 12 41 1 147] 
#[0 12 45 0 27] 
#[0 5 6 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 5 10 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 5 14 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 5 18 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 0 10 0 41 0 10 0 82 0 10 0 89 0 10 0 94 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 8 169 0 234 0 29 0 236 12 49 1 177 8 177 1 180] 
#[1 0 10 0 41 0 10 0 82 0 10 0 89 0 10 0 94 0 10 0 104 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 12 53 0 234 0 29 0 236 12 57 1 186] 
#[1 2 81 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 12 61 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 12 65 1 187] 
#[1 12 69 0 10 12 73 0 16] 
#[1 5 22 0 10 5 22 0 16 5 22 0 43 12 77 1 179] 
#[0 12 81 0 10] 
#[0 5 26 0 10] 
#[0 5 30 0 10] 
#[0 5 34 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 5 38 0 16 5 38 0 27 12 85 0 157] 
#[0 12 89 0 27] 
#[1 5 42 0 16 5 42 0 27 12 93 0 32] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 197 0 154 12 97 0 155 1 13 1 94 8 205 1 95 1 13 1 198] 
#[1 2 230 0 16 2 230 0 27 12 101 0 32 12 105 0 149] 
#[1 2 73 0 89 11 157 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 11 173 1 161 2 89 1 162 12 109 1 167] 
#[1 5 46 0 41 5 46 0 57 5 46 0 65 5 46 0 81 5 46 0 82 5 46 0 85 5 46 0 86 5 46 0 87 5 46 0 88 5 46 0 89 5 46 0 90 5 46 0 91 5 46 0 92 5 46 0 93 5 46 0 94 5 46 0 95 5 46 0 96 5 46 0 97 5 46 0 98 5 46 0 99 5 46 0 100 5 46 0 101 5 46 0 102 5 46 0 103 5 46 0 104 5 46 0 105 5 46 0 106 5 46 0 107 5 46 0 108 5 46 0 109 5 46 0 110 5 46 0 111 5 46 0 112 5 46 0 113 5 46 0 114 5 46 0 115 5 46 0 135 5 46 0 137 12 113 0 192] 
#[0 12 117 0 134] 
#[1 8 45 0 96 12 121 0 113 12 125 0 134 12 129 0 187] 
#[0 5 50 0 27 0 34 0 110 0 115 0 134] 
#[1 2 81 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 12 133 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[0 12 137 0 32] 
#[0 5 54 0 9 0 28] 
#[0 12 141 0 27] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 12 145 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 12 149 0 16 12 153 0 27 12 157 0 148] 
#[0 12 161 0 27] 
#[1 4 221 0 134 12 165 0 161] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 12 169 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 5 58 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 56 0 57 0 58 0 59 0 60 0 61 0 62 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137 1 199] 
#[1 4 221 0 134 12 173 0 161] 
#[0 5 62 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 41 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 52 0 53 0 54 0 55 0 56 0 57 0 58 0 59 0 60 0 61 0 62 0 64 0 65 0 66 0 67 0 68 0 70 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137 1 199] 
#[1 2 234 0 1 2 234 0 3 2 234 0 9 2 234 0 14 2 234 0 17 2 234 0 18 2 234 0 27 2 234 0 28 2 234 0 41 2 234 0 42 2 234 0 49 2 234 0 52 2 234 0 53 2 234 0 57 2 234 0 58 2 234 0 60 2 234 0 64 2 234 0 65 2 234 0 67 2 234 0 68 2 234 0 71 2 234 0 72 2 234 0 73 2 234 0 74 2 234 0 75 2 234 0 76 2 234 0 77 2 234 0 78 2 234 0 79 2 234 0 80 2 234 0 81 2 234 0 82 2 234 0 83 2 234 0 85 2 234 0 86 2 234 0 87 2 234 0 88 2 234 0 89 2 234 0 90 2 234 0 91 2 234 0 92 2 234 0 93 2 234 0 94 2 234 0 95 2 234 0 96 2 234 0 97 2 234 0 98 2 234 0 99 2 234 0 100 2 234 0 101 2 234 0 102 2 234 0 103 2 234 0 104 2 234 0 105 2 234 0 106 2 234 0 107 2 234 0 108 2 234 0 109 2 234 0 110 2 234 0 111 2 234 0 112 2 234 0 113 2 234 0 114 2 234 0 115 2 234 0 116 2 234 0 117 2 234 0 118 2 234 0 119 2 234 0 120 2 234 0 121 2 234 0 123 2 234 0 124 2 234 0 127 2 234 0 128 2 234 0 130 2 234 0 131 2 234 0 134 12 177 0 135 2 234 0 137 12 181 1 103 9 37 1 104] 
#[0 5 66 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 13 1 0 27 2 241 0 28 0 10 0 41 2 245 0 42 3 253 0 49 12 189 0 52 12 193 0 53 0 247 0 57 12 197 0 58 12 201 0 60 3 1 0 64 0 10 0 65 12 205 0 67 12 209 0 68 3 5 0 71 3 9 0 72 12 213 0 73 12 217 0 74 3 13 0 75 12 221 0 76 3 17 0 77 3 21 0 78 3 25 0 79 12 225 0 80 0 10 0 81 0 10 0 82 12 229 0 83 0 255 0 85 1 3 0 86 1 7 0 87 1 11 0 88 1 15 0 89 1 19 0 90 1 23 0 91 1 27 0 92 1 31 0 93 1 35 0 94 1 39 0 95 1 43 0 96 1 47 0 97 1 51 0 98 1 55 0 99 1 59 0 100 1 63 0 101 1 67 0 102 1 71 0 103 1 75 0 104 1 79 0 105 1 83 0 106 1 87 0 107 3 63 0 108 3 67 0 109 1 99 0 110 1 103 0 111 1 107 0 112 1 111 0 113 1 115 0 114 1 119 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 12 241 0 134 1 123 0 137 13 1 0 161 3 85 0 162 3 89 0 163 3 93 0 231 12 249 0 234 0 29 0 236 12 253 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 4 17 1 95 4 37 1 96 1 81 1 97 13 1 1 105 13 1 1 106 13 1 1 107 13 1 1 111 13 1 1 112 13 1 1 113 13 1 1 116 13 1 1 117 13 1 1 118 13 1 1 122 13 1 1 123 13 1 1 128 13 49 1 129 13 1 1 130 13 1 1 131 13 1 1 132 13 1 1 133 13 1 1 134 13 73 1 135 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 77 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 9 125 0 174 9 129 0 179 5 237 0 234 0 29 0 236] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 77 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 3 71 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 9 137 0 174 9 141 0 180 5 237 0 234 0 29 0 236] 
#[0 1 178 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 5 70 0 27 0 34 0 110 0 115 0 134] 
#[1 4 241 0 9 13 81 0 163] 
#[0 5 74 0 27 0 34 0 110 0 115 0 134] 
#[0 5 78 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 5 82 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 5 86 0 27 0 111 0 114] 
#[0 5 90 0 27 0 111 0 114] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 1 17 1 95 13 85 1 137 13 89 1 157 1 13 1 198] 
#[1 13 93 0 27 5 49 0 111 5 53 0 114 5 57 1 144] 
#[1 1 50 0 27 1 50 0 111 1 50 0 114 13 97 1 143] 
#[0 5 94 0 9 0 27 0 41 0 56 0 57 0 62 0 65 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 5 98 0 9 0 27 0 41 0 56 0 57 0 62 0 65 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[1 2 81 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 13 101 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[0 5 102 0 16 0 35] 
#[0 5 106 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[1 5 110 0 1 5 110 0 2 5 110 0 3 5 110 0 4 5 110 0 6 5 110 0 7 5 110 0 9 5 110 0 10 5 110 0 11 5 110 0 13 5 110 0 14 5 110 0 16 5 110 0 17 5 110 0 18 5 110 0 20 5 110 0 21 5 110 0 24 5 110 0 26 5 110 0 27 5 110 0 28 5 110 0 29 5 110 0 31 5 110 0 33 5 110 0 34 3 75 0 35 5 110 0 36 5 110 0 37 5 110 0 38 5 110 0 39 5 110 0 42 5 110 0 43 5 110 0 44 5 110 0 46 5 110 0 48 5 110 0 49 5 110 0 50 5 110 0 57 5 110 0 61 5 110 0 64 5 110 0 70 5 110 0 71 5 110 0 72 5 110 0 75 5 110 0 77 5 110 0 79 5 110 0 85 5 110 0 86 5 110 0 87 5 110 0 88 5 110 0 89 5 110 0 90 5 110 0 91 5 110 0 92 5 110 0 93 5 110 0 94 5 110 0 95 5 110 0 96 5 110 0 97 5 110 0 98 5 110 0 99 5 110 0 100 5 110 0 101 5 110 0 102 5 110 0 103 5 110 0 104 5 110 0 105 5 110 0 106 5 110 0 107 5 110 0 108 5 110 0 109 5 110 0 110 5 110 0 111 5 110 0 112 5 110 0 113 5 110 0 114 5 110 0 115 5 110 0 116 5 110 0 117 5 110 0 118 5 110 0 119 5 110 0 120 5 110 0 121 5 110 0 122 5 110 0 123 5 110 0 124 5 110 0 125 5 110 0 126 5 110 0 127 5 110 0 128 5 110 0 129 5 110 0 130 5 110 0 131 5 110 0 132 5 110 0 133 5 110 0 134 5 110 0 135 5 110 0 137] 
#[1 5 114 0 1 5 114 0 2 5 114 0 4 5 114 0 6 5 114 0 7 5 114 0 9 5 114 0 10 5 114 0 11 5 114 0 13 5 114 0 16 5 114 0 17 5 114 0 20 5 114 0 21 5 114 0 24 5 114 0 26 5 114 0 27 5 114 0 28 5 114 0 29 5 114 0 31 13 109 0 32 5 114 0 33 5 114 0 34 5 114 0 35 5 114 0 36 5 114 0 37 5 114 0 38 5 114 0 39 5 114 0 42 5 114 0 43 5 114 0 44 5 114 0 46 5 114 0 48 5 114 0 50 5 114 0 61 5 114 0 70 5 114 0 86 5 114 0 110 5 114 0 115 5 114 0 122 5 114 0 125 5 114 0 126 5 114 0 129 5 114 0 132 5 114 0 133 5 114 0 134 5 114 0 135] 
#[1 5 118 0 1 5 118 0 2 5 118 0 4 5 118 0 6 5 118 0 7 5 118 0 9 5 118 0 10 5 118 0 11 5 118 0 13 5 118 0 16 5 118 0 17 3 79 0 20 5 118 0 21 5 118 0 24 5 118 0 26 5 118 0 27 5 118 0 28 5 118 0 29 5 118 0 31 5 118 0 33 5 118 0 34 5 118 0 35 5 118 0 36 5 118 0 37 5 118 0 38 5 118 0 39 5 118 0 42 5 118 0 43 5 118 0 44 5 118 0 46 5 118 0 48 5 118 0 50 5 118 0 61 5 118 0 70 5 118 0 86 5 118 0 110 5 118 0 115 5 118 0 122 5 118 0 125 5 118 0 126 5 118 0 129 5 118 0 132 5 118 0 133 5 118 0 134 5 118 0 135 2 141 1 138] 
#[1 5 122 0 16 13 113 0 32 5 122 0 43] 
#[1 5 126 0 16 5 126 0 43 13 117 0 170] 
#[1 0 134 0 1 0 134 0 2 0 134 0 4 0 134 0 5 0 134 0 6 0 134 0 7 0 134 0 8 0 134 0 9 0 134 0 11 0 134 0 12 0 134 0 13 0 134 0 14 0 134 0 15 0 134 0 16 0 134 0 17 0 134 0 18 0 134 0 19 0 134 0 20 0 134 0 21 0 134 0 24 0 134 0 25 0 134 0 26 0 134 0 28 0 134 0 29 0 134 0 30 0 134 0 31 0 134 0 32 0 134 0 33 0 134 0 35 0 134 0 36 0 134 0 37 0 134 0 38 0 134 0 39 0 134 0 40 0 10 0 41 0 134 0 42 0 134 0 44 0 134 0 45 0 134 0 46 0 134 0 47 0 134 0 48 0 134 0 50 0 134 0 51 0 10 0 57 0 10 0 65 0 134 0 70 0 10 0 77 0 10 0 81 0 10 0 82 0 10 0 85 3 83 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 134 0 135 0 10 0 137 13 121 0 174 5 237 0 234 0 29 0 236] 
#[1 5 130 0 16 13 125 0 26 13 129 0 32 5 130 0 135] 
#[1 5 134 0 16 5 134 0 135 13 133 0 173] 
#[0 5 138 0 10 0 16 0 26 0 27 0 32 0 34 0 36 0 43 0 110 0 115 0 134 0 135] 
#[1 13 137 0 10 9 41 0 42 9 45 0 134 13 141 0 167 13 141 0 168 13 141 0 171] 
#[0 5 142 0 10 0 16 0 26 0 27 0 32 0 34 0 36 0 43 0 110 0 115 0 134 0 135] 
#[1 5 146 0 10 3 87 0 16 13 149 0 165] 
#[1 5 150 0 77 2 81 0 82 5 150 0 85 5 150 0 86 5 150 0 87 5 150 0 88 3 91 0 89 5 150 0 90 5 150 0 91 5 150 0 92 5 150 0 93 3 95 0 94 5 150 0 95 5 150 0 96 5 150 0 97 5 150 0 98 5 150 0 99 5 150 0 100 5 150 0 101 5 150 0 102 5 150 0 103 5 150 0 104 5 150 0 105 5 150 0 106 5 150 0 107 3 99 0 108 3 103 0 109 3 107 0 110 3 111 0 111 3 115 0 112 3 119 0 113 3 123 0 114 3 127 0 115 3 131 0 137 2 73 1 97 13 153 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[1 5 154 0 77 2 81 0 82 5 154 0 85 5 154 0 86 5 154 0 87 5 154 0 88 3 135 0 89 5 154 0 90 5 154 0 91 5 154 0 92 5 154 0 93 3 139 0 94 5 154 0 95 5 154 0 96 5 154 0 97 5 154 0 98 5 154 0 99 5 154 0 100 5 154 0 101 5 154 0 102 5 154 0 103 5 154 0 104 5 154 0 105 5 154 0 106 5 154 0 107 3 143 0 108 3 147 0 109 3 151 0 110 3 155 0 111 3 159 0 112 3 163 0 113 3 167 0 114 3 171 0 115 3 175 0 137 2 73 1 97 13 157 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[0 13 161 0 20] 
#[1 0 62 0 9 0 62 0 10 0 62 0 16 0 62 0 26 0 62 0 28 0 62 0 32 0 62 0 43 9 161 0 57 9 165 0 65 13 165 0 81 2 81 0 82 13 169 0 85 13 169 0 86 13 169 0 87 13 169 0 88 1 29 0 89 13 169 0 90 13 169 0 91 13 169 0 92 13 169 0 93 4 69 0 94 13 169 0 95 13 169 0 96 13 169 0 97 13 169 0 98 9 177 0 99 13 169 0 100 13 169 0 101 13 169 0 102 13 169 0 103 13 169 0 104 13 169 0 105 13 169 0 106 13 169 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 0 62 0 135 1 65 0 137 13 165 0 151 13 165 0 153 13 169 1 94 13 173 1 95 2 73 1 97 13 177 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 13 169 1 198] 
#[1 0 114 0 9 0 114 0 10 0 114 0 16 0 114 0 26 0 114 0 28 0 114 0 32 0 114 0 43 13 181 0 65 0 114 0 69 13 185 0 81 2 81 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 0 114 0 135 2 73 0 137 13 185 0 153 2 73 1 97 13 185 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[0 5 158 0 10 0 16 0 26 0 32 0 43 0 135] 
#[1 13 189 0 77 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 13 193 1 95 1 13 1 198] 
#[0 5 162 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 5 166 0 10 0 16 0 26 0 32 0 43 0 135] 
#[0 5 170 0 10 0 16 0 26 0 32 0 43 0 135] 
#[0 5 174 0 10 0 16 0 26 0 32 0 43 0 135] 
#[0 5 178 0 10 0 16 0 26 0 32 0 43 0 135] 
#[1 4 241 0 9 0 186 0 10 0 186 0 16 0 186 0 26 4 105 0 28 0 186 0 32 0 186 0 43 0 186 0 135 13 197 0 162 3 89 0 163 3 93 0 231] 
#[0 5 182 0 10 0 16 0 26 0 32 0 43 0 135] 
#[1 1 126 0 77 0 83 0 85 0 87 0 86 0 91 0 87 0 95 0 88 0 99 0 89 0 103 0 90 0 107 0 91 0 111 0 92 0 115 0 93 0 119 0 94 3 179 0 95 0 127 0 96 0 131 0 97 0 135 0 98 0 139 0 99 0 143 0 100 0 147 0 101 0 151 0 102 0 155 0 103 0 159 0 104 3 183 0 105 0 167 0 106 0 171 0 107 0 175 0 108 0 179 0 109 0 183 0 110 0 187 0 111 0 191 0 112 0 195 0 113 0 199 0 114 0 203 0 115 0 207 0 137 13 201 1 94 13 201 1 198] 
#[0 5 186 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 13 205 0 16 13 209 0 35 13 213 0 232] 
#[1 5 190 0 16 5 190 0 35 13 217 0 63] 
#[0 5 194 0 16 0 43 0 61 0 135] 
#[0 5 198 0 16 0 43 0 61 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 13 221 0 27 2 241 0 28 0 10 0 41 2 245 0 42 3 253 0 49 0 247 0 57 3 1 0 64 0 10 0 65 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 0 10 0 81 0 10 0 82 0 255 0 85 1 3 0 86 1 7 0 87 1 11 0 88 1 15 0 89 1 19 0 90 1 23 0 91 1 27 0 92 1 31 0 93 1 35 0 94 1 39 0 95 1 43 0 96 1 47 0 97 1 51 0 98 1 55 0 99 1 59 0 100 1 63 0 101 1 67 0 102 1 71 0 103 1 75 0 104 1 79 0 105 1 83 0 106 1 87 0 107 1 91 0 108 1 95 0 109 1 99 0 110 1 103 0 111 1 107 0 112 1 111 0 113 1 115 0 114 1 119 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 123 0 137 3 85 0 162 3 89 0 163 3 93 0 231 13 225 0 234 0 29 0 236 13 229 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 13 233 1 107 13 237 1 114 13 241 1 115 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 13 245 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 13 249 0 9] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 13 253 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 5 202 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 14 1 0 16 5 206 0 43 5 206 0 135 14 5 1 3] 
#[0 5 210 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 14 9 0 43] 
#[0 5 214 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 14 13 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 6 1 0 22 6 5 0 23 2 241 0 28 2 245 0 42 14 17 0 43 3 253 0 49 2 253 0 57 3 1 0 64 6 13 0 67 6 17 0 68 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 21 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 25 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 14 21 1 2 6 33 1 5 6 37 1 6 6 41 1 7 6 45 1 8 6 49 1 9 6 53 1 10 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 6 1 0 22 6 5 0 23 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 6 13 0 67 6 17 0 68 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 21 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 14 25 0 135 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 25 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 14 29 1 2 6 33 1 5 6 37 1 6 6 41 1 7 6 45 1 8 6 49 1 9 6 53 1 10 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 5 218 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 5 222 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 129 0 4 1 201 0 9 6 129 0 11 6 125 0 13 6 125 0 17 6 85 0 20 6 129 0 24 1 193 0 28 6 121 0 29 7 133 0 35 6 97 0 42 6 129 0 50 6 133 1 25 6 121 1 69 6 125 1 73 6 129 1 77 6 133 1 88 6 137 1 92 6 141 1 163] 
#[0 5 226 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 5 230 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 14 33 0 43] 
#[1 6 129 0 4 6 81 0 6 1 201 0 9 6 129 0 11 6 125 0 13 6 125 0 17 6 85 0 20 6 129 0 24 1 193 0 28 6 121 0 29 7 133 0 35 6 97 0 42 6 129 0 50 6 133 1 25 6 121 1 69 6 125 1 73 6 129 1 77 6 133 1 88 6 137 1 92 6 141 1 163] 
#[0 5 234 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 129 0 4 6 81 0 6 1 201 0 9 6 129 0 11 6 125 0 13 6 125 0 17 6 85 0 20 6 129 0 24 1 193 0 28 6 121 0 29 7 133 0 35 6 97 0 42 6 101 0 44 6 129 0 50 6 133 1 25 6 121 1 69 6 125 1 73 6 129 1 77 6 133 1 88 6 137 1 92 6 141 1 163] 
#[0 5 238 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 129 0 4 6 81 0 6 1 201 0 9 6 129 0 11 6 125 0 13 6 125 0 17 6 85 0 20 6 129 0 24 6 89 0 28 6 121 0 29 6 117 0 31 5 145 0 35 6 97 0 42 6 101 0 44 6 105 0 46 6 129 0 50 6 133 1 25 6 117 1 55 6 121 1 69 6 125 1 73 6 129 1 77 6 133 1 88 6 137 1 92 6 141 1 163] 
#[0 5 242 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 129 0 4 6 81 0 6 1 201 0 9 6 129 0 11 6 125 0 13 6 125 0 17 6 85 0 20 6 129 0 24 1 193 0 28 6 121 0 29 7 133 0 35 6 97 0 42 6 101 0 44 6 105 0 46 6 129 0 50 6 133 1 25 6 121 1 69 6 125 1 73 6 129 1 77 6 133 1 88 6 137 1 92 6 141 1 163] 
#[0 5 246 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 129 0 4 1 201 0 9 6 129 0 11 6 125 0 13 6 125 0 17 6 85 0 20 6 129 0 24 1 193 0 28 6 97 0 42 6 129 0 50 6 133 1 25 6 125 1 73 6 129 1 77 6 133 1 88 6 137 1 92 6 141 1 163] 
#[0 5 250 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 129 0 4 1 201 0 9 6 129 0 11 6 85 0 20 6 129 0 24 1 193 0 28 6 97 0 42 6 129 0 50 6 133 1 25 6 129 1 77 6 133 1 88 6 137 1 92 6 141 1 163] 
#[0 5 254 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 2 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 6 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 14 37 0 122 14 41 0 126 14 45 1 192] 
#[1 14 49 0 125 14 41 0 126 14 45 1 192] 
#[1 14 53 0 129 14 57 0 133 14 61 1 195] 
#[1 14 65 0 132 14 57 0 133 14 61 1 195] 
#[0 6 10 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 14 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 221 0 134 14 69 0 161] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 14 73 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 6 18 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 4 221 0 134 14 77 0 161] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 14 81 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 6 22 0 10 0 16] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 14 85 1 29 1 13 1 94 14 89 1 95 4 25 1 129 1 13 1 198] 
#[0 6 26 0 10 0 16] 
#[0 6 30 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 14 93 0 42] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 14 97 1 95 1 13 1 198] 
#[0 6 34 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 38 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 42 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 3 187 0 1 6 46 0 2 6 46 0 4 6 46 0 5 6 46 0 6 6 46 0 7 6 46 0 8 3 187 0 9 6 46 0 10 6 46 0 11 6 46 0 12 6 46 0 13 6 46 0 14 6 46 0 15 6 46 0 16 6 46 0 17 6 46 0 18 6 46 0 19 3 187 0 20 6 46 0 21 6 46 0 24 6 46 0 25 6 46 0 26 6 46 0 27 3 187 0 28 6 46 0 29 6 46 0 30 6 46 0 31 6 46 0 32 6 46 0 33 6 46 0 34 6 46 0 35 3 187 0 36 3 187 0 37 6 46 0 38 6 46 0 39 6 46 0 40 3 187 0 42 6 46 0 43 6 46 0 44 6 46 0 45 6 46 0 46 6 46 0 47 6 46 0 48 6 46 0 50 6 46 0 51 6 46 0 61 6 46 0 70 6 46 0 86 6 46 0 110 6 46 0 115 6 46 0 122 6 46 0 125 6 46 0 126 6 46 0 129 6 46 0 132 6 46 0 133 6 46 0 134 6 46 0 135] 
#[1 6 54 0 1 6 54 0 2 6 54 0 4 6 54 0 6 6 54 0 7 3 191 0 9 6 54 0 10 6 54 0 11 6 54 0 13 6 54 0 16 6 54 0 17 6 54 0 20 6 54 0 21 6 54 0 24 6 54 0 26 6 54 0 27 6 54 0 28 6 54 0 29 6 54 0 31 6 54 0 33 6 54 0 34 6 54 0 35 6 54 0 36 6 54 0 37 6 54 0 38 6 54 0 39 6 54 0 42 6 54 0 43 6 54 0 44 6 54 0 46 6 54 0 48 6 54 0 50 6 54 0 61 6 54 0 70 6 54 0 86 6 54 0 110 6 54 0 115 6 54 0 122 6 54 0 125 6 54 0 126 6 54 0 129 6 54 0 132 6 54 0 133 6 54 0 134 6 54 0 135 10 109 1 25] 
#[0 6 58 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 50 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 62 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 41 0 42 0 43 0 44 0 46 0 48 0 50 0 56 0 57 0 61 0 62 0 65 0 70 0 77 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 14 101 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 6 66 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 2 14 0 1 2 14 0 2 2 14 0 4 7 249 0 5 2 14 0 6 2 14 0 7 7 249 0 8 2 14 0 9 2 14 0 10 2 14 0 11 7 249 0 12 2 14 0 13 7 249 0 15 2 14 0 16 2 14 0 17 7 249 0 19 2 14 0 20 2 14 0 21 2 14 0 24 7 249 0 25 2 14 0 26 2 14 0 27 2 14 0 28 2 14 0 29 7 249 0 30 2 14 0 31 7 221 0 32 2 14 0 33 2 14 0 34 3 195 0 35 2 14 0 36 2 14 0 37 2 14 0 38 2 14 0 39 7 249 0 40 2 14 0 42 2 14 0 43 2 14 0 44 7 249 0 45 2 14 0 46 7 249 0 47 2 14 0 48 2 14 0 50 7 249 0 51 2 14 0 61 2 14 0 70 2 14 0 86 2 14 0 110 2 14 0 115 2 14 0 122 2 14 0 125 2 14 0 126 2 14 0 129 2 14 0 132 2 14 0 133 2 14 0 134 2 14 0 135 14 105 1 33 14 109 1 34 14 105 1 35 14 117 1 36 7 249 1 37] 
#[0 6 70 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 15 0 16 0 17 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 74 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 78 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 10 237 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 10 241 0 162 3 89 0 163 3 93 0 231 14 121 0 240 14 121 0 241 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 14 121 1 13 3 105 1 14 14 121 1 17 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 14 121 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 11 9 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 14 125 0 34 14 129 0 110 6 193 0 115 4 221 0 134 6 205 0 161 6 201 1 15 14 133 1 18 6 205 1 20] 
#[0 14 137 0 26] 
#[0 6 82 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 86 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 90 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 94 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 7 249 0 5 7 249 0 8 7 249 0 12 7 253 0 14 7 249 0 15 7 253 0 18 7 249 0 19 7 249 0 25 7 249 0 30 7 221 0 32 7 225 0 35 7 249 0 40 7 249 0 45 7 249 0 47 7 249 0 51 14 141 1 36 7 249 1 37 7 253 1 86 7 253 1 89] 
#[0 6 98 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 102 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 106 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 110 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 114 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 118 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 122 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 126 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 130 0 82 0 89 0 94 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 6 134 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 138 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 142 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 5 13 0 94 2 97 1 173 5 17 1 174] 
#[1 6 146 0 1 6 146 0 2 6 146 0 4 6 146 0 6 6 146 0 7 6 146 0 9 6 146 0 10 6 146 0 11 6 146 0 13 6 146 0 16 6 146 0 17 6 146 0 20 6 146 0 21 6 146 0 24 6 146 0 26 6 146 0 27 6 146 0 28 6 146 0 29 6 146 0 31 6 146 0 33 6 146 0 34 6 146 0 35 6 146 0 36 6 146 0 37 6 146 0 38 6 146 0 39 6 146 0 42 6 146 0 43 6 146 0 44 6 146 0 46 6 146 0 48 6 146 0 50 6 146 0 55 6 146 0 61 6 146 0 70 6 146 0 86 1 134 0 94 6 146 0 110 6 146 0 115 6 146 0 122 6 146 0 125 6 146 0 126 6 146 0 129 6 146 0 132 6 146 0 133 6 146 0 134 6 146 0 135] 
#[1 6 150 0 1 6 150 0 2 6 150 0 4 6 150 0 6 6 150 0 7 6 150 0 9 6 150 0 10 6 150 0 11 6 150 0 13 6 150 0 16 6 150 0 17 6 150 0 20 6 150 0 21 6 150 0 24 6 150 0 26 6 150 0 27 6 150 0 28 6 150 0 29 6 150 0 31 6 150 0 33 6 150 0 34 6 150 0 35 3 199 0 36 6 150 0 37 6 150 0 38 6 150 0 39 6 150 0 42 6 150 0 43 6 150 0 44 6 150 0 46 6 150 0 48 6 150 0 50 6 150 0 55 6 150 0 61 6 150 0 70 6 150 0 86 6 150 0 110 6 150 0 115 6 150 0 122 6 150 0 125 6 150 0 126 6 150 0 129 6 150 0 132 6 150 0 133 6 150 0 134 6 150 0 135] 
#[0 6 154 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 158 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 162 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 166 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 170 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 174 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 178 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 182 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 186 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 190 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 194 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 198 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 6 202 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 14 149 0 32 14 153 0 35] 
#[0 6 206 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 210 0 1 6 210 0 2 6 210 0 4 6 210 0 6 6 210 0 7 3 203 0 9 6 210 0 10 6 210 0 11 6 210 0 13 6 210 0 16 6 210 0 17 6 210 0 20 6 210 0 21 6 210 0 24 6 210 0 26 6 210 0 27 6 210 0 28 6 210 0 29 6 210 0 31 6 210 0 33 6 210 0 34 6 210 0 35 6 210 0 36 6 210 0 37 6 210 0 38 6 210 0 39 6 210 0 42 6 210 0 43 6 210 0 44 6 210 0 46 6 210 0 48 6 210 0 50 6 210 0 61 6 210 0 70 6 210 0 86 6 210 0 110 6 210 0 115 6 210 0 122 6 210 0 125 6 210 0 126 6 210 0 129 6 210 0 132 6 210 0 133 6 210 0 134 6 210 0 135 14 157 1 25] 
#[1 14 161 0 71 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 5 101 1 95 1 13 1 198] 
#[0 6 214 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 14 165 0 43] 
#[0 6 218 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 14 169 0 135] 
#[1 1 102 0 16 1 102 0 27 4 149 0 36 1 102 0 84 1 102 0 96 1 102 0 134] 
#[0 14 173 0 27] 
#[1 8 41 0 84 14 177 0 186] 
#[0 6 222 0 84 0 96 0 134] 
#[1 6 226 0 16 6 226 0 27 6 226 0 96 6 226 0 134 14 181 1 169] 
#[0 6 230 0 27 0 96 0 134] 
#[0 6 234 0 27 0 134] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 14 185 0 135 0 10 0 137 14 189 0 183 14 193 0 234 0 29 0 236] 
#[1 4 230 0 41 4 230 0 57 4 230 0 65 4 230 0 81 4 230 0 82 4 230 0 85 4 230 0 86 4 230 0 87 4 230 0 88 4 230 0 89 4 230 0 90 4 230 0 91 4 230 0 92 4 230 0 93 4 230 0 94 4 230 0 95 4 230 0 96 4 230 0 97 4 230 0 98 4 230 0 99 4 230 0 100 4 230 0 101 4 230 0 102 4 230 0 103 4 230 0 104 4 230 0 105 4 230 0 106 4 230 0 107 4 230 0 108 4 230 0 109 4 230 0 110 4 230 0 111 4 230 0 112 4 230 0 113 4 230 0 114 4 230 0 115 4 230 0 135 4 230 0 137 14 197 0 184] 
#[1 8 45 0 96 14 201 0 134 14 205 0 187] 
#[0 14 209 0 134] 
#[1 4 230 0 41 4 230 0 57 4 230 0 65 4 230 0 81 4 230 0 82 4 230 0 85 4 230 0 86 4 230 0 87 4 230 0 88 4 230 0 89 4 230 0 90 4 230 0 91 4 230 0 92 4 230 0 93 4 230 0 94 4 230 0 95 4 230 0 96 4 230 0 97 4 230 0 98 4 230 0 99 4 230 0 100 4 230 0 101 4 230 0 102 4 230 0 103 4 230 0 104 4 230 0 105 4 230 0 106 4 230 0 107 4 230 0 108 4 230 0 109 4 230 0 110 4 230 0 111 4 230 0 112 4 230 0 113 4 230 0 114 4 230 0 115 4 230 0 135 4 230 0 137 14 213 0 184] 
#[0 14 217 0 134] 
#[1 4 230 0 41 4 230 0 57 4 230 0 65 4 230 0 81 4 230 0 82 4 230 0 85 4 230 0 86 4 230 0 87 4 230 0 88 4 230 0 89 4 230 0 90 4 230 0 91 4 230 0 92 4 230 0 93 4 230 0 94 4 230 0 95 4 230 0 96 4 230 0 97 4 230 0 98 4 230 0 99 4 230 0 100 4 230 0 101 4 230 0 102 4 230 0 103 4 230 0 104 4 230 0 105 4 230 0 106 4 230 0 107 4 230 0 108 4 230 0 109 4 230 0 110 4 230 0 111 4 230 0 112 4 230 0 113 4 230 0 114 4 230 0 115 4 230 0 135 4 230 0 137 14 221 0 184] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 14 225 0 203 1 13 1 94 4 81 1 95 1 13 1 198] 
#[0 6 238 0 16 0 27] 
#[0 6 242 0 16 0 27] 
#[0 6 246 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 6 250 0 16 6 250 0 27 6 250 0 135 14 229 0 224] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 14 233 1 95 1 13 1 198] 
#[1 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 14 237 0 229 11 233 0 234 0 29 0 236] 
#[0 14 241 0 134] 
#[1 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 14 245 0 229 11 233 0 234 0 29 0 236] 
#[1 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 14 249 0 229 11 233 0 234 0 29 0 236] 
#[1 8 45 0 96 14 253 0 134 15 1 0 187] 
#[0 15 5 0 134] 
#[0 6 254 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 4 230 0 41 4 230 0 57 4 230 0 65 4 230 0 81 4 230 0 82 4 230 0 85 4 230 0 86 4 230 0 87 4 230 0 88 4 230 0 89 4 230 0 90 4 230 0 91 4 230 0 92 4 230 0 93 4 230 0 94 4 230 0 95 4 230 0 96 4 230 0 97 4 230 0 98 4 230 0 99 4 230 0 100 4 230 0 101 4 230 0 102 4 230 0 103 4 230 0 104 4 230 0 105 4 230 0 106 4 230 0 107 4 230 0 108 4 230 0 109 4 230 0 110 4 230 0 111 4 230 0 112 4 230 0 113 4 230 0 114 4 230 0 115 4 230 0 135 4 230 0 137 15 9 0 184] 
#[1 8 41 0 84 8 45 0 96 15 13 0 134 15 17 0 186 15 21 0 187] 
#[1 8 45 0 96 15 25 0 134 15 29 0 187] 
#[0 15 33 0 134] 
#[1 7 2 0 41 7 2 0 57 7 2 0 65 7 2 0 81 7 2 0 82 7 2 0 85 7 2 0 86 7 2 0 87 7 2 0 88 7 2 0 89 7 2 0 90 7 2 0 91 7 2 0 92 7 2 0 93 7 2 0 94 7 2 0 95 7 2 0 96 7 2 0 97 7 2 0 98 7 2 0 99 7 2 0 100 7 2 0 101 7 2 0 102 7 2 0 103 7 2 0 104 7 2 0 105 7 2 0 106 7 2 0 107 7 2 0 108 7 2 0 109 7 2 0 110 7 2 0 111 7 2 0 112 7 2 0 113 7 2 0 114 7 2 0 115 7 2 0 135 7 2 0 137 15 37 0 196] 
#[0 15 41 0 134] 
#[0 15 45 0 134] 
#[1 2 81 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 15 49 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[1 15 53 0 16 7 6 0 27 7 6 0 111 7 6 0 114 15 57 1 146] 
#[0 7 10 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 15 61 0 16 15 65 0 43] 
#[1 2 81 0 82 2 73 0 89 2 161 0 94 15 69 0 104 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 15 73 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 15 77 1 187] 
#[1 7 14 0 16 7 14 0 135 15 81 1 185] 
#[1 7 18 0 10 7 18 0 16 7 18 0 43 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 15 85 1 95 1 13 1 198] 
#[0 7 22 0 10 0 16 0 43] 
#[0 7 26 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 15 89 0 10 8 161 0 42 8 165 0 134 15 93 1 181 15 93 1 182 15 93 1 183] 
#[1 7 30 0 10 3 207 0 16 7 30 0 43 15 101 1 178] 
#[0 7 34 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[1 15 105 0 16 7 38 0 27 15 109 0 156] 
#[0 7 42 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 15 113 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 15 117 0 27] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 15 121 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 12 149 0 16 15 125 0 27 12 157 0 148] 
#[1 8 45 0 96 15 129 0 134 15 133 0 187] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 15 137 0 135 0 10 0 137 15 141 0 191 15 145 0 234 0 29 0 236] 
#[1 5 46 0 41 5 46 0 57 5 46 0 65 5 46 0 81 5 46 0 82 5 46 0 85 5 46 0 86 5 46 0 87 5 46 0 88 5 46 0 89 5 46 0 90 5 46 0 91 5 46 0 92 5 46 0 93 5 46 0 94 5 46 0 95 5 46 0 96 5 46 0 97 5 46 0 98 5 46 0 99 5 46 0 100 5 46 0 101 5 46 0 102 5 46 0 103 5 46 0 104 5 46 0 105 5 46 0 106 5 46 0 107 5 46 0 108 5 46 0 109 5 46 0 110 5 46 0 111 5 46 0 112 5 46 0 113 5 46 0 114 5 46 0 115 5 46 0 135 5 46 0 137 15 149 0 192] 
#[1 2 73 0 89 11 157 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 11 173 1 161 2 89 1 162 15 153 1 167] 
#[1 5 46 0 41 5 46 0 57 5 46 0 65 5 46 0 81 5 46 0 82 5 46 0 85 5 46 0 86 5 46 0 87 5 46 0 88 5 46 0 89 5 46 0 90 5 46 0 91 5 46 0 92 5 46 0 93 5 46 0 94 5 46 0 95 5 46 0 96 5 46 0 97 5 46 0 98 5 46 0 99 5 46 0 100 5 46 0 101 5 46 0 102 5 46 0 103 5 46 0 104 5 46 0 105 5 46 0 106 5 46 0 107 5 46 0 108 5 46 0 109 5 46 0 110 5 46 0 111 5 46 0 112 5 46 0 113 5 46 0 114 5 46 0 115 5 46 0 135 5 46 0 137 15 157 0 192] 
#[0 15 161 0 134] 
#[0 15 165 0 27] 
#[1 2 81 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 15 169 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[0 7 46 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 2 230 0 16 2 230 0 27 15 173 0 149] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 15 177 0 154 1 13 1 94 8 205 1 95 1 13 1 198] 
#[0 7 50 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 7 54 0 16 0 27] 
#[0 7 58 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 56 0 57 0 58 0 59 0 60 0 61 0 62 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137 1 199] 
#[0 7 62 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 56 0 57 0 58 0 59 0 60 0 61 0 62 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137 1 199] 
#[0 15 181 0 27] 
#[0 7 66 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 56 0 57 0 58 0 59 0 60 0 61 0 62 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137 1 199] 
#[0 7 70 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 41 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 52 0 53 0 54 0 55 0 56 0 57 0 58 0 59 0 60 0 61 0 62 0 64 0 65 0 66 0 67 0 68 0 70 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137 1 199] 
#[0 7 74 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 78 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 15 185 0 9] 
#[1 15 189 0 27 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 15 193 1 95 1 13 1 198] 
#[1 15 197 0 27 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 15 201 1 95 1 13 1 198] 
#[1 2 234 0 1 2 234 0 3 2 234 0 9 2 234 0 14 2 234 0 17 2 234 0 18 2 234 0 27 2 234 0 28 2 234 0 41 2 234 0 42 2 234 0 49 2 234 0 52 2 234 0 53 2 234 0 57 2 234 0 58 2 234 0 60 2 234 0 64 2 234 0 65 2 234 0 67 2 234 0 68 2 234 0 71 2 234 0 72 2 234 0 73 2 234 0 74 2 234 0 75 2 234 0 76 2 234 0 77 2 234 0 78 2 234 0 79 2 234 0 80 2 234 0 81 2 234 0 82 2 234 0 83 2 234 0 85 2 234 0 86 2 234 0 87 2 234 0 88 2 234 0 89 2 234 0 90 2 234 0 91 2 234 0 92 2 234 0 93 2 234 0 94 2 234 0 95 2 234 0 96 2 234 0 97 2 234 0 98 2 234 0 99 2 234 0 100 2 234 0 101 2 234 0 102 2 234 0 103 2 234 0 104 2 234 0 105 2 234 0 106 2 234 0 107 2 234 0 108 2 234 0 109 2 234 0 110 2 234 0 111 2 234 0 112 2 234 0 113 2 234 0 114 2 234 0 115 2 234 0 116 2 234 0 117 2 234 0 118 2 234 0 119 2 234 0 120 2 234 0 121 2 234 0 123 2 234 0 124 2 234 0 127 2 234 0 128 2 234 0 130 2 234 0 131 2 234 0 134 2 234 0 137 15 205 1 103 9 37 1 104] 
#[0 15 209 0 9] 
#[0 15 213 0 9] 
#[0 15 217 0 27] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 15 221 0 27 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 15 225 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 15 229 0 9] 
#[1 4 221 0 134 15 233 0 161] 
#[0 15 237 0 9] 
#[1 1 167 0 1 0 150 0 2 2 217 0 3 0 150 0 4 0 150 0 5 0 150 0 6 0 150 0 7 0 150 0 8 1 171 0 9 0 150 0 11 0 150 0 12 0 150 0 13 1 175 0 14 0 150 0 15 1 179 0 17 1 183 0 18 0 150 0 19 0 27 0 20 0 150 0 21 0 150 0 24 0 150 0 25 0 150 0 26 0 150 0 27 1 187 0 28 0 150 0 29 0 150 0 30 0 150 0 31 0 150 0 32 0 150 0 33 0 150 0 35 0 150 0 36 0 150 0 37 0 150 0 38 0 150 0 39 0 150 0 40 1 191 0 42 0 150 0 44 0 150 0 45 0 150 0 46 0 150 0 47 0 150 0 48 3 253 0 49 0 150 0 50 0 150 0 51 2 253 0 57 3 1 0 64 15 241 0 67 0 150 0 70 3 5 0 71 3 9 0 72 6 149 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 195 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 6 153 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 6 153 1 83 6 153 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 211 0 1 0 154 0 2 2 217 0 3 0 154 0 4 0 154 0 5 0 154 0 6 0 154 0 7 0 154 0 8 3 215 0 9 3 219 0 11 0 154 0 12 0 154 0 13 3 223 0 14 0 154 0 15 3 227 0 17 3 231 0 18 0 154 0 19 0 31 0 20 0 154 0 21 0 154 0 24 0 154 0 25 0 154 0 26 0 154 0 27 3 235 0 28 0 154 0 29 0 154 0 30 0 154 0 31 0 154 0 32 0 154 0 33 0 154 0 35 0 154 0 36 0 154 0 37 0 154 0 38 0 154 0 39 0 154 0 40 3 239 0 42 0 154 0 44 0 154 0 45 0 154 0 46 0 154 0 47 0 154 0 48 3 253 0 49 0 154 0 50 0 154 0 51 2 253 0 57 3 1 0 64 0 154 0 70 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 3 243 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 15 249 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 247 0 1 3 251 0 3 3 255 0 9 4 3 0 14 4 7 0 17 4 11 0 18 6 1 0 22 6 5 0 23 2 234 0 27 4 15 0 28 2 234 0 41 4 19 0 42 4 23 0 49 2 234 0 52 2 234 0 53 4 27 0 57 2 234 0 58 2 234 0 60 4 31 0 64 2 234 0 65 4 35 0 67 4 39 0 68 4 43 0 71 4 47 0 72 2 234 0 73 2 234 0 74 4 51 0 75 2 234 0 76 4 55 0 77 4 59 0 78 4 63 0 79 2 234 0 80 2 234 0 81 2 234 0 82 2 234 0 83 4 67 0 85 4 71 0 86 4 75 0 87 4 79 0 88 4 83 0 89 4 87 0 90 4 91 0 91 4 95 0 92 4 99 0 93 4 103 0 94 4 107 0 95 4 111 0 96 4 115 0 97 4 119 0 98 4 123 0 99 4 127 0 100 4 131 0 101 4 135 0 102 4 139 0 103 4 143 0 104 4 147 0 105 4 151 0 106 4 155 0 107 4 159 0 108 4 163 0 109 4 167 0 110 4 171 0 111 4 175 0 112 4 179 0 113 4 183 0 114 4 187 0 115 4 191 0 116 4 195 0 117 4 199 0 118 4 203 0 119 4 207 0 120 4 211 0 121 4 215 0 123 4 219 0 124 4 223 0 127 4 227 0 128 4 231 0 130 4 235 0 131 4 239 0 134 15 253 0 135 4 243 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 25 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 6 181 1 2 6 33 1 5 6 37 1 6 6 41 1 7 6 45 1 8 6 49 1 9 6 53 1 10 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 9 29 1 102 9 33 1 103 9 37 1 104 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 7 82 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 9 161 0 57 9 165 0 65 16 9 0 81 2 81 0 82 2 69 0 85 2 69 0 86 16 1 0 87 2 69 0 88 1 29 0 89 2 69 0 90 2 69 0 91 2 69 0 92 2 69 0 93 2 9 0 94 2 69 0 95 2 69 0 96 2 69 0 97 2 69 0 98 9 177 0 99 2 69 0 100 2 69 0 101 2 69 0 102 2 69 0 103 2 69 0 104 2 69 0 105 2 69 0 106 2 69 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 16 5 0 150 16 9 0 151 16 9 0 153 16 13 0 158 2 69 1 94 2 73 1 97 16 17 1 108 16 21 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 2 69 1 198] 
#[0 16 25 0 27] 
#[0 7 86 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 90 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 94 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 98 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 102 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 106 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 110 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 114 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 118 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 122 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 126 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 130 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 134 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 7 138 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 142 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 146 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 150 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 7 154 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 16 29 0 27] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 77 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 13 121 0 174 5 237 0 234 0 29 0 236] 
#[0 7 158 0 27 0 34 0 110 0 115 0 134] 
#[1 7 162 0 10 16 33 0 33] 
#[0 16 37 0 10] 
#[0 7 166 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 16 41 0 27 5 49 0 111 5 53 0 114 5 57 1 144] 
#[0 7 170 0 16 0 35] 
#[0 7 174 0 1 0 2 0 3 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 14 0 16 0 17 0 18 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 49 0 50 0 57 0 61 0 64 0 70 0 71 0 72 0 75 0 77 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135 0 137] 
#[0 7 178 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 16 45 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 16 49 0 16 16 53 0 43 16 57 0 169] 
#[1 7 182 0 16 16 61 0 26 16 65 0 32 7 182 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 16 69 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 16 73 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 16 77 0 16 16 81 0 135 16 85 0 172] 
#[0 7 186 0 10 0 16 0 26 0 27 0 32 0 34 0 36 0 43 0 110 0 115 0 134 0 135] 
#[0 16 89 0 10] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 77 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 16 93 0 174 5 237 0 234 0 29 0 236] 
#[0 7 190 0 10 0 16] 
#[0 7 194 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 7 198 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 16 97 1 95 1 13 1 198] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 16 101 1 95 1 13 1 198] 
#[1 4 241 0 9 0 186 0 10 0 186 0 16 0 186 0 26 4 105 0 28 0 186 0 32 0 186 0 43 0 186 0 135 16 105 0 162 3 89 0 163 3 93 0 231] 
#[0 7 202 0 10 0 16 0 26 0 32 0 43 0 135] 
#[1 0 83 0 85 0 87 0 86 0 91 0 87 0 95 0 88 0 99 0 89 0 103 0 90 0 107 0 91 0 111 0 92 0 115 0 93 0 119 0 94 3 179 0 95 0 127 0 96 0 131 0 97 0 135 0 98 0 139 0 99 0 143 0 100 0 147 0 101 0 151 0 102 0 155 0 103 0 159 0 104 3 183 0 105 0 167 0 106 0 171 0 107 0 175 0 108 0 179 0 109 0 183 0 110 0 187 0 111 0 191 0 112 0 195 0 113 0 199 0 114 0 203 0 115 0 207 0 137 16 109 1 94 16 109 1 198] 
#[1 7 206 0 77 2 81 0 82 7 206 0 85 7 206 0 86 7 206 0 87 7 206 0 88 4 247 0 89 7 206 0 90 7 206 0 91 7 206 0 92 7 206 0 93 4 251 0 94 7 206 0 95 7 206 0 96 7 206 0 97 7 206 0 98 7 206 0 99 7 206 0 100 7 206 0 101 7 206 0 102 7 206 0 103 7 206 0 104 7 206 0 105 7 206 0 106 7 206 0 107 4 255 0 108 5 3 0 109 5 7 0 110 5 11 0 111 5 15 0 112 5 19 0 113 5 23 0 114 5 27 0 115 5 31 0 137 2 73 1 97 16 113 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[0 7 210 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[0 16 117 0 20] 
#[0 7 214 0 10 0 16 0 26 0 27 0 32 0 43 0 69 0 135] 
#[1 7 218 0 10 7 218 0 16 7 218 0 26 7 218 0 32 16 121 0 36 7 218 0 43 7 218 0 135] 
#[1 4 241 0 9 4 105 0 28 16 125 0 162 3 89 0 163 3 93 0 231] 
#[1 0 10 0 41 0 10 0 89 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 16 129 0 230 5 253 0 234 0 29 0 236] 
#[0 7 222 0 9 0 32 0 63 0 84 0 96 0 113 0 134] 
#[0 7 226 0 16 0 35] 
#[1 11 61 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 16 133 1 159 11 61 1 160 11 65 1 161 2 89 1 162 2 97 1 173 11 69 1 174 11 69 1 175] 
#[0 7 230 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[1 9 161 0 57 9 165 0 65 16 9 0 81 2 81 0 82 1 13 0 85 1 13 0 86 16 1 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 69 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 9 177 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 16 137 0 150 16 9 0 151 16 9 0 153 1 13 1 94 16 141 1 95 2 73 1 97 16 17 1 108 16 9 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 1 13 1 198] 
#[0 16 145 0 27] 
#[0 7 234 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 16 149 0 10] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 16 153 0 27 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 16 157 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 16 161 0 10] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 13 221 0 27 2 241 0 28 0 10 0 41 2 245 0 42 3 253 0 49 0 247 0 57 3 1 0 64 0 10 0 65 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 0 10 0 81 0 10 0 82 0 255 0 85 1 3 0 86 1 7 0 87 1 11 0 88 1 15 0 89 1 19 0 90 1 23 0 91 1 27 0 92 1 31 0 93 1 35 0 94 1 39 0 95 1 43 0 96 1 47 0 97 1 51 0 98 1 55 0 99 1 59 0 100 1 63 0 101 1 67 0 102 1 71 0 103 1 75 0 104 1 79 0 105 1 83 0 106 1 87 0 107 1 91 0 108 1 95 0 109 1 99 0 110 1 103 0 111 1 107 0 112 1 111 0 113 1 115 0 114 1 119 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 123 0 137 3 85 0 162 3 89 0 163 3 93 0 231 13 225 0 234 0 29 0 236 13 229 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 13 233 1 107 16 165 1 114 13 241 1 115 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 7 238 0 16 0 43 0 61 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 6 1 0 22 6 5 0 23 2 241 0 28 2 245 0 42 7 242 0 43 3 253 0 49 2 253 0 57 3 1 0 64 6 13 0 67 6 17 0 68 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 21 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 7 242 0 135 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 25 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 16 169 1 5 6 37 1 6 6 41 1 7 6 45 1 8 6 49 1 9 6 53 1 10 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 7 246 0 16 0 43 0 135] 
#[0 7 250 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 7 254 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 8 2 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 16 173 0 43] 
#[0 8 6 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 16 177 0 135] 
#[0 8 10 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 8 14 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 16 181 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 8 18 0 122 0 125 0 126] 
#[0 8 22 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[0 8 26 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 16 185 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 8 30 0 129 0 132 0 133] 
#[0 8 34 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 118 0 119 0 120 0 121 0 122 0 123 0 124 0 125 0 126 0 127 0 128 0 129 0 130 0 131 0 132 0 133 0 134 0 135] 
#[0 8 38 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 8 42 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 8 46 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 8 50 0 10 0 16] 
#[0 8 54 0 10 0 16] 
#[0 8 5 0 26] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 16 189 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 8 58 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 16 193 0 43] 
#[0 8 62 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 5 35 0 1 8 66 0 2 8 66 0 4 8 66 0 6 8 66 0 7 5 39 0 9 8 66 0 10 8 66 0 11 8 66 0 13 8 66 0 16 8 66 0 17 5 43 0 20 8 66 0 21 8 66 0 24 8 66 0 26 8 66 0 27 5 47 0 28 8 66 0 29 8 66 0 31 8 66 0 33 8 66 0 34 8 66 0 35 5 51 0 36 5 55 0 37 8 66 0 38 8 66 0 39 5 59 0 42 8 66 0 43 8 66 0 44 8 66 0 46 8 66 0 48 8 66 0 50 8 66 0 61 8 66 0 70 8 66 0 86 8 66 0 110 8 66 0 115 8 66 0 122 8 66 0 125 8 66 0 126 8 66 0 129 8 66 0 132 8 66 0 133 8 66 0 134 8 66 0 135 10 181 1 25 10 181 1 87 10 181 1 88 16 197 1 92 16 197 1 93 10 197 1 163] 
#[0 8 70 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 10 237 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 10 241 0 162 3 89 0 163 3 93 0 231 16 201 0 240 16 201 0 241 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 16 201 1 13 3 105 1 14 16 201 1 17 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 16 201 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 11 9 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 8 74 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 16 205 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 10 241 0 162 3 89 0 163 3 93 0 231 10 133 0 238 16 209 0 240 16 209 0 241 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 16 209 1 13 3 105 1 14 16 209 1 17 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 16 213 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 16 217 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 10 137 0 11 16 221 0 34 4 221 0 134 10 145 0 161] 
#[0 8 78 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 10 237 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 10 241 0 162 3 89 0 163 3 93 0 231 16 225 0 240 16 225 0 241 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 16 225 1 13 3 105 1 14 16 225 1 17 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 16 225 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 11 9 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 10 237 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 10 241 0 162 3 89 0 163 3 93 0 231 16 229 0 240 16 229 0 241 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 16 229 1 13 3 105 1 14 16 229 1 17 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 16 229 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 11 9 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 8 82 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 8 86 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 16 233 0 32] 
#[0 8 90 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 8 94 0 1 8 94 0 2 8 94 0 4 8 94 0 6 8 94 0 7 5 63 0 9 8 94 0 10 8 94 0 11 8 94 0 13 8 94 0 16 8 94 0 17 8 94 0 20 8 94 0 21 8 94 0 24 8 94 0 26 8 94 0 27 8 94 0 28 8 94 0 29 8 94 0 31 8 94 0 33 8 94 0 34 8 94 0 35 8 94 0 36 8 94 0 37 8 94 0 38 8 94 0 39 8 94 0 42 8 94 0 43 8 94 0 44 8 94 0 46 8 94 0 48 8 94 0 50 8 94 0 61 8 94 0 70 8 94 0 86 8 94 0 110 8 94 0 115 8 94 0 122 8 94 0 125 8 94 0 126 8 94 0 129 8 94 0 132 8 94 0 133 8 94 0 134 8 94 0 135 16 237 1 25] 
#[0 8 98 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 8 102 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 8 106 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 8 110 0 27 8 45 0 96 16 241 0 187] 
#[1 16 245 0 16 8 114 0 27 8 114 0 96 8 114 0 134 16 249 1 168] 
#[0 8 118 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 8 122 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[1 16 253 0 57 17 1 0 65 17 33 0 81 2 81 0 82 17 5 0 85 2 69 0 86 17 9 0 87 2 69 0 88 1 29 0 89 2 69 0 90 2 69 0 91 17 13 0 92 17 17 0 93 2 9 0 94 2 13 0 95 2 69 0 96 2 69 0 97 2 69 0 98 17 21 0 99 2 69 0 100 17 25 0 101 2 69 0 102 2 69 0 103 2 69 0 104 2 25 0 105 17 29 0 106 2 69 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 17 33 0 153 17 37 0 158 17 41 0 188 17 45 0 198 17 49 0 199 17 53 0 204 17 57 0 207 17 61 0 208 17 65 0 209 17 69 0 210 17 45 0 218 17 49 0 219 17 81 0 220 2 69 1 94 17 85 1 97 17 89 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 2 69 1 198] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 17 93 0 135 0 10 0 137 14 189 0 183 14 193 0 234 0 29 0 236] 
#[1 4 230 0 41 4 230 0 57 4 230 0 65 4 230 0 81 4 230 0 82 4 230 0 85 4 230 0 86 4 230 0 87 4 230 0 88 4 230 0 89 4 230 0 90 4 230 0 91 4 230 0 92 4 230 0 93 4 230 0 94 4 230 0 95 4 230 0 96 4 230 0 97 4 230 0 98 4 230 0 99 4 230 0 100 4 230 0 101 4 230 0 102 4 230 0 103 4 230 0 104 4 230 0 105 4 230 0 106 4 230 0 107 4 230 0 108 4 230 0 109 4 230 0 110 4 230 0 111 4 230 0 112 4 230 0 113 4 230 0 114 4 230 0 115 4 230 0 135 4 230 0 137 17 97 0 184] 
#[0 17 101 0 134] 
#[1 4 230 0 41 4 230 0 57 4 230 0 65 4 230 0 81 4 230 0 82 4 230 0 85 4 230 0 86 4 230 0 87 4 230 0 88 4 230 0 89 4 230 0 90 4 230 0 91 4 230 0 92 4 230 0 93 4 230 0 94 4 230 0 95 4 230 0 96 4 230 0 97 4 230 0 98 4 230 0 99 4 230 0 100 4 230 0 101 4 230 0 102 4 230 0 103 4 230 0 104 4 230 0 105 4 230 0 106 4 230 0 107 4 230 0 108 4 230 0 109 4 230 0 110 4 230 0 111 4 230 0 112 4 230 0 113 4 230 0 114 4 230 0 115 4 230 0 135 4 230 0 137 17 105 0 184] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 17 109 0 135 0 10 0 137 14 189 0 183 14 193 0 234 0 29 0 236] 
#[1 4 230 0 41 4 230 0 57 4 230 0 65 4 230 0 81 4 230 0 82 4 230 0 85 4 230 0 86 4 230 0 87 4 230 0 88 4 230 0 89 4 230 0 90 4 230 0 91 4 230 0 92 4 230 0 93 4 230 0 94 4 230 0 95 4 230 0 96 4 230 0 97 4 230 0 98 4 230 0 99 4 230 0 100 4 230 0 101 4 230 0 102 4 230 0 103 4 230 0 104 4 230 0 105 4 230 0 106 4 230 0 107 4 230 0 108 4 230 0 109 4 230 0 110 4 230 0 111 4 230 0 112 4 230 0 113 4 230 0 114 4 230 0 115 4 230 0 135 4 230 0 137 17 113 0 184] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 17 117 0 135 0 10 0 137 14 189 0 183 14 193 0 234 0 29 0 236] 
#[0 8 126 0 16 0 27] 
#[1 17 121 0 16 17 125 0 27 8 130 0 135 17 129 0 223 17 137 0 225 17 137 0 226] 
#[1 1 201 0 9 8 134 0 16 17 141 0 20 8 134 0 27 1 193 0 28 8 134 0 135 17 145 1 25 17 145 1 88 17 149 1 163] 
#[1 6 250 0 16 6 250 0 27 6 250 0 135 17 153 0 224] 
#[1 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 17 157 0 229 11 233 0 234 0 29 0 236] 
#[1 6 250 0 16 6 250 0 27 6 250 0 135 17 161 0 224] 
#[1 6 250 0 16 6 250 0 27 6 250 0 135 17 165 0 224] 
#[1 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 17 169 0 229 11 233 0 234 0 29 0 236] 
#[0 17 173 0 134] 
#[1 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 17 177 0 229 11 233 0 234 0 29 0 236] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 17 181 0 135 0 10 0 137 14 189 0 183 14 193 0 234 0 29 0 236] 
#[1 4 230 0 41 4 230 0 57 4 230 0 65 4 230 0 81 4 230 0 82 4 230 0 85 4 230 0 86 4 230 0 87 4 230 0 88 4 230 0 89 4 230 0 90 4 230 0 91 4 230 0 92 4 230 0 93 4 230 0 94 4 230 0 95 4 230 0 96 4 230 0 97 4 230 0 98 4 230 0 99 4 230 0 100 4 230 0 101 4 230 0 102 4 230 0 103 4 230 0 104 4 230 0 105 4 230 0 106 4 230 0 107 4 230 0 108 4 230 0 109 4 230 0 110 4 230 0 111 4 230 0 112 4 230 0 113 4 230 0 114 4 230 0 115 4 230 0 135 4 230 0 137 17 185 0 184] 
#[1 8 45 0 96 17 189 0 134 17 193 0 187] 
#[0 17 197 0 134] 
#[1 4 230 0 41 4 230 0 57 4 230 0 65 4 230 0 81 4 230 0 82 4 230 0 85 4 230 0 86 4 230 0 87 4 230 0 88 4 230 0 89 4 230 0 90 4 230 0 91 4 230 0 92 4 230 0 93 4 230 0 94 4 230 0 95 4 230 0 96 4 230 0 97 4 230 0 98 4 230 0 99 4 230 0 100 4 230 0 101 4 230 0 102 4 230 0 103 4 230 0 104 4 230 0 105 4 230 0 106 4 230 0 107 4 230 0 108 4 230 0 109 4 230 0 110 4 230 0 111 4 230 0 112 4 230 0 113 4 230 0 114 4 230 0 115 4 230 0 135 4 230 0 137 17 201 0 184] 
#[0 17 205 0 134] 
#[1 4 230 0 41 4 230 0 57 4 230 0 65 4 230 0 81 4 230 0 82 4 230 0 85 4 230 0 86 4 230 0 87 4 230 0 88 4 230 0 89 4 230 0 90 4 230 0 91 4 230 0 92 4 230 0 93 4 230 0 94 4 230 0 95 4 230 0 96 4 230 0 97 4 230 0 98 4 230 0 99 4 230 0 100 4 230 0 101 4 230 0 102 4 230 0 103 4 230 0 104 4 230 0 105 4 230 0 106 4 230 0 107 4 230 0 108 4 230 0 109 4 230 0 110 4 230 0 111 4 230 0 112 4 230 0 113 4 230 0 114 4 230 0 115 4 230 0 135 4 230 0 137 17 209 0 184] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 17 213 0 135 0 10 0 137 17 217 0 195 17 221 0 234 0 29 0 236] 
#[1 7 2 0 41 7 2 0 57 7 2 0 65 7 2 0 81 7 2 0 82 7 2 0 85 7 2 0 86 7 2 0 87 7 2 0 88 7 2 0 89 7 2 0 90 7 2 0 91 7 2 0 92 7 2 0 93 7 2 0 94 7 2 0 95 7 2 0 96 7 2 0 97 7 2 0 98 7 2 0 99 7 2 0 100 7 2 0 101 7 2 0 102 7 2 0 103 7 2 0 104 7 2 0 105 7 2 0 106 7 2 0 107 7 2 0 108 7 2 0 109 7 2 0 110 7 2 0 111 7 2 0 112 7 2 0 113 7 2 0 114 7 2 0 115 7 2 0 135 7 2 0 137 17 225 0 196] 
#[1 7 2 0 41 7 2 0 57 7 2 0 65 7 2 0 81 7 2 0 82 7 2 0 85 7 2 0 86 7 2 0 87 7 2 0 88 7 2 0 89 7 2 0 90 7 2 0 91 7 2 0 92 7 2 0 93 7 2 0 94 7 2 0 95 7 2 0 96 7 2 0 97 7 2 0 98 7 2 0 99 7 2 0 100 7 2 0 101 7 2 0 102 7 2 0 103 7 2 0 104 7 2 0 105 7 2 0 106 7 2 0 107 7 2 0 108 7 2 0 109 7 2 0 110 7 2 0 111 7 2 0 112 7 2 0 113 7 2 0 114 7 2 0 115 7 2 0 135 7 2 0 137 17 229 0 196] 
#[0 17 233 0 134] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 17 237 1 95 1 13 1 198] 
#[0 8 138 0 16 0 27 0 111 0 114] 
#[0 17 241 0 43] 
#[0 8 142 0 10] 
#[1 2 81 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 15 73 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 17 245 1 187] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 15 85 1 95 1 13 1 198] 
#[0 8 146 0 16 0 135] 
#[1 17 249 0 16 17 253 0 135 18 1 1 184] 
#[0 8 150 0 10 0 16 0 43 0 135] 
#[0 8 154 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 18 5 0 10] 
#[1 0 10 0 41 0 10 0 82 0 10 0 89 0 10 0 94 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 8 169 0 234 0 29 0 236 18 9 1 180] 
#[0 8 158 0 10 0 16 0 43] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 18 13 0 154 1 13 1 94 8 205 1 95 1 13 1 198] 
#[0 8 162 0 16 0 27] 
#[0 8 166 0 16 0 27] 
#[0 8 170 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 2 230 0 16 2 230 0 27 18 17 0 149] 
#[0 8 174 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 5 46 0 41 5 46 0 57 5 46 0 65 5 46 0 81 5 46 0 82 5 46 0 85 5 46 0 86 5 46 0 87 5 46 0 88 5 46 0 89 5 46 0 90 5 46 0 91 5 46 0 92 5 46 0 93 5 46 0 94 5 46 0 95 5 46 0 96 5 46 0 97 5 46 0 98 5 46 0 99 5 46 0 100 5 46 0 101 5 46 0 102 5 46 0 103 5 46 0 104 5 46 0 105 5 46 0 106 5 46 0 107 5 46 0 108 5 46 0 109 5 46 0 110 5 46 0 111 5 46 0 112 5 46 0 113 5 46 0 114 5 46 0 115 5 46 0 135 5 46 0 137 18 21 0 192] 
#[0 18 25 0 134] 
#[0 8 178 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 8 182 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[1 16 253 0 57 17 1 0 65 17 33 0 81 2 81 0 82 17 5 0 85 2 69 0 86 17 9 0 87 2 69 0 88 1 29 0 89 2 69 0 90 2 69 0 91 17 13 0 92 17 17 0 93 2 9 0 94 2 13 0 95 2 69 0 96 2 69 0 97 2 69 0 98 17 21 0 99 2 69 0 100 17 25 0 101 2 69 0 102 2 69 0 103 2 69 0 104 2 25 0 105 17 29 0 106 2 69 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 17 33 0 153 17 37 0 158 18 33 0 188 18 33 0 193 17 45 0 198 17 49 0 199 17 53 0 204 17 57 0 207 17 61 0 208 17 65 0 209 17 69 0 210 17 45 0 218 17 49 0 219 17 81 0 220 2 69 1 94 17 85 1 97 17 89 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 2 69 1 198] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 18 37 0 135 0 10 0 137 15 141 0 191 15 145 0 234 0 29 0 236] 
#[1 8 45 0 96 18 41 0 134 18 45 0 187] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 18 49 0 135 0 10 0 137 15 141 0 191 15 145 0 234 0 29 0 236] 
#[1 5 46 0 41 5 46 0 57 5 46 0 65 5 46 0 81 5 46 0 82 5 46 0 85 5 46 0 86 5 46 0 87 5 46 0 88 5 46 0 89 5 46 0 90 5 46 0 91 5 46 0 92 5 46 0 93 5 46 0 94 5 46 0 95 5 46 0 96 5 46 0 97 5 46 0 98 5 46 0 99 5 46 0 100 5 46 0 101 5 46 0 102 5 46 0 103 5 46 0 104 5 46 0 105 5 46 0 106 5 46 0 107 5 46 0 108 5 46 0 109 5 46 0 110 5 46 0 111 5 46 0 112 5 46 0 113 5 46 0 114 5 46 0 115 5 46 0 135 5 46 0 137 18 53 0 192] 
#[0 8 186 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 18 57 0 27] 
#[1 12 149 0 16 18 61 0 27 12 157 0 148] 
#[0 8 190 0 16 0 27] 
#[0 8 194 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 56 0 57 0 58 0 59 0 60 0 61 0 62 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137 1 199] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 18 65 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 8 198 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 18 69 0 27] 
#[0 8 202 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 18 73 0 27] 
#[0 18 77 0 83] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 13 221 0 27 2 241 0 28 0 10 0 41 2 245 0 42 3 253 0 49 0 247 0 57 3 1 0 64 0 10 0 65 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 0 10 0 81 0 10 0 82 0 255 0 85 1 3 0 86 1 7 0 87 1 11 0 88 1 15 0 89 1 19 0 90 1 23 0 91 1 27 0 92 1 31 0 93 1 35 0 94 1 39 0 95 1 43 0 96 1 47 0 97 1 51 0 98 1 55 0 99 1 59 0 100 1 63 0 101 1 67 0 102 1 71 0 103 1 75 0 104 1 79 0 105 1 83 0 106 1 87 0 107 1 91 0 108 1 95 0 109 1 99 0 110 1 103 0 111 1 107 0 112 1 111 0 113 1 115 0 114 1 119 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 123 0 137 3 85 0 162 3 89 0 163 3 93 0 231 13 225 0 234 0 29 0 236 13 229 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 13 233 1 107 18 81 1 114 13 241 1 115 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 18 85 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 8 206 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 8 210 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 18 89 0 27] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 18 93 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 18 97 0 55 18 101 0 66 18 105 0 113 18 109 1 124 18 113 1 125 18 117 1 126 18 121 1 127] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 18 125 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 18 129 0 9] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 18 133 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 18 137 0 27] 
#[1 5 67 0 1 3 246 0 2 5 62 0 3 3 246 0 4 3 246 0 6 3 246 0 7 5 67 0 9 3 246 0 11 3 246 0 13 5 62 0 14 5 67 0 17 5 62 0 18 3 246 0 20 3 246 0 21 3 246 0 24 5 67 0 27 5 67 0 28 3 246 0 29 3 246 0 31 3 246 0 33 3 246 0 35 3 246 0 36 3 246 0 37 3 246 0 38 3 246 0 39 5 62 0 41 5 67 0 42 3 246 0 44 3 246 0 46 3 246 0 48 5 62 0 49 3 246 0 50 5 62 0 52 5 62 0 53 5 62 0 54 5 62 0 57 5 62 0 58 5 62 0 59 5 62 0 60 5 62 0 61 5 62 0 64 5 62 0 65 5 62 0 67 5 62 0 68 3 246 0 70 5 62 0 71 5 62 0 72 5 62 0 73 5 62 0 74 5 62 0 75 5 62 0 76 5 62 0 77 5 62 0 78 5 62 0 79 5 62 0 80 5 62 0 81 5 62 0 82 5 62 0 83 5 62 0 85 5 67 0 86 5 62 0 87 5 62 0 88 5 62 0 89 5 62 0 90 5 62 0 91 5 62 0 92 5 62 0 93 5 62 0 94 5 62 0 95 5 62 0 96 5 62 0 97 5 62 0 98 5 62 0 99 5 62 0 100 5 62 0 101 5 62 0 102 5 62 0 103 5 62 0 104 5 62 0 105 5 62 0 106 5 62 0 107 5 62 0 108 5 62 0 109 5 62 0 110 5 62 0 111 5 62 0 112 5 62 0 113 5 62 0 114 5 62 0 115 5 62 0 116 5 62 0 117 5 62 0 118 5 62 0 119 5 62 0 120 5 62 0 121 5 62 0 123 5 62 0 124 5 62 0 127 5 62 0 128 5 62 0 130 5 62 0 131 5 62 0 134 5 62 0 135 5 62 0 137] 
#[1 0 62 0 9 0 62 0 28 9 161 0 57 9 165 0 65 0 62 0 69 13 165 0 81 2 81 0 82 2 73 0 89 2 161 0 94 18 141 0 99 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 13 165 0 151 13 165 0 153 2 73 1 97 13 165 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[1 8 214 0 16 8 214 0 27 18 145 0 32 18 149 1 110] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 13 193 1 95 1 13 1 198] 
#[1 4 209 0 34 4 213 0 110 4 217 0 115 4 221 0 134 18 153 0 160 4 229 0 161] 
#[0 18 157 0 27] 
#[1 0 83 0 85 0 87 0 86 0 91 0 87 0 95 0 88 0 99 0 89 0 103 0 90 0 107 0 91 0 111 0 92 0 115 0 93 0 119 0 94 3 179 0 95 0 127 0 96 0 131 0 97 0 135 0 98 0 139 0 99 0 143 0 100 0 147 0 101 0 151 0 102 0 155 0 103 0 159 0 104 3 183 0 105 0 167 0 106 0 171 0 107 0 175 0 108 0 179 0 109 0 183 0 110 0 187 0 111 0 191 0 112 0 195 0 113 0 199 0 114 0 203 0 115 0 207 0 137 5 9 1 94 5 9 1 198] 
#[0 8 218 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 8 222 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 18 161 0 251 3 133 0 252 3 137 0 253 4 45 1 191 4 49 1 194] 
#[1 1 161 0 118 1 161 0 119 1 161 0 120 1 161 0 123 1 161 0 127 1 161 0 130 1 157 0 254 1 161 0 255 18 165 1 153 1 161 1 190] 
#[0 8 226 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 8 230 0 16 0 43] 
#[1 0 10 0 41 18 169 0 43 0 10 0 57 0 10 0 65 0 10 0 77 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 9 125 0 174 18 173 0 179 5 237 0 234 0 29 0 236] 
#[0 8 234 0 10] 
#[0 8 238 0 16 0 43] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 18 177 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 18 181 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 8 242 0 16 0 135] 
#[0 8 246 0 16 0 135] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 77 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 3 71 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 18 185 0 135 0 10 0 137 9 137 0 174 18 189 0 180 5 237 0 234 0 29 0 236] 
#[0 8 250 0 10] 
#[0 8 254 0 16 0 135] 
#[0 9 2 0 10 0 16 0 26 0 27 0 32 0 34 0 36 0 43 0 110 0 115 0 134 0 135] 
#[0 9 6 0 10 0 16] 
#[1 4 241 0 9 9 10 0 10 9 10 0 16 9 10 0 26 4 105 0 28 9 10 0 32 9 10 0 43 9 10 0 135 18 193 0 162 3 89 0 163 3 93 0 231] 
#[0 9 14 0 10 0 16 0 26 0 27 0 32 0 43 0 69 0 135] 
#[1 9 18 0 10 9 18 0 16 9 18 0 26 9 18 0 32 18 197 0 36 9 18 0 43 9 18 0 135] 
#[1 4 241 0 9 4 105 0 28 18 201 0 162 3 89 0 163 3 93 0 231] 
#[0 9 22 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 18 205 1 95 1 13 1 198] 
#[0 9 26 0 10 0 16 0 26 0 32 0 43 0 135] 
#[1 9 30 0 10 9 30 0 16 9 30 0 26 9 30 0 32 18 209 0 36 9 30 0 43 9 30 0 135] 
#[0 9 34 0 16 0 35] 
#[0 9 38 0 16 0 35] 
#[1 8 214 0 16 8 214 0 27 18 145 0 32 18 213 0 69 18 149 1 110] 
#[0 18 217 0 69] 
#[0 9 42 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 6 1 0 22 6 5 0 23 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 6 13 0 67 6 17 0 68 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 21 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 25 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 18 221 1 5 6 37 1 6 6 41 1 7 6 45 1 8 6 49 1 9 6 53 1 10 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 9 46 0 10 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 97 0 238 18 225 0 242 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 18 229 0 27] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 6 1 0 22 6 5 0 23 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 6 13 0 67 6 17 0 68 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 21 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 25 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 18 233 1 5 6 37 1 6 6 41 1 7 6 45 1 8 6 49 1 9 6 53 1 10 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 18 237 0 10] 
#[0 9 50 0 16 0 43 0 135] 
#[0 9 54 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 9 58 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 9 62 0 122 0 125 0 126] 
#[0 9 66 0 129 0 132 0 133] 
#[0 18 241 0 43] 
#[0 9 70 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 15 0 16 0 17 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 6 50 0 1 6 50 0 2 6 50 0 4 7 249 0 5 6 50 0 6 6 50 0 7 7 249 0 8 6 50 0 9 6 50 0 10 6 50 0 11 7 249 0 12 6 50 0 13 7 249 0 15 6 50 0 16 6 50 0 17 7 249 0 19 6 50 0 20 6 50 0 21 6 50 0 24 7 249 0 25 6 50 0 26 6 50 0 27 6 50 0 28 6 50 0 29 7 249 0 30 6 50 0 31 7 221 0 32 6 50 0 33 6 50 0 34 5 71 0 35 6 50 0 36 6 50 0 37 6 50 0 38 6 50 0 39 7 249 0 40 6 50 0 42 6 50 0 43 6 50 0 44 7 249 0 45 6 50 0 46 7 249 0 47 6 50 0 48 6 50 0 50 7 249 0 51 6 50 0 61 6 50 0 70 6 50 0 86 6 50 0 110 6 50 0 115 6 50 0 122 6 50 0 125 6 50 0 126 6 50 0 129 6 50 0 132 6 50 0 133 6 50 0 134 6 50 0 135 18 245 1 35 14 117 1 36 7 249 1 37] 
#[0 9 74 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 16 205 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 10 241 0 162 3 89 0 163 3 93 0 231 6 145 0 238 14 121 0 240 14 121 0 241 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 14 121 1 13 3 105 1 14 14 121 1 17 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 16 213 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 16 217 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 9 78 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 5 75 0 1 5 75 0 2 5 75 0 4 5 75 0 6 5 75 0 7 5 75 0 9 5 75 0 10 5 75 0 11 5 75 0 13 5 75 0 16 5 75 0 17 5 75 0 20 5 79 0 21 5 75 0 24 5 75 0 26 5 75 0 27 5 75 0 28 5 75 0 29 5 75 0 31 5 75 0 33 5 75 0 34 5 75 0 35 5 75 0 36 5 75 0 37 5 83 0 38 5 75 0 39 5 75 0 42 5 75 0 43 5 75 0 44 5 75 0 46 5 75 0 48 5 75 0 50 5 75 0 61 5 75 0 70 5 75 0 86 5 75 0 110 5 75 0 115 5 75 0 122 5 75 0 125 5 75 0 126 5 75 0 129 5 75 0 132 5 75 0 133 5 75 0 134 5 75 0 135] 
#[1 7 249 0 5 7 249 0 8 7 249 0 12 7 253 0 14 7 249 0 15 7 253 0 18 7 249 0 19 7 249 0 25 7 249 0 30 7 221 0 32 7 225 0 35 7 249 0 40 7 249 0 45 7 249 0 47 7 249 0 51 18 249 1 36 7 249 1 37 7 253 1 86 7 253 1 89] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 16 205 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 10 241 0 162 3 89 0 163 3 93 0 231 14 73 0 238 18 253 0 240 18 253 0 241 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 18 253 1 13 3 105 1 14 18 253 1 17 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 16 213 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 16 217 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 9 82 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 9 86 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 9 90 0 1 0 3 0 9 0 14 0 17 0 18 0 28 0 42 0 49 0 57 0 64 0 71 0 72 0 75 0 77 0 78 0 79 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 137] 
#[0 9 94 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 9 98 0 27] 
#[1 2 73 0 89 11 157 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 19 1 1 161 2 89 1 162] 
#[0 9 102 0 16 0 27 0 96 0 134] 
#[1 19 13 0 89 19 5 0 93 19 13 0 108 19 13 0 109 19 13 0 110 19 13 0 111 19 13 0 112 19 13 0 113 19 13 0 114 19 13 0 115 19 13 0 137 19 9 0 210 19 13 1 97] 
#[1 2 81 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 69 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 8 197 0 154 19 17 0 155 1 13 1 94 8 205 1 95 2 73 1 97 19 21 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 1 13 1 198] 
#[1 0 54 0 9 0 54 0 28 4 121 0 65 19 29 0 81 2 81 0 82 19 25 0 87 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 19 29 0 152 19 29 0 153 2 73 1 97 19 29 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[1 0 62 0 9 0 62 0 28 19 37 0 81 2 81 0 82 2 73 0 89 2 161 0 94 19 33 0 99 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 19 37 0 153 2 73 1 97 19 37 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[1 0 82 0 9 0 82 0 28 19 41 0 57 4 121 0 65 19 57 0 81 2 81 0 82 2 69 0 85 2 69 0 86 19 45 0 87 2 69 0 88 1 29 0 89 2 69 0 90 2 69 0 91 2 69 0 92 19 49 0 93 2 9 0 94 2 13 0 95 2 69 0 96 2 69 0 97 2 69 0 98 2 69 0 99 2 69 0 100 17 25 0 101 2 69 0 102 2 69 0 103 2 69 0 104 2 25 0 105 19 53 0 106 2 69 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 19 57 0 152 19 57 0 153 19 61 0 158 19 65 0 204 19 69 0 207 19 73 0 208 19 77 0 209 17 69 0 210 19 81 0 218 19 85 0 220 2 69 1 94 17 85 1 97 17 89 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 2 69 1 198] 
#[1 0 86 0 9 0 86 0 28 19 13 0 89 19 13 0 108 19 13 0 109 19 13 0 110 19 13 0 111 19 13 0 112 19 13 0 113 19 13 0 114 19 13 0 115 19 13 0 137 19 89 0 210 19 13 1 97] 
#[1 0 114 0 9 0 114 0 28 19 93 0 65 19 97 0 81 2 81 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 19 97 0 153 2 73 1 97 19 97 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[1 19 101 0 4 19 101 0 6 0 122 0 9 19 101 0 11 19 101 0 13 19 101 0 17 19 101 0 24 5 87 0 28 19 101 0 29 19 101 0 31 19 101 0 33 5 145 0 35 5 149 0 42 19 101 0 44 19 101 0 46 19 101 0 49 19 101 0 50 19 101 0 205 19 101 0 206 19 101 1 55 19 101 1 65 19 101 1 69 19 101 1 73 19 101 1 77] 
#[1 0 142 0 9 0 142 0 28 19 105 0 57 19 109 0 65 19 117 0 81 2 81 0 82 2 69 0 85 2 69 0 86 2 69 0 87 2 69 0 88 1 29 0 89 2 69 0 90 2 69 0 91 2 69 0 92 2 69 0 93 2 9 0 94 2 13 0 95 2 69 0 96 2 69 0 97 2 69 0 98 19 113 0 99 2 69 0 100 2 69 0 101 2 69 0 102 2 69 0 103 2 69 0 104 2 25 0 105 2 69 0 106 2 69 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 19 117 0 153 19 121 0 158 19 125 0 207 19 129 0 208 2 69 1 94 2 73 1 97 2 77 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 2 69 1 198] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 197 0 154 19 133 0 155 1 13 1 94 8 205 1 95 1 13 1 198] 
#[1 9 106 0 27 9 110 0 34 9 110 0 110 9 110 0 115 9 110 0 134] 
#[0 9 114 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[1 4 209 0 34 4 213 0 110 4 217 0 115 4 221 0 134 19 137 0 160 4 229 0 161] 
#[0 19 141 0 27] 
#[1 9 118 0 27 9 122 0 34 9 122 0 110 9 122 0 115 9 122 0 134] 
#[1 9 126 0 27 9 130 0 34 9 130 0 110 9 130 0 115 9 130 0 134] 
#[1 9 134 0 27 9 138 0 34 9 138 0 110 9 138 0 115 9 138 0 134] 
#[1 19 145 0 26 9 142 0 27 9 146 0 34 9 146 0 110 9 146 0 115 9 146 0 134 19 149 0 211 19 153 0 212] 
#[1 4 241 0 9 19 157 0 163] 
#[0 9 150 0 34 0 110 0 115 0 134] 
#[0 9 154 0 27] 
#[1 19 145 0 26 9 158 0 27 19 161 0 211 19 165 0 212] 
#[1 9 162 0 9 19 169 0 20 1 2 0 28 1 2 0 36 1 2 0 85 1 2 0 86 1 2 0 87 1 2 0 88 1 2 0 89 1 2 0 90 1 2 0 91 1 2 0 92 1 2 0 93 1 2 0 94 1 2 0 95 1 2 0 96 1 2 0 97 1 2 0 98 1 2 0 99 1 2 0 100 1 2 0 101 1 2 0 102 1 2 0 103 1 2 0 104 1 2 0 105 1 2 0 106 1 2 0 107 1 2 0 108 1 2 0 109 1 2 0 110 1 2 0 111 1 2 0 112 1 2 0 113 1 2 0 114 1 2 0 115 1 2 0 137] 
#[1 0 83 0 85 0 87 0 86 0 91 0 87 0 95 0 88 0 99 0 89 0 103 0 90 0 107 0 91 0 111 0 92 0 115 0 93 0 119 0 94 0 123 0 95 0 127 0 96 0 131 0 97 0 135 0 98 0 139 0 99 0 143 0 100 5 91 0 101 0 151 0 102 0 155 0 103 0 159 0 104 0 163 0 105 0 167 0 106 0 171 0 107 0 175 0 108 0 179 0 109 0 183 0 110 0 187 0 111 0 191 0 112 0 195 0 113 0 199 0 114 0 203 0 115 0 207 0 137 5 9 1 94 5 9 1 198] 
#[0 9 166 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 19 177 0 135 0 10 0 137 14 189 0 183 14 193 0 234 0 29 0 236] 
#[1 4 230 0 41 4 230 0 57 4 230 0 65 4 230 0 81 4 230 0 82 4 230 0 85 4 230 0 86 4 230 0 87 4 230 0 88 4 230 0 89 4 230 0 90 4 230 0 91 4 230 0 92 4 230 0 93 4 230 0 94 4 230 0 95 4 230 0 96 4 230 0 97 4 230 0 98 4 230 0 99 4 230 0 100 4 230 0 101 4 230 0 102 4 230 0 103 4 230 0 104 4 230 0 105 4 230 0 106 4 230 0 107 4 230 0 108 4 230 0 109 4 230 0 110 4 230 0 111 4 230 0 112 4 230 0 113 4 230 0 114 4 230 0 115 4 230 0 135 4 230 0 137 19 181 0 184] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 19 185 0 135 0 10 0 137 14 189 0 183 14 193 0 234 0 29 0 236] 
#[0 9 170 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 19 189 0 135 0 10 0 137 14 189 0 183 14 193 0 234 0 29 0 236] 
#[0 9 174 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 17 125 0 27 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 8 130 0 135 0 10 0 137 19 193 0 225 19 193 0 226 19 197 0 229 11 233 0 234 0 29 0 236] 
#[1 9 178 0 41 9 178 0 57 9 178 0 65 9 178 0 81 9 178 0 82 9 178 0 85 9 178 0 86 9 178 0 87 9 178 0 88 9 178 0 89 9 178 0 90 9 178 0 91 9 178 0 92 9 178 0 93 9 178 0 94 9 178 0 95 9 178 0 96 9 178 0 97 9 178 0 98 9 178 0 99 9 178 0 100 9 178 0 101 9 178 0 102 9 178 0 103 9 178 0 104 9 178 0 105 9 178 0 106 9 178 0 107 9 178 0 108 9 178 0 109 9 178 0 110 9 178 0 111 9 178 0 112 9 178 0 113 9 178 0 114 9 178 0 115 9 178 0 135 9 178 0 137 19 201 0 228] 
#[0 9 182 0 16 0 27 0 135] 
#[0 9 186 0 135] 
#[0 19 205 0 135] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 19 209 1 95 1 13 1 198] 
#[0 9 190 0 16 0 27 0 135] 
#[1 1 201 0 9 19 213 0 20 10 109 1 25] 
#[1 19 217 0 16 17 125 0 27 8 130 0 135 17 129 0 223 19 221 0 225 19 221 0 226] 
#[1 6 250 0 16 6 250 0 27 6 250 0 135 19 225 0 224] 
#[1 19 229 0 16 17 125 0 27 8 130 0 135 17 129 0 223 19 233 0 225 19 233 0 226] 
#[1 19 237 0 16 17 125 0 27 8 130 0 135 17 129 0 223 19 241 0 225 19 241 0 226] 
#[1 6 250 0 16 6 250 0 27 6 250 0 135 19 245 0 224] 
#[1 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 0 10 0 137 19 249 0 229 11 233 0 234 0 29 0 236] 
#[1 6 250 0 16 6 250 0 27 6 250 0 135 19 253 0 224] 
#[0 9 194 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 20 1 0 135 0 10 0 137 14 189 0 183 14 193 0 234 0 29 0 236] 
#[1 4 230 0 41 4 230 0 57 4 230 0 65 4 230 0 81 4 230 0 82 4 230 0 85 4 230 0 86 4 230 0 87 4 230 0 88 4 230 0 89 4 230 0 90 4 230 0 91 4 230 0 92 4 230 0 93 4 230 0 94 4 230 0 95 4 230 0 96 4 230 0 97 4 230 0 98 4 230 0 99 4 230 0 100 4 230 0 101 4 230 0 102 4 230 0 103 4 230 0 104 4 230 0 105 4 230 0 106 4 230 0 107 4 230 0 108 4 230 0 109 4 230 0 110 4 230 0 111 4 230 0 112 4 230 0 113 4 230 0 114 4 230 0 115 4 230 0 135 4 230 0 137 20 5 0 184] 
#[0 20 9 0 134] 
#[1 4 230 0 41 4 230 0 57 4 230 0 65 4 230 0 81 4 230 0 82 4 230 0 85 4 230 0 86 4 230 0 87 4 230 0 88 4 230 0 89 4 230 0 90 4 230 0 91 4 230 0 92 4 230 0 93 4 230 0 94 4 230 0 95 4 230 0 96 4 230 0 97 4 230 0 98 4 230 0 99 4 230 0 100 4 230 0 101 4 230 0 102 4 230 0 103 4 230 0 104 4 230 0 105 4 230 0 106 4 230 0 107 4 230 0 108 4 230 0 109 4 230 0 110 4 230 0 111 4 230 0 112 4 230 0 113 4 230 0 114 4 230 0 115 4 230 0 135 4 230 0 137 20 13 0 184] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 20 17 0 135 0 10 0 137 14 189 0 183 14 193 0 234 0 29 0 236] 
#[1 4 230 0 41 4 230 0 57 4 230 0 65 4 230 0 81 4 230 0 82 4 230 0 85 4 230 0 86 4 230 0 87 4 230 0 88 4 230 0 89 4 230 0 90 4 230 0 91 4 230 0 92 4 230 0 93 4 230 0 94 4 230 0 95 4 230 0 96 4 230 0 97 4 230 0 98 4 230 0 99 4 230 0 100 4 230 0 101 4 230 0 102 4 230 0 103 4 230 0 104 4 230 0 105 4 230 0 106 4 230 0 107 4 230 0 108 4 230 0 109 4 230 0 110 4 230 0 111 4 230 0 112 4 230 0 113 4 230 0 114 4 230 0 115 4 230 0 135 4 230 0 137 20 21 0 184] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 20 25 0 135 0 10 0 137 14 189 0 183 14 193 0 234 0 29 0 236] 
#[0 9 198 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 9 202 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[1 16 253 0 57 17 1 0 65 17 33 0 81 2 81 0 82 17 5 0 85 2 69 0 86 17 9 0 87 2 69 0 88 1 29 0 89 2 69 0 90 2 69 0 91 17 13 0 92 17 17 0 93 2 9 0 94 2 13 0 95 2 69 0 96 2 69 0 97 2 69 0 98 17 21 0 99 2 69 0 100 17 25 0 101 2 69 0 102 2 69 0 103 2 69 0 104 2 25 0 105 17 29 0 106 2 69 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 17 33 0 153 17 37 0 158 20 33 0 188 20 33 0 197 17 45 0 198 17 49 0 199 17 53 0 204 17 57 0 207 17 61 0 208 17 65 0 209 17 69 0 210 17 45 0 218 17 49 0 219 17 81 0 220 2 69 1 94 17 85 1 97 17 89 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 2 69 1 198] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 20 37 0 135 0 10 0 137 17 217 0 195 17 221 0 234 0 29 0 236] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 20 41 0 135 0 10 0 137 17 217 0 195 17 221 0 234 0 29 0 236] 
#[1 7 2 0 41 7 2 0 57 7 2 0 65 7 2 0 81 7 2 0 82 7 2 0 85 7 2 0 86 7 2 0 87 7 2 0 88 7 2 0 89 7 2 0 90 7 2 0 91 7 2 0 92 7 2 0 93 7 2 0 94 7 2 0 95 7 2 0 96 7 2 0 97 7 2 0 98 7 2 0 99 7 2 0 100 7 2 0 101 7 2 0 102 7 2 0 103 7 2 0 104 7 2 0 105 7 2 0 106 7 2 0 107 7 2 0 108 7 2 0 109 7 2 0 110 7 2 0 111 7 2 0 112 7 2 0 113 7 2 0 114 7 2 0 115 7 2 0 135 7 2 0 137 20 45 0 196] 
#[0 9 206 0 16 0 27 0 111 0 114] 
#[0 9 210 0 10] 
#[0 9 214 0 16 0 135] 
#[1 0 10 0 41 0 10 0 82 0 10 0 89 0 10 0 94 0 10 0 104 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 20 49 0 135 0 10 0 137 12 53 0 234 0 29 0 236 20 53 1 186] 
#[0 9 218 0 10] 
#[0 9 222 0 16 0 135] 
#[0 9 226 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 55 0 61 0 70 0 77 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135 0 137] 
#[0 9 230 0 10 0 16 0 43] 
#[0 9 234 0 16 0 27] 
#[1 12 149 0 16 20 57 0 27 12 157 0 148] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 20 61 0 135 0 10 0 137 15 141 0 191 15 145 0 234 0 29 0 236] 
#[1 5 46 0 41 5 46 0 57 5 46 0 65 5 46 0 81 5 46 0 82 5 46 0 85 5 46 0 86 5 46 0 87 5 46 0 88 5 46 0 89 5 46 0 90 5 46 0 91 5 46 0 92 5 46 0 93 5 46 0 94 5 46 0 95 5 46 0 96 5 46 0 97 5 46 0 98 5 46 0 99 5 46 0 100 5 46 0 101 5 46 0 102 5 46 0 103 5 46 0 104 5 46 0 105 5 46 0 106 5 46 0 107 5 46 0 108 5 46 0 109 5 46 0 110 5 46 0 111 5 46 0 112 5 46 0 113 5 46 0 114 5 46 0 115 5 46 0 135 5 46 0 137 20 65 0 192] 
#[0 9 238 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[0 9 242 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[0 9 246 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 5 46 0 41 5 46 0 57 5 46 0 65 5 46 0 81 5 46 0 82 5 46 0 85 5 46 0 86 5 46 0 87 5 46 0 88 5 46 0 89 5 46 0 90 5 46 0 91 5 46 0 92 5 46 0 93 5 46 0 94 5 46 0 95 5 46 0 96 5 46 0 97 5 46 0 98 5 46 0 99 5 46 0 100 5 46 0 101 5 46 0 102 5 46 0 103 5 46 0 104 5 46 0 105 5 46 0 106 5 46 0 107 5 46 0 108 5 46 0 109 5 46 0 110 5 46 0 111 5 46 0 112 5 46 0 113 5 46 0 114 5 46 0 115 5 46 0 135 5 46 0 137 20 69 0 192] 
#[0 20 73 0 134] 
#[0 9 250 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 20 77 0 135 0 10 0 137 15 141 0 191 15 145 0 234 0 29 0 236] 
#[0 9 254 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 10 2 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 20 81 0 10 20 85 0 16] 
#[0 10 6 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 10 10 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 20 89 0 9] 
#[0 20 93 0 10] 
#[0 20 97 0 10] 
#[0 10 14 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 20 101 0 10] 
#[0 20 105 0 9] 
#[1 4 221 0 134 20 109 0 161] 
#[1 11 61 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 2 73 1 97 20 113 1 159 11 61 1 160 11 65 1 161 2 89 1 162 2 97 1 173 11 69 1 174 11 69 1 175] 
#[1 10 18 0 1 10 18 0 3 10 18 0 9 10 18 0 14 10 18 0 17 10 18 0 18 10 18 0 27 10 18 0 28 10 18 0 41 10 18 0 42 10 18 0 49 10 18 0 52 10 18 0 53 10 18 0 54 18 97 0 55 10 18 0 57 10 18 0 58 10 18 0 59 10 18 0 60 10 18 0 61 10 18 0 64 10 18 0 65 10 18 0 66 10 18 0 67 10 18 0 68 10 18 0 71 10 18 0 72 10 18 0 73 10 18 0 74 10 18 0 75 10 18 0 76 10 18 0 77 10 18 0 78 10 18 0 79 10 18 0 80 10 18 0 81 10 18 0 82 10 18 0 83 10 18 0 85 10 18 0 86 10 18 0 87 10 18 0 88 10 18 0 89 10 18 0 90 10 18 0 91 10 18 0 92 10 18 0 93 10 18 0 94 10 18 0 95 10 18 0 96 10 18 0 97 10 18 0 98 10 18 0 99 10 18 0 100 10 18 0 101 10 18 0 102 10 18 0 103 10 18 0 104 10 18 0 105 10 18 0 106 10 18 0 107 10 18 0 108 10 18 0 109 10 18 0 110 10 18 0 111 10 18 0 112 5 95 0 113 10 18 0 114 10 18 0 115 10 18 0 116 10 18 0 117 10 18 0 118 10 18 0 119 10 18 0 120 10 18 0 121 10 18 0 123 10 18 0 124 10 18 0 127 10 18 0 128 10 18 0 130 10 18 0 131 10 18 0 134 10 18 0 135 10 18 0 137 18 109 1 124 20 117 1 125 18 117 1 126] 
#[1 10 22 0 1 10 22 0 3 10 22 0 9 10 22 0 14 10 22 0 17 10 22 0 18 10 22 0 27 10 22 0 28 10 22 0 41 10 22 0 42 10 22 0 49 10 22 0 52 10 22 0 53 10 22 0 54 10 22 0 57 10 22 0 58 10 22 0 59 10 22 0 60 10 22 0 61 10 22 0 64 10 22 0 65 18 101 0 66 10 22 0 67 10 22 0 68 10 22 0 71 10 22 0 72 10 22 0 73 10 22 0 74 10 22 0 75 10 22 0 76 10 22 0 77 10 22 0 78 10 22 0 79 10 22 0 80 10 22 0 81 10 22 0 82 10 22 0 83 10 22 0 85 10 22 0 86 10 22 0 87 10 22 0 88 10 22 0 89 10 22 0 90 10 22 0 91 10 22 0 92 10 22 0 93 10 22 0 94 10 22 0 95 10 22 0 96 10 22 0 97 10 22 0 98 10 22 0 99 10 22 0 100 10 22 0 101 10 22 0 102 10 22 0 103 10 22 0 104 10 22 0 105 10 22 0 106 10 22 0 107 10 22 0 108 10 22 0 109 10 22 0 110 10 22 0 111 10 22 0 112 10 22 0 113 10 22 0 114 10 22 0 115 10 22 0 116 10 22 0 117 10 22 0 118 10 22 0 119 10 22 0 120 10 22 0 121 10 22 0 123 10 22 0 124 10 22 0 127 10 22 0 128 10 22 0 130 10 22 0 131 10 22 0 134 10 22 0 135 10 22 0 137 20 121 1 127] 
#[1 4 221 0 134 20 125 0 161] 
#[0 10 26 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 20 129 0 10] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 13 221 0 27 2 241 0 28 0 10 0 41 2 245 0 42 3 253 0 49 0 247 0 57 3 1 0 64 0 10 0 65 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 0 10 0 81 0 10 0 82 0 255 0 85 1 3 0 86 1 7 0 87 1 11 0 88 1 15 0 89 1 19 0 90 1 23 0 91 1 27 0 92 1 31 0 93 1 35 0 94 1 39 0 95 1 43 0 96 1 47 0 97 1 51 0 98 1 55 0 99 1 59 0 100 1 63 0 101 1 67 0 102 1 71 0 103 1 75 0 104 1 79 0 105 1 83 0 106 1 87 0 107 1 91 0 108 1 95 0 109 1 99 0 110 1 103 0 111 1 107 0 112 1 111 0 113 1 115 0 114 1 119 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 123 0 137 3 85 0 162 3 89 0 163 3 93 0 231 13 225 0 234 0 29 0 236 13 229 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 13 233 1 107 20 133 1 114 13 241 1 115 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 20 137 0 27] 
#[0 10 30 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 13 181 0 65 13 185 0 81 2 81 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 13 185 0 153 2 73 1 97 13 185 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 20 141 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 20 145 0 16 10 34 0 27 20 149 1 109] 
#[0 10 38 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 10 42 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 10 46 0 10] 
#[0 10 50 0 27 0 68 0 86 0 88 0 111 0 114] 
#[0 10 54 0 10] 
#[0 10 58 0 16 0 43] 
#[0 10 62 0 16 0 135] 
#[0 10 66 0 16 0 135] 
#[0 10 70 0 10] 
#[0 10 74 0 16 0 135] 
#[1 10 78 0 10 10 78 0 16 10 78 0 26 10 78 0 32 20 153 0 36 10 78 0 43 10 78 0 135] 
#[0 10 82 0 10 0 16 0 26 0 32 0 43 0 135] 
#[1 10 86 0 10 10 86 0 16 10 86 0 26 10 86 0 32 20 157 0 36 10 86 0 43 10 86 0 135] 
#[1 4 241 0 9 10 90 0 10 10 90 0 16 10 90 0 26 4 105 0 28 10 90 0 32 10 90 0 43 10 90 0 135 20 161 0 162 3 89 0 163 3 93 0 231] 
#[0 10 94 0 10 0 16 0 26 0 32 0 43 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 20 165 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 20 169 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 10 98 0 16 0 43 0 61 0 135] 
#[0 10 102 0 10] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 10 106 0 10 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 3 97 0 238 20 173 0 242 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 10 110 0 16 10 110 0 43 5 99 0 61 10 110 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 6 1 0 22 6 5 0 23 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 6 13 0 67 6 17 0 68 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 21 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 25 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 20 181 1 5 6 37 1 6 6 41 1 7 6 45 1 8 6 49 1 9 6 53 1 10 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 10 114 0 1 0 2 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0 11 0 12 0 13 0 14 0 15 0 16 0 17 0 18 0 19 0 20 0 21 0 24 0 25 0 26 0 27 0 28 0 29 0 30 0 31 0 32 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 40 0 42 0 43 0 44 0 45 0 46 0 47 0 48 0 50 0 51 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 10 118 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 16 205 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 10 241 0 162 3 89 0 163 3 93 0 231 11 129 0 238 16 229 0 240 16 229 0 241 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 16 229 1 13 3 105 1 14 16 229 1 17 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 16 213 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 16 217 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 10 122 0 1 0 2 0 4 0 6 0 7 0 9 0 10 0 11 0 13 0 16 0 17 0 20 0 21 0 24 0 26 0 27 0 28 0 29 0 31 0 33 0 34 0 35 0 36 0 37 0 38 0 39 0 42 0 43 0 44 0 46 0 48 0 50 0 61 0 70 0 86 0 110 0 115 0 122 0 125 0 126 0 129 0 132 0 133 0 134 0 135] 
#[0 10 126 0 16 0 27 0 96 0 134] 
#[1 19 13 0 89 19 13 0 108 19 13 0 109 19 13 0 110 19 13 0 111 19 13 0 112 19 13 0 113 19 13 0 114 19 13 0 115 19 13 0 137 20 185 0 210 19 13 1 97] 
#[1 4 241 0 9 20 189 0 163] 
#[1 9 162 0 9 20 193 0 20] 
#[0 10 130 0 27] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 197 0 154 20 197 0 155 1 13 1 94 8 205 1 95 1 13 1 198] 
#[1 20 201 0 81 2 81 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 20 201 0 153 2 73 1 97 20 201 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 8 137 1 95 20 205 1 145 1 13 1 198] 
#[1 20 209 0 65 20 213 0 81 2 81 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 20 213 0 153 2 73 1 97 20 213 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 197 0 154 20 217 0 155 1 13 1 94 8 205 1 95 1 13 1 198] 
#[1 19 13 0 89 20 221 0 93 19 13 0 108 19 13 0 109 19 13 0 110 19 13 0 111 19 13 0 112 19 13 0 113 19 13 0 114 19 13 0 115 19 13 0 137 19 9 0 210 19 13 1 97] 
#[1 0 62 0 9 0 62 0 28 20 225 0 81 2 81 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 20 225 0 153 2 73 1 97 20 225 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[1 0 86 0 9 0 86 0 28 19 13 0 89 19 13 0 108 19 13 0 109 19 13 0 110 19 13 0 111 19 13 0 112 19 13 0 113 19 13 0 114 19 13 0 115 19 13 0 137 20 229 0 210 19 13 1 97] 
#[1 0 142 0 9 0 142 0 28 4 121 0 65 20 233 0 81 2 81 0 82 2 69 0 85 2 69 0 86 2 69 0 87 2 69 0 88 1 29 0 89 2 69 0 90 2 69 0 91 2 69 0 92 2 69 0 93 2 9 0 94 2 13 0 95 2 69 0 96 2 69 0 97 2 69 0 98 2 69 0 99 2 69 0 100 2 69 0 101 2 69 0 102 2 69 0 103 2 69 0 104 2 25 0 105 2 69 0 106 2 69 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 20 233 0 152 20 233 0 153 20 237 0 158 20 241 0 207 20 245 0 208 2 69 1 94 2 73 1 97 2 77 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 2 69 1 198] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 8 137 1 95 20 249 1 145 1 13 1 198] 
#[0 10 134 0 27] 
#[0 10 138 0 27] 
#[0 10 142 0 27] 
#[0 10 146 0 27] 
#[0 10 150 0 27] 
#[0 10 154 0 27] 
#[0 10 158 0 27] 
#[1 4 241 0 9 20 253 0 163] 
#[1 2 81 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 69 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 8 197 0 154 21 1 0 155 1 13 1 94 8 205 1 95 2 73 1 97 21 5 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 1 13 1 198] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 197 0 154 21 9 0 155 1 13 1 94 8 205 1 95 1 13 1 198] 
#[1 4 241 0 9 21 13 0 163] 
#[1 2 81 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 69 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 21 17 0 200 4 77 0 203 1 13 1 94 4 81 1 95 2 73 1 97 21 21 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 1 13 1 198] 
#[1 2 81 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 69 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 21 25 0 200 4 77 0 203 1 13 1 94 4 81 1 95 2 73 1 97 21 29 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 1 13 1 198] 
#[1 0 114 0 9 0 114 0 28 21 33 0 65 21 37 0 81 2 81 0 82 2 73 0 89 2 161 0 94 2 73 0 108 2 73 0 109 2 73 0 110 2 73 0 111 2 73 0 112 2 73 0 113 2 73 0 114 2 73 0 115 2 73 0 137 21 37 0 153 2 73 1 97 21 37 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 197 0 154 21 41 0 155 1 13 1 94 8 205 1 95 1 13 1 198] 
#[0 10 162 0 34 0 110 0 115 0 134] 
#[0 10 166 0 34 0 110 0 115 0 134] 
#[0 10 170 0 34 0 110 0 115 0 134] 
#[0 10 174 0 27] 
#[0 10 178 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[0 10 182 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[1 12 189 0 52 21 45 0 75 21 49 0 77 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 21 53 0 215 21 53 0 216 1 13 1 94 21 61 1 95 21 53 1 135 1 13 1 198] 
#[0 10 186 0 27] 
#[1 10 190 0 27 10 194 0 34 10 194 0 110 10 194 0 115 10 194 0 134] 
#[0 10 198 0 26 0 27 0 34 0 110 0 115 0 134] 
#[0 10 202 0 27] 
#[0 10 206 0 27] 
#[1 21 69 0 71 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 1 13 1 94 21 73 1 95 9 49 1 97 1 13 1 198] 
#[1 21 77 0 4 21 77 0 6 0 122 0 9 21 77 0 11 21 77 0 13 21 77 0 17 21 77 0 24 5 87 0 28 21 77 0 29 21 77 0 31 21 77 0 33 5 145 0 35 5 149 0 42 21 77 0 44 21 77 0 46 21 77 0 49 21 77 0 50 21 77 0 205 21 77 0 206 21 77 1 55 21 77 1 65 21 77 1 69 21 77 1 73 21 77 1 77] 
#[0 10 210 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 21 81 0 135 0 10 0 137 14 189 0 183 14 193 0 234 0 29 0 236] 
#[0 10 214 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 10 218 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 21 85 0 135] 
#[0 10 222 0 16 0 27 0 135] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 10 226 0 135 0 10 0 137 21 89 0 227 21 93 0 234 0 29 0 236] 
#[0 10 230 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 1 201 0 9 21 97 1 25] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 21 101 1 95 1 13 1 198] 
#[1 17 125 0 27 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 8 130 0 135 0 10 0 137 21 105 0 225 21 105 0 226 19 197 0 229 11 233 0 234 0 29 0 236] 
#[0 21 109 0 135] 
#[1 21 113 0 16 17 125 0 27 8 130 0 135 17 129 0 223 21 117 0 225 21 117 0 226] 
#[1 17 125 0 27 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 8 130 0 135 0 10 0 137 21 121 0 225 21 121 0 226 19 197 0 229 11 233 0 234 0 29 0 236] 
#[0 21 125 0 135] 
#[1 17 125 0 27 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 8 130 0 135 0 10 0 137 21 129 0 225 21 129 0 226 19 197 0 229 11 233 0 234 0 29 0 236] 
#[0 21 133 0 135] 
#[1 21 137 0 16 17 125 0 27 8 130 0 135 17 129 0 223 21 141 0 225 21 141 0 226] 
#[1 6 250 0 16 6 250 0 27 6 250 0 135 21 145 0 224] 
#[1 21 149 0 16 17 125 0 27 8 130 0 135 17 129 0 223 21 153 0 225 21 153 0 226] 
#[0 10 234 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 21 157 0 135 0 10 0 137 14 189 0 183 14 193 0 234 0 29 0 236] 
#[1 4 230 0 41 4 230 0 57 4 230 0 65 4 230 0 81 4 230 0 82 4 230 0 85 4 230 0 86 4 230 0 87 4 230 0 88 4 230 0 89 4 230 0 90 4 230 0 91 4 230 0 92 4 230 0 93 4 230 0 94 4 230 0 95 4 230 0 96 4 230 0 97 4 230 0 98 4 230 0 99 4 230 0 100 4 230 0 101 4 230 0 102 4 230 0 103 4 230 0 104 4 230 0 105 4 230 0 106 4 230 0 107 4 230 0 108 4 230 0 109 4 230 0 110 4 230 0 111 4 230 0 112 4 230 0 113 4 230 0 114 4 230 0 115 4 230 0 135 4 230 0 137 21 161 0 184] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 21 165 0 135 0 10 0 137 14 189 0 183 14 193 0 234 0 29 0 236] 
#[0 10 238 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 21 169 0 135 0 10 0 137 14 189 0 183 14 193 0 234 0 29 0 236] 
#[0 10 242 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 10 246 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[0 10 250 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[0 10 254 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 11 2 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 21 173 0 135 0 10 0 137 17 217 0 195 17 221 0 234 0 29 0 236] 
#[0 11 6 0 10] 
#[0 11 10 0 16 0 135] 
#[0 11 14 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 11 18 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 21 177 0 135 0 10 0 137 15 141 0 191 15 145 0 234 0 29 0 236] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 21 181 0 135 0 10 0 137 15 141 0 191 15 145 0 234 0 29 0 236] 
#[1 5 46 0 41 5 46 0 57 5 46 0 65 5 46 0 81 5 46 0 82 5 46 0 85 5 46 0 86 5 46 0 87 5 46 0 88 5 46 0 89 5 46 0 90 5 46 0 91 5 46 0 92 5 46 0 93 5 46 0 94 5 46 0 95 5 46 0 96 5 46 0 97 5 46 0 98 5 46 0 99 5 46 0 100 5 46 0 101 5 46 0 102 5 46 0 103 5 46 0 104 5 46 0 105 5 46 0 106 5 46 0 107 5 46 0 108 5 46 0 109 5 46 0 110 5 46 0 111 5 46 0 112 5 46 0 113 5 46 0 114 5 46 0 115 5 46 0 135 5 46 0 137 21 185 0 192] 
#[0 11 22 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 11 26 0 16 0 27 0 34 0 110 0 115 0 134] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 21 189 0 10 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 21 193 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 21 197 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[1 2 234 0 1 2 234 0 3 2 234 0 9 2 234 0 14 2 234 0 17 2 234 0 18 2 234 0 27 2 234 0 28 2 234 0 41 2 234 0 42 2 234 0 49 2 234 0 52 2 234 0 53 2 234 0 57 2 234 0 58 2 234 0 60 2 234 0 64 2 234 0 65 2 234 0 67 2 234 0 68 2 234 0 71 2 234 0 72 2 234 0 73 2 234 0 74 2 234 0 75 2 234 0 76 2 234 0 77 2 234 0 78 2 234 0 79 2 234 0 80 2 234 0 81 2 234 0 82 2 234 0 83 2 234 0 85 2 234 0 86 2 234 0 87 2 234 0 88 2 234 0 89 2 234 0 90 2 234 0 91 2 234 0 92 2 234 0 93 2 234 0 94 2 234 0 95 2 234 0 96 2 234 0 97 2 234 0 98 2 234 0 99 2 234 0 100 2 234 0 101 2 234 0 102 2 234 0 103 2 234 0 104 2 234 0 105 2 234 0 106 2 234 0 107 2 234 0 108 2 234 0 109 2 234 0 110 2 234 0 111 2 234 0 112 2 234 0 113 2 234 0 114 2 234 0 115 2 234 0 116 2 234 0 117 2 234 0 118 2 234 0 119 2 234 0 120 2 234 0 121 2 234 0 123 2 234 0 124 2 234 0 127 2 234 0 128 2 234 0 130 2 234 0 131 2 234 0 134 2 234 0 137 21 201 1 102 9 33 1 103 9 37 1 104] 
#[1 2 234 0 1 2 234 0 3 2 234 0 9 2 234 0 14 2 234 0 17 2 234 0 18 2 234 0 27 2 234 0 28 2 234 0 41 2 234 0 42 2 234 0 49 2 234 0 52 2 234 0 53 2 234 0 57 2 234 0 58 2 234 0 60 2 234 0 64 2 234 0 65 2 234 0 67 2 234 0 68 2 234 0 71 2 234 0 72 2 234 0 73 2 234 0 74 2 234 0 75 2 234 0 76 2 234 0 77 2 234 0 78 2 234 0 79 2 234 0 80 2 234 0 81 2 234 0 82 2 234 0 83 2 234 0 85 2 234 0 86 2 234 0 87 2 234 0 88 2 234 0 89 2 234 0 90 2 234 0 91 2 234 0 92 2 234 0 93 2 234 0 94 2 234 0 95 2 234 0 96 2 234 0 97 2 234 0 98 2 234 0 99 2 234 0 100 2 234 0 101 2 234 0 102 2 234 0 103 2 234 0 104 2 234 0 105 2 234 0 106 2 234 0 107 2 234 0 108 2 234 0 109 2 234 0 110 2 234 0 111 2 234 0 112 2 234 0 113 2 234 0 114 2 234 0 115 2 234 0 116 2 234 0 117 2 234 0 118 2 234 0 119 2 234 0 120 2 234 0 121 2 234 0 123 2 234 0 124 2 234 0 127 2 234 0 128 2 234 0 130 2 234 0 131 2 234 0 134 2 234 0 137 21 205 1 102 9 33 1 103 9 37 1 104] 
#[0 21 209 0 134] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 21 213 1 95 1 13 1 198] 
#[0 11 30 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 18 97 0 55 4 221 0 134 21 217 0 161 21 221 1 126] 
#[0 11 34 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 66 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 11 38 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 11 42 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 55 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 66 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 2 234 0 1 2 234 0 3 2 234 0 9 2 234 0 14 2 234 0 17 2 234 0 18 2 234 0 27 2 234 0 28 2 234 0 41 2 234 0 42 2 234 0 49 2 234 0 52 2 234 0 53 2 234 0 57 2 234 0 58 2 234 0 60 2 234 0 64 2 234 0 65 2 234 0 67 2 234 0 68 2 234 0 71 2 234 0 72 2 234 0 73 2 234 0 74 2 234 0 75 2 234 0 76 2 234 0 77 2 234 0 78 2 234 0 79 2 234 0 80 2 234 0 81 2 234 0 82 2 234 0 83 2 234 0 85 2 234 0 86 2 234 0 87 2 234 0 88 2 234 0 89 2 234 0 90 2 234 0 91 2 234 0 92 2 234 0 93 2 234 0 94 2 234 0 95 2 234 0 96 2 234 0 97 2 234 0 98 2 234 0 99 2 234 0 100 2 234 0 101 2 234 0 102 2 234 0 103 2 234 0 104 2 234 0 105 2 234 0 106 2 234 0 107 2 234 0 108 2 234 0 109 2 234 0 110 2 234 0 111 2 234 0 112 2 234 0 113 2 234 0 114 2 234 0 115 2 234 0 116 2 234 0 117 2 234 0 118 2 234 0 119 2 234 0 120 2 234 0 121 2 234 0 123 2 234 0 124 2 234 0 127 2 234 0 128 2 234 0 130 2 234 0 131 2 234 0 134 2 234 0 137 21 225 1 102 9 33 1 103 9 37 1 104] 
#[0 21 229 0 10] 
#[0 11 46 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 8 214 0 16 8 214 0 27 21 233 1 110] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 21 237 0 154 1 13 1 94 8 205 1 95 1 13 1 198] 
#[0 11 50 0 16 0 27] 
#[0 11 54 0 10 0 16 0 26 0 32 0 43 0 135] 
#[0 11 58 0 10 0 16 0 26 0 32 0 43 0 135] 
#[1 11 62 0 10 11 62 0 16 11 62 0 26 11 62 0 32 21 241 0 36 11 62 0 43 11 62 0 135] 
#[0 11 66 0 10] 
#[0 11 70 0 10] 
#[0 11 74 0 10] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 6 1 0 22 6 5 0 23 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 6 13 0 67 6 17 0 68 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 6 21 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 6 25 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 21 245 1 5 6 37 1 6 6 41 1 7 6 45 1 8 6 49 1 9 6 53 1 10 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 11 78 0 16 0 43 0 61 0 135] 
#[1 4 241 0 9 21 249 0 163] 
#[0 11 82 0 26 0 27] 
#[1 21 69 0 71 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 21 73 1 95 1 13 1 198] 
#[0 11 86 0 27] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 8 137 1 95 21 253 1 145 1 13 1 198] 
#[0 11 90 0 27] 
#[1 2 81 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 69 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 1 13 1 94 8 137 1 95 2 73 1 97 22 1 1 145 22 5 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 1 13 1 198] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 197 0 154 22 9 0 155 1 13 1 94 8 205 1 95 1 13 1 198] 
#[0 11 94 0 27] 
#[1 19 13 0 89 19 13 0 108 19 13 0 109 19 13 0 110 19 13 0 111 19 13 0 112 19 13 0 113 19 13 0 114 19 13 0 115 19 13 0 137 22 13 0 210 19 13 1 97] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 8 137 1 95 22 17 1 145 1 13 1 198] 
#[1 4 241 0 9 22 21 0 163] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 8 137 1 95 22 25 1 145 1 13 1 198] 
#[0 11 98 0 27] 
#[0 11 102 0 27] 
#[0 11 106 0 27] 
#[0 11 110 0 27] 
#[1 22 29 0 32 11 114 0 34 11 114 0 110 11 114 0 115 11 114 0 134] 
#[0 11 118 0 27] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 197 0 154 22 33 0 155 1 13 1 94 8 205 1 95 1 13 1 198] 
#[0 11 122 0 27] 
#[0 11 126 0 27 0 34 0 110 0 115 0 134] 
#[0 11 130 0 27] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 22 37 0 200 4 77 0 203 1 13 1 94 4 81 1 95 1 13 1 198] 
#[0 11 134 0 27] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 22 41 0 200 4 77 0 203 1 13 1 94 4 81 1 95 1 13 1 198] 
#[1 2 81 0 82 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 4 69 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 8 197 0 154 22 45 0 155 1 13 1 94 8 205 1 95 2 73 1 97 22 49 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 1 13 1 198] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 197 0 154 22 53 0 155 1 13 1 94 8 205 1 95 1 13 1 198] 
#[0 11 138 0 27] 
#[1 1 201 0 9 22 57 0 20 22 61 1 25] 
#[1 1 201 0 9 22 65 0 20 22 69 1 25] 
#[1 11 142 0 16 11 142 0 27 11 142 0 34 11 142 0 110 11 142 0 115 11 142 0 134 22 73 0 214] 
#[0 11 146 0 16 0 27 0 34 0 110 0 115 0 134] 
#[0 22 77 0 32] 
#[0 11 150 0 16 0 27 0 34 0 110 0 115 0 134] 
#[0 11 154 0 9] 
#[0 11 158 0 9] 
#[1 4 241 0 9 22 81 0 163] 
#[0 11 162 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 11 166 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 11 170 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[1 16 253 0 57 17 1 0 65 17 33 0 81 2 81 0 82 17 5 0 85 2 69 0 86 17 9 0 87 2 69 0 88 1 29 0 89 2 69 0 90 2 69 0 91 17 13 0 92 17 17 0 93 2 9 0 94 2 13 0 95 2 69 0 96 2 69 0 97 2 69 0 98 17 21 0 99 2 69 0 100 17 25 0 101 2 69 0 102 2 69 0 103 2 69 0 104 2 25 0 105 17 29 0 106 2 69 0 107 1 33 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 1 65 0 137 17 33 0 153 17 37 0 158 22 85 0 188 17 45 0 198 17 49 0 199 17 53 0 204 17 57 0 207 17 61 0 208 17 65 0 209 17 69 0 210 17 45 0 218 17 49 0 219 17 81 0 220 2 69 1 94 17 85 1 97 17 89 1 158 2 81 1 160 2 81 1 161 2 89 1 162 2 97 1 173 2 105 1 174 2 105 1 175 2 69 1 198] 
#[0 11 174 0 16 0 27 0 135] 
#[1 1 201 0 9 22 89 1 25] 
#[0 22 93 0 135] 
#[0 11 178 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 17 125 0 27 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 8 130 0 135 0 10 0 137 22 97 0 225 22 97 0 226 19 197 0 229 11 233 0 234 0 29 0 236] 
#[0 22 101 0 135] 
#[0 22 105 0 135] 
#[0 11 182 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 22 109 0 135] 
#[0 11 186 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 17 125 0 27 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 8 130 0 135 0 10 0 137 22 113 0 225 22 113 0 226 19 197 0 229 11 233 0 234 0 29 0 236] 
#[0 22 117 0 135] 
#[1 22 121 0 16 17 125 0 27 8 130 0 135 17 129 0 223 22 125 0 225 22 125 0 226] 
#[1 17 125 0 27 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 8 130 0 135 0 10 0 137 22 129 0 225 22 129 0 226 19 197 0 229 11 233 0 234 0 29 0 236] 
#[0 22 133 0 135] 
#[0 11 190 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 22 137 0 135 0 10 0 137 14 189 0 183 14 193 0 234 0 29 0 236] 
#[0 11 194 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 11 198 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 11 202 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 11 206 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 11 210 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 0 10 0 41 0 10 0 57 0 10 0 65 0 10 0 81 0 10 0 82 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 22 141 0 135 0 10 0 137 15 141 0 191 15 145 0 234 0 29 0 236] 
#[0 11 214 0 16 0 27 0 34 0 110 0 115 0 134] 
#[1 22 145 0 10 22 149 0 16] 
#[0 22 153 0 10] 
#[1 5 103 0 1 5 103 0 3 5 103 0 9 5 103 0 14 5 103 0 17 5 103 0 18 5 103 0 27 5 103 0 28 5 103 0 41 5 103 0 42 5 103 0 49 5 103 0 52 5 103 0 53 11 218 0 54 5 103 0 57 5 103 0 58 11 218 0 59 5 103 0 60 11 218 0 61 5 103 0 64 5 103 0 65 5 103 0 67 5 103 0 68 5 103 0 71 5 103 0 72 5 103 0 73 5 103 0 74 5 103 0 75 5 103 0 76 5 103 0 77 5 103 0 78 5 103 0 79 5 103 0 80 5 103 0 81 5 103 0 82 5 103 0 83 5 103 0 85 5 103 0 86 5 103 0 87 5 103 0 88 5 103 0 89 5 103 0 90 5 103 0 91 5 103 0 92 5 103 0 93 5 103 0 94 5 103 0 95 5 103 0 96 5 103 0 97 5 103 0 98 5 103 0 99 5 103 0 100 5 103 0 101 5 103 0 102 5 103 0 103 5 103 0 104 5 103 0 105 5 103 0 106 5 103 0 107 5 103 0 108 5 103 0 109 5 103 0 110 5 103 0 111 5 103 0 112 5 103 0 113 5 103 0 114 5 103 0 115 5 103 0 116 5 103 0 117 5 103 0 118 5 103 0 119 5 103 0 120 5 103 0 121 5 103 0 123 5 103 0 124 5 103 0 127 5 103 0 128 5 103 0 130 5 103 0 131 5 103 0 134 11 218 0 135 5 103 0 137 12 181 1 103 9 37 1 104] 
#[1 5 107 0 1 5 107 0 3 5 107 0 9 5 107 0 14 5 107 0 17 5 107 0 18 5 107 0 27 5 107 0 28 5 107 0 41 5 107 0 42 5 107 0 49 5 107 0 52 5 107 0 53 11 222 0 54 5 107 0 57 5 107 0 58 11 222 0 59 5 107 0 60 5 111 0 61 5 107 0 64 5 107 0 65 5 107 0 67 5 107 0 68 5 107 0 71 5 107 0 72 5 107 0 73 5 107 0 74 5 107 0 75 5 107 0 76 5 107 0 77 5 107 0 78 5 107 0 79 5 107 0 80 5 107 0 81 5 107 0 82 5 107 0 83 5 107 0 85 5 107 0 86 5 107 0 87 5 107 0 88 5 107 0 89 5 107 0 90 5 107 0 91 5 107 0 92 5 107 0 93 5 107 0 94 5 107 0 95 5 107 0 96 5 107 0 97 5 107 0 98 5 107 0 99 5 107 0 100 5 107 0 101 5 107 0 102 5 107 0 103 5 107 0 104 5 107 0 105 5 107 0 106 5 107 0 107 5 107 0 108 5 107 0 109 5 107 0 110 5 107 0 111 5 107 0 112 5 107 0 113 5 107 0 114 5 107 0 115 5 107 0 116 5 107 0 117 5 107 0 118 5 107 0 119 5 107 0 120 5 107 0 121 5 107 0 123 5 107 0 124 5 107 0 127 5 107 0 128 5 107 0 130 5 107 0 131 5 107 0 134 11 222 0 135 5 107 0 137 12 181 1 103 9 37 1 104] 
#[1 11 226 0 54 11 226 0 59 11 226 0 85 11 226 0 86 11 226 0 87 11 226 0 88 11 226 0 89 11 226 0 90 11 226 0 91 11 226 0 92 11 226 0 93 11 226 0 94 11 226 0 95 11 226 0 96 11 226 0 97 11 226 0 98 11 226 0 99 11 226 0 100 11 226 0 101 11 226 0 102 11 226 0 103 11 226 0 104 11 226 0 105 11 226 0 106 11 226 0 107 11 226 0 108 11 226 0 109 11 226 0 110 11 226 0 111 11 226 0 112 11 226 0 113 11 226 0 114 11 226 0 115 11 226 0 135 11 226 0 137 22 161 1 119] 
#[1 22 165 0 10 22 169 0 16] 
#[0 11 230 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 55 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 66 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 4 221 0 134 22 173 0 161] 
#[1 5 115 0 1 5 115 0 3 5 115 0 9 5 115 0 14 5 115 0 17 5 115 0 18 5 115 0 27 5 115 0 28 5 115 0 41 5 115 0 42 5 115 0 49 5 115 0 52 5 115 0 53 11 234 0 54 5 115 0 57 5 115 0 58 11 234 0 59 5 115 0 60 11 234 0 61 5 115 0 64 5 115 0 65 5 115 0 67 5 115 0 68 5 115 0 71 5 115 0 72 5 115 0 73 5 115 0 74 5 115 0 75 5 115 0 76 5 115 0 77 5 115 0 78 5 115 0 79 5 115 0 80 5 115 0 81 5 115 0 82 5 115 0 83 5 115 0 85 5 115 0 86 5 115 0 87 5 115 0 88 5 115 0 89 5 115 0 90 5 115 0 91 5 115 0 92 5 115 0 93 5 115 0 94 5 115 0 95 5 115 0 96 5 115 0 97 5 115 0 98 5 115 0 99 5 115 0 100 5 115 0 101 5 115 0 102 5 115 0 103 5 115 0 104 5 115 0 105 5 115 0 106 5 115 0 107 5 115 0 108 5 115 0 109 5 115 0 110 5 115 0 111 5 115 0 112 5 115 0 113 5 115 0 114 5 115 0 115 5 115 0 116 5 115 0 117 5 115 0 118 5 115 0 119 5 115 0 120 5 115 0 121 5 115 0 123 5 115 0 124 5 115 0 127 5 115 0 128 5 115 0 130 5 115 0 131 5 115 0 134 11 234 0 135 5 115 0 137 12 181 1 103 9 37 1 104] 
#[1 2 234 0 1 2 234 0 3 2 234 0 9 2 234 0 14 2 234 0 17 2 234 0 18 2 234 0 27 2 234 0 28 2 234 0 41 2 234 0 42 2 234 0 49 2 234 0 52 2 234 0 53 2 234 0 57 2 234 0 58 2 234 0 60 2 234 0 64 2 234 0 65 2 234 0 67 2 234 0 68 2 234 0 71 2 234 0 72 2 234 0 73 2 234 0 74 2 234 0 75 2 234 0 76 2 234 0 77 2 234 0 78 2 234 0 79 2 234 0 80 2 234 0 81 2 234 0 82 2 234 0 83 2 234 0 85 2 234 0 86 2 234 0 87 2 234 0 88 2 234 0 89 2 234 0 90 2 234 0 91 2 234 0 92 2 234 0 93 2 234 0 94 2 234 0 95 2 234 0 96 2 234 0 97 2 234 0 98 2 234 0 99 2 234 0 100 2 234 0 101 2 234 0 102 2 234 0 103 2 234 0 104 2 234 0 105 2 234 0 106 2 234 0 107 2 234 0 108 2 234 0 109 2 234 0 110 2 234 0 111 2 234 0 112 2 234 0 113 2 234 0 114 2 234 0 115 2 234 0 116 2 234 0 117 2 234 0 118 2 234 0 119 2 234 0 120 2 234 0 121 2 234 0 123 2 234 0 124 2 234 0 127 2 234 0 128 2 234 0 130 2 234 0 131 2 234 0 134 2 234 0 137 22 177 1 102 9 33 1 103 9 37 1 104] 
#[1 20 145 0 16 11 238 0 27 20 149 1 109] 
#[0 11 242 0 16 0 27] 
#[0 11 246 0 10 0 16 0 26 0 32 0 43 0 135] 
#[0 11 250 0 16 0 43 0 61 0 135] 
#[1 22 181 0 32 11 254 0 34 11 254 0 110 11 254 0 115 11 254 0 134] 
#[0 12 2 0 27] 
#[0 12 6 0 27] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 8 137 1 95 22 185 1 145 1 13 1 198] 
#[0 12 10 0 27] 
#[1 4 241 0 9 22 189 0 163] 
#[0 12 14 0 27] 
#[0 11 114 0 27] 
#[0 12 18 0 27] 
#[1 1 81 0 89 1 81 0 108 1 81 0 109 1 81 0 110 1 81 0 111 1 81 0 112 1 81 0 113 1 81 0 114 1 81 0 115 1 81 0 137 22 193 1 96 1 81 1 97 1 85 1 162 22 193 1 188] 
#[0 12 22 0 27] 
#[0 12 26 0 27] 
#[0 12 30 0 27] 
#[0 12 34 0 27] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 8 197 0 154 22 197 0 155 1 13 1 94 8 205 1 95 1 13 1 198] 
#[0 12 38 0 27] 
#[1 22 201 0 71 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 22 205 1 95 1 13 1 198] 
#[0 12 42 0 16 0 27 0 34 0 110 0 115 0 134] 
#[1 22 209 0 71 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 22 213 1 95 1 13 1 198] 
#[0 12 46 0 27] 
#[1 22 217 0 16 12 50 0 27 12 50 0 34 12 50 0 110 12 50 0 115 12 50 0 134 22 221 0 213] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 22 225 0 217 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 22 229 1 30 22 233 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 12 54 0 27 0 34 0 110 0 115 0 134] 
#[0 12 58 0 41 0 57 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[0 12 62 0 16 0 27 0 135] 
#[0 12 66 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 22 237 0 135] 
#[0 12 70 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 12 74 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 12 78 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 22 241 0 135] 
#[0 12 82 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 17 125 0 27 0 10 0 41 0 10 0 85 0 10 0 86 0 10 0 87 0 10 0 88 0 10 0 89 0 10 0 90 0 10 0 91 0 10 0 92 0 10 0 93 0 10 0 94 0 10 0 95 0 10 0 96 0 10 0 97 0 10 0 98 0 10 0 99 0 10 0 100 0 10 0 101 0 10 0 102 0 10 0 103 0 10 0 104 0 10 0 105 0 10 0 106 0 10 0 107 0 10 0 108 0 10 0 109 0 10 0 110 0 10 0 111 0 10 0 112 0 10 0 113 0 10 0 114 0 10 0 115 8 130 0 135 0 10 0 137 22 245 0 225 22 245 0 226 19 197 0 229 11 233 0 234 0 29 0 236] 
#[0 22 249 0 135] 
#[0 22 253 0 135] 
#[0 12 86 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 12 90 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 12 94 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 12 98 0 16 0 27 0 34 0 110 0 115 0 134] 
#[0 23 1 0 10] 
#[0 23 5 0 27] 
#[1 2 234 0 1 2 234 0 3 2 234 0 9 2 234 0 14 2 234 0 17 2 234 0 18 2 234 0 27 2 234 0 28 2 234 0 41 2 234 0 42 2 234 0 49 2 234 0 52 2 234 0 53 2 234 0 57 2 234 0 58 2 234 0 60 2 234 0 64 2 234 0 65 2 234 0 67 2 234 0 68 2 234 0 71 2 234 0 72 2 234 0 73 2 234 0 74 2 234 0 75 2 234 0 76 2 234 0 77 2 234 0 78 2 234 0 79 2 234 0 80 2 234 0 81 2 234 0 82 2 234 0 83 2 234 0 85 2 234 0 86 2 234 0 87 2 234 0 88 2 234 0 89 2 234 0 90 2 234 0 91 2 234 0 92 2 234 0 93 2 234 0 94 2 234 0 95 2 234 0 96 2 234 0 97 2 234 0 98 2 234 0 99 2 234 0 100 2 234 0 101 2 234 0 102 2 234 0 103 2 234 0 104 2 234 0 105 2 234 0 106 2 234 0 107 2 234 0 108 2 234 0 109 2 234 0 110 2 234 0 111 2 234 0 112 2 234 0 113 2 234 0 114 2 234 0 115 2 234 0 116 2 234 0 117 2 234 0 118 2 234 0 119 2 234 0 120 2 234 0 121 2 234 0 123 2 234 0 124 2 234 0 127 2 234 0 128 2 234 0 130 2 234 0 131 2 234 0 134 2 234 0 137 23 9 1 103 9 37 1 104] 
#[1 2 234 0 54 2 234 0 59 2 234 0 85 2 234 0 86 2 234 0 87 2 234 0 88 2 234 0 89 2 234 0 90 2 234 0 91 2 234 0 92 2 234 0 93 2 234 0 94 2 234 0 95 2 234 0 96 2 234 0 97 2 234 0 98 2 234 0 99 2 234 0 100 2 234 0 101 2 234 0 102 2 234 0 103 2 234 0 104 2 234 0 105 2 234 0 106 2 234 0 107 2 234 0 108 2 234 0 109 2 234 0 110 2 234 0 111 2 234 0 112 2 234 0 113 2 234 0 114 2 234 0 115 23 13 0 135 2 234 0 137 23 17 1 104 23 21 1 120 23 25 1 121] 
#[0 12 102 0 134] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 23 29 1 95 1 13 1 198] 
#[0 12 106 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 55 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 66 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 5 119 0 1 5 119 0 3 5 119 0 9 5 119 0 14 5 119 0 17 5 119 0 18 5 119 0 27 5 119 0 28 5 119 0 41 5 119 0 42 5 119 0 49 5 119 0 52 5 119 0 53 12 110 0 54 5 119 0 57 5 119 0 58 12 110 0 59 5 119 0 60 12 110 0 61 5 119 0 64 5 119 0 65 5 119 0 67 5 119 0 68 5 119 0 71 5 119 0 72 5 119 0 73 5 119 0 74 5 119 0 75 5 119 0 76 5 119 0 77 5 119 0 78 5 119 0 79 5 119 0 80 5 119 0 81 5 119 0 82 5 119 0 83 5 119 0 85 5 119 0 86 5 119 0 87 5 119 0 88 5 119 0 89 5 119 0 90 5 119 0 91 5 119 0 92 5 119 0 93 5 119 0 94 5 119 0 95 5 119 0 96 5 119 0 97 5 119 0 98 5 119 0 99 5 119 0 100 5 119 0 101 5 119 0 102 5 119 0 103 5 119 0 104 5 119 0 105 5 119 0 106 5 119 0 107 5 119 0 108 5 119 0 109 5 119 0 110 5 119 0 111 5 119 0 112 5 119 0 113 5 119 0 114 5 119 0 115 5 119 0 116 5 119 0 117 5 119 0 118 5 119 0 119 5 119 0 120 5 119 0 121 5 119 0 123 5 119 0 124 5 119 0 127 5 119 0 128 5 119 0 130 5 119 0 131 5 119 0 134 12 110 0 135 5 119 0 137 12 181 1 103 9 37 1 104] 
#[1 1 81 0 89 1 81 0 108 1 81 0 109 1 81 0 110 1 81 0 111 1 81 0 112 1 81 0 113 1 81 0 114 1 81 0 115 1 81 0 137 23 33 1 96 1 81 1 97 1 85 1 162 23 33 1 188] 
#[0 12 114 0 27] 
#[0 11 254 0 27] 
#[0 12 118 0 27] 
#[0 12 122 0 27] 
#[1 1 201 0 9 23 37 1 25] 
#[1 1 201 0 9 23 41 1 25] 
#[1 1 201 0 9 23 45 1 25] 
#[1 1 201 0 9 23 49 0 32 23 53 1 25] 
#[1 12 189 0 52 21 45 0 75 23 57 0 77 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 23 61 0 215 23 61 0 216 1 13 1 94 21 61 1 95 23 61 1 135 1 13 1 198] 
#[0 12 126 0 16 0 27 0 34 0 110 0 115 0 134] 
#[0 12 130 0 16 0 27 0 34 0 110 0 115 0 134] 
#[1 12 134 0 16 6 249 0 21 12 134 0 27 12 134 0 34 12 134 0 110 12 134 0 115 12 134 0 134] 
#[1 12 138 0 16 6 253 0 21 12 138 0 27 12 138 0 34 7 1 0 38 12 138 0 110 12 138 0 115 12 138 0 134] 
#[0 12 142 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 12 146 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 23 65 0 135] 
#[0 12 150 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 12 154 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[0 12 158 0 16 0 27 0 34 0 110 0 115 0 134] 
#[0 12 162 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 12 166 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 12 170 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[1 23 69 0 54 23 73 0 59 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 14 89 1 95 13 49 1 129 1 13 1 198] 
#[0 12 174 0 54 0 59 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 135 0 137] 
#[0 23 77 0 135] 
#[0 23 81 0 10] 
#[0 12 178 0 27] 
#[0 12 182 0 16 0 27 0 34 0 110 0 115 0 134] 
#[0 12 186 0 16 0 27 0 34 0 110 0 115 0 134] 
#[0 12 190 0 27] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 23 85 0 217 3 93 0 231 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 22 229 1 30 22 233 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 6 157 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 12 194 0 27] 
#[0 23 89 0 20] 
#[0 12 198 0 16 0 27 0 34 0 110 0 115 0 134] 
#[0 12 202 0 41 0 56 0 57 0 62 0 65 0 81 0 82 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 137 1 199] 
#[1 3 241 0 1 2 217 0 3 2 221 0 9 4 9 0 14 3 245 0 17 4 9 0 18 2 241 0 28 2 245 0 42 3 253 0 49 2 253 0 57 3 1 0 64 3 5 0 71 3 9 0 72 3 13 0 75 3 17 0 77 3 21 0 78 3 25 0 79 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 29 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 3 29 0 108 1 37 0 109 1 41 0 110 1 45 0 111 1 49 0 112 1 53 0 113 1 57 0 114 1 61 0 115 3 33 0 116 3 37 0 117 3 41 0 118 3 45 0 119 3 49 0 120 3 53 0 121 3 57 0 123 3 61 0 124 3 65 0 127 3 69 0 128 3 73 0 130 3 77 0 131 3 81 0 134 1 65 0 137 3 85 0 162 3 89 0 163 3 93 0 231 23 93 0 238 3 105 0 245 3 105 0 246 3 105 0 247 3 105 0 248 3 105 0 249 3 105 0 250 3 105 0 251 3 133 0 252 3 137 0 253 3 105 1 0 3 105 1 1 3 105 1 11 3 153 1 12 3 105 1 14 3 105 1 19 3 105 1 22 3 105 1 23 3 105 1 24 3 185 1 30 3 189 1 38 3 193 1 39 3 197 1 42 3 201 1 45 3 205 1 48 3 209 1 52 3 213 1 56 3 217 1 59 3 221 1 62 3 225 1 66 3 229 1 70 3 233 1 74 3 237 1 78 3 241 1 79 3 245 1 80 3 241 1 81 3 253 1 82 3 237 1 83 3 237 1 84 4 9 1 89 4 13 1 90 1 13 1 94 5 245 1 95 4 37 1 96 1 81 1 97 4 29 1 162 4 33 1 163 4 37 1 188 3 105 1 189 4 45 1 191 4 49 1 194 1 13 1 198] 
#[0 23 97 0 26] 
#[0 12 206 0 1 0 3 0 9 0 14 0 17 0 18 0 27 0 28 0 41 0 42 0 49 0 52 0 53 0 54 0 57 0 58 0 59 0 60 0 61 0 64 0 65 0 67 0 68 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 108 0 109 0 110 0 111 0 112 0 113 0 114 0 115 0 116 0 117 0 118 0 119 0 120 0 121 0 123 0 124 0 127 0 128 0 130 0 131 0 134 0 135 0 137] 
#[0 12 210 0 134] 
#[0 12 214 0 16 0 27 0 34 0 110 0 115 0 134] 
#[1 1 13 0 85 1 13 0 86 1 13 0 87 1 13 0 88 1 13 0 89 1 13 0 90 1 13 0 91 1 13 0 92 1 13 0 93 0 177 0 94 1 13 0 95 1 13 0 96 1 13 0 97 1 13 0 98 1 13 0 99 1 13 0 100 1 13 0 101 1 13 0 102 1 13 0 103 1 13 0 104 1 13 0 105 1 13 0 106 1 13 0 107 1 13 0 108 1 13 0 109 1 13 0 110 1 13 0 111 1 13 0 112 1 13 0 113 1 13 0 114 1 13 0 115 1 13 0 137 1 13 1 94 23 101 1 95 1 13 1 198] 
#[0 23 105 0 26] 
#[1 2 234 0 1 2 234 0 3 2 234 0 9 2 234 0 14 2 234 0 17 2 234 0 18 2 234 0 27 2 234 0 28 2 234 0 41 2 234 0 42 2 234 0 49 2 234 0 52 2 234 0 53 2 234 0 57 2 234 0 58 2 234 0 60 2 234 0 64 2 234 0 65 2 234 0 67 2 234 0 68 2 234 0 71 2 234 0 72 2 234 0 73 2 234 0 74 2 234 0 75 2 234 0 76 2 234 0 77 2 234 0 78 2 234 0 79 2 234 0 80 2 234 0 81 2 234 0 82 2 234 0 83 2 234 0 85 2 234 0 86 2 234 0 87 2 234 0 88 2 234 0 89 2 234 0 90 2 234 0 91 2 234 0 92 2 234 0 93 2 234 0 94 2 234 0 95 2 234 0 96 2 234 0 97 2 234 0 98 2 234 0 99 2 234 0 100 2 234 0 101 2 234 0 102 2 234 0 103 2 234 0 104 2 234 0 105 2 234 0 106 2 234 0 107 2 234 0 108 2 234 0 109 2 234 0 110 2 234 0 111 2 234 0 112 2 234 0 113 2 234 0 114 2 234 0 115 2 234 0 116 2 234 0 117 2 234 0 118 2 234 0 119 2 234 0 120 2 234 0 121 2 234 0 123 2 234 0 124 2 234 0 127 2 234 0 128 2 234 0 130 2 234 0 131 2 234 0 134 12 218 0 135 2 234 0 137 23 109 1 102 9 33 1 103 9 37 1 104] 
#[0 23 49 0 32] 
#[1 2 234 0 1 2 234 0 3 2 234 0 9 2 234 0 14 2 234 0 17 2 234 0 18 2 234 0 27 2 234 0 28 2 234 0 41 2 234 0 42 2 234 0 49 2 234 0 52 2 234 0 53 12 222 0 54 2 234 0 57 2 234 0 58 12 222 0 59 2 234 0 60 2 234 0 64 2 234 0 65 2 234 0 67 2 234 0 68 2 234 0 71 2 234 0 72 2 234 0 73 2 234 0 74 2 234 0 75 2 234 0 76 2 234 0 77 2 234 0 78 2 234 0 79 2 234 0 80 2 234 0 81 2 234 0 82 2 234 0 83 5 123 0 85 5 123 0 86 5 123 0 87 5 123 0 88 5 123 0 89 5 123 0 90 5 123 0 91 5 123 0 92 5 123 0 93 5 123 0 94 5 123 0 95 5 123 0 96 5 123 0 97 5 123 0 98 5 123 0 99 5 123 0 100 5 123 0 101 5 123 0 102 5 123 0 103 5 123 0 104 5 123 0 105 5 123 0 106 5 123 0 107 5 123 0 108 5 123 0 109 5 123 0 110 5 123 0 111 5 123 0 112 5 123 0 113 5 123 0 114 5 123 0 115 2 234 0 116 2 234 0 117 2 234 0 118 2 234 0 119 2 234 0 120 2 234 0 121 2 234 0 123 2 234 0 124 2 234 0 127 2 234 0 128 2 234 0 130 2 234 0 131 2 234 0 134 12 222 0 135 5 123 0 137 23 113 1 102 9 33 1 103 9 37 1 104] 
#[1 2 234 0 1 2 234 0 3 2 234 0 9 2 234 0 14 2 234 0 17 2 234 0 18 2 234 0 27 2 234 0 28 2 234 0 41 2 234 0 42 2 234 0 49 2 234 0 52 2 234 0 53 2 234 0 57 2 234 0 58 2 234 0 60 2 234 0 64 2 234 0 65 2 234 0 67 2 234 0 68 2 234 0 71 2 234 0 72 2 234 0 73 2 234 0 74 2 234 0 75 2 234 0 76 2 234 0 77 2 234 0 78 2 234 0 79 2 234 0 80 2 234 0 81 2 234 0 82 2 234 0 83 2 234 0 85 2 234 0 86 2 234 0 87 2 234 0 88 2 234 0 89 2 234 0 90 2 234 0 91 2 234 0 92 2 234 0 93 2 234 0 94 2 234 0 95 2 234 0 96 2 234 0 97 2 234 0 98 2 234 0 99 2 234 0 100 2 234 0 101 2 234 0 102 2 234 0 103 2 234 0 104 2 234 0 105 2 234 0 106 2 234 0 107 2 234 0 108 2 234 0 109 2 234 0 110 2 234 0 111 2 234 0 112 2 234 0 113 2 234 0 114 2 234 0 115 2 234 0 116 2 234 0 117 2 234 0 118 2 234 0 119 2 234 0 120 2 234 0 121 2 234 0 123 2 234 0 124 2 234 0 127 2 234 0 128 2 234 0 130 2 234 0 131 2 234 0 134 12 226 0 135 2 234 0 137 12 181 1 103 9 37 1 104] 
#[1 2 234 0 1 2 234 0 3 2 234 0 9 2 234 0 14 2 234 0 17 2 234 0 18 2 234 0 27 2 234 0 28 2 234 0 41 2 234 0 42 2 234 0 49 2 234 0 52 2 234 0 53 12 230 0 54 2 234 0 57 2 234 0 58 12 230 0 59 2 234 0 60 2 234 0 64 2 234 0 65 2 234 0 67 2 234 0 68 2 234 0 71 2 234 0 72 2 234 0 73 2 234 0 74 2 234 0 75 2 234 0 76 2 234 0 77 2 234 0 78 2 234 0 79 2 234 0 80 2 234 0 81 2 234 0 82 2 234 0 83 5 127 0 85 5 127 0 86 5 127 0 87 5 127 0 88 5 127 0 89 5 127 0 90 5 127 0 91 5 127 0 92 5 127 0 93 5 127 0 94 5 127 0 95 5 127 0 96 5 127 0 97 5 127 0 98 5 127 0 99 5 127 0 100 5 127 0 101 5 127 0 102 5 127 0 103 5 127 0 104 5 127 0 105 5 127 0 106 5 127 0 107 5 127 0 108 5 127 0 109 5 127 0 110 5 127 0 111 5 127 0 112 5 127 0 113 5 127 0 114 5 127 0 115 2 234 0 116 2 234 0 117 2 234 0 118 2 234 0 119 2 234 0 120 2 234 0 121 2 234 0 123 2 234 0 124 2 234 0 127 2 234 0 128 2 234 0 130 2 234 0 131 2 234 0 134 12 230 0 135 5 127 0 137 12 181 1 103 9 37 1 104]
	).
]

{ #category : #'as yet unclassified' }
DartParser >> originalFolder: aFileLocator [ 
	self shouldBeImplemented.
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor______logicalOrExpression__logicalOrExpression___1: nodes [

	| result |
	result := OrderedCollection new: 2.
	self add: (nodes at: 1) to: result.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_____identifier__identifier___1: nodes [

	| result |
	result := OrderedCollection new: 2.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_____identifier__identifier___2: nodes [

	| result |
	result := nodes at: 1.
	self add: (nodes at: 2) to: result.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_equalityOperator__equalityOperator__relationalExpression__relationalExpression__1: nodes [

	| result |
	result := Array new: 2.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_metadata_topLevelDefinition_1: nodes [

	| result |
	result := nodes at: 2.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_metadata_topLevelDefinition__1: nodes [

	| result |
	result := Array new: 37.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 9 put: (OrderedCollection new: 2).
	result at: 10 put: (OrderedCollection new: 2).
	result at: 11 put: (OrderedCollection new: 2).
	result at: 12 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 18 put: (OrderedCollection new: 2).
	result at: 19 put: (OrderedCollection new: 2).
	result at: 20 put: (OrderedCollection new: 2).
	result at: 21 put: (OrderedCollection new: 2).
	result at: 22 put: (OrderedCollection new: 2).
	result at: 23 put: (OrderedCollection new: 2).
	result at: 24 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 27 put: (OrderedCollection new: 2).
	result at: 28 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 30 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: (OrderedCollection new: 2).
	result at: 33 put: (OrderedCollection new: 2).
	result at: 34 put: (OrderedCollection new: 2).
	result at: 35 put: (OrderedCollection new: 2).
	result at: 36 put: (OrderedCollection new: 2).
	result at: 37 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_metadata_topLevelDefinition__2: nodes [

	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self addAll: ((nodes at: 2) at: 2) to: (result at: 33).
	self addAll: ((nodes at: 2) at: 3) to: (result at: 34).
	self addAll: ((nodes at: 2) at: 4) to: (result at: 35).
	self addAll: ((nodes at: 2) at: 5) to: (result at: 23).
	self addAll: ((nodes at: 2) at: 6) to: (result at: 36).
	self add: ((nodes at: 2) at: 7) to: (result at: 24).
	self addAll: ((nodes at: 2) at: 8) to: (result at: 37).
	self add: ((nodes at: 2) at: 9) to: (result at: 12).
	self add: ((nodes at: 2) at: 10) to: (result at: 13).
	self add: ((nodes at: 2) at: 11) to: (result at: 15).
	self add: ((nodes at: 2) at: 12) to: (result at: 16).
	self addAll: ((nodes at: 2) at: 13) to: (result at: 25).
	self addAll: ((nodes at: 2) at: 14) to: (result at: 7).
	self addAll: ((nodes at: 2) at: 15) to: (result at: 26).
	self addAll: ((nodes at: 2) at: 16) to: (result at: 27).
	self addAll: ((nodes at: 2) at: 17) to: (result at: 28).
	self add: ((nodes at: 2) at: 18) to: (result at: 2).
	self add: ((nodes at: 2) at: 19) to: (result at: 3).
	self add: ((nodes at: 2) at: 20) to: (result at: 4).
	self add: ((nodes at: 2) at: 21) to: (result at: 29).
	self add: ((nodes at: 2) at: 22) to: (result at: 6).
	self add: ((nodes at: 2) at: 23) to: (result at: 5).
	self add: ((nodes at: 2) at: 24) to: (result at: 8).
	self addAll: ((nodes at: 2) at: 25) to: (result at: 30).
	self addAll: ((nodes at: 2) at: 26) to: (result at: 9).
	self add: ((nodes at: 2) at: 27) to: (result at: 10).
	self add: ((nodes at: 2) at: 28) to: (result at: 11).
	self addAll: ((nodes at: 2) at: 29) to: (result at: 31).
	self add: ((nodes at: 2) at: 30) to: (result at: 14).
	self addAll: ((nodes at: 2) at: 31) to: (result at: 32).
	self add: ((nodes at: 2) at: 32) to: (result at: 17).
	self add: ((nodes at: 2) at: 33) to: (result at: 18).
	self add: ((nodes at: 2) at: 34) to: (result at: 19).
	self add: ((nodes at: 2) at: 35) to: (result at: 20).
	self add: ((nodes at: 2) at: 36) to: (result at: 21).
	self add: ((nodes at: 2) at: 37) to: (result at: 22).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_multiLineString__multiLineString____singleLineString__singleLineString___1: nodes [

	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	self add: ((nodes at: 1) at: 1) to: (result at: 1).
	self add: ((nodes at: 1) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression__1: nodes [

	| result |
	result := Array new: 4.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression__2: nodes [

	| result |
	result := Array new: 4.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression__3: nodes [

	| result |
	result := Array new: 4.
	result at: 3 put: (nodes at: 1).
	result at: 4 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression___1: nodes [

	| result |
	result := Array new: 4.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	self add: ((nodes at: 1) at: 1) to: (result at: 1).
	self add: ((nodes at: 1) at: 2) to: (result at: 2).
	self add: ((nodes at: 1) at: 3) to: (result at: 3).
	self add: ((nodes at: 1) at: 4) to: (result at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFor_typeTest__typeTest____typeCast__typeCast____relationalOperator__relationalOperator__bitwiseOrExpression__bitwiseOrExpression___2: nodes [

	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	self add: ((nodes at: 2) at: 3) to: (result at: 3).
	self add: ((nodes at: 2) at: 4) to: (result at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForadditiveExpression2: nodes [

	| result |
	result := DartAdditiveExpressionNode new.
	result addNode: (nodes at: 1) to: result multiplicativeExpressions.
	result addTokens: ((nodes at: 2) at: 1) to: result additiveOperators.
	result
		addNodes: ((nodes at: 2) at: 2)
		to: result multiplicativeExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForadditiveExpression3: nodes [

	| result |
	result := DartAdditiveExpressionNode new.
	result addToken: (nodes at: 2) to: result additiveOperators.
	result addNode: (nodes at: 3) to: result multiplicativeExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForargumentList1: nodes [

	| result |
	result := DartArgumentListNode new.
	result addNode: (nodes at: 1) to: result namedArguments.
	result addNodes: (nodes at: 2) to: result namedArguments.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForargumentList2: nodes [

	| result |
	result := DartArgumentListNode new.
	result expressionList: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result namedArguments.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForassertStatement1: nodes [

	| result |
	result := DartAssertStatementNode new.
	result assertion: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForassertion1: nodes [

	| result |
	result := DartAssertionNode new.
	result addObject: (nodes at: 3) to: result expressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForassertion3: nodes [

	| result |
	result := DartAssertionNode new.
	result addObject: (nodes at: 3) to: result expressions.
	result addObject: (nodes at: 5) to: result expressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForassignableExpression1: nodes [

	| result |
	result := DartAssignableExpressionNode new.
	result primary: (nodes at: 1).
	result assignableSelectorPart: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForassignableExpression2: nodes [

	| result |
	result := DartAssignableExpressionNode new.
	result unconditionalAssignableSelector: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForassignableExpression3: nodes [

	| result |
	result := DartAssignableExpressionNode new.
	result identifier: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForassignableExpressionWithoutCascadeWithOperator1: nodes [

	| result |
	result := DartAssignableExpressionWithoutCascadeWithOperatorNode new.
	result assignableExpression: (nodes at: 1).
	result assignmentOperator: (nodes at: 2).
	result expressionWithoutCascade: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForassignmentOperator1: nodes [

	| result |
	result := DartAssignmentOperatorNode new.
	result equalsSymbol: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForassignmentOperator2: nodes [

	| result |
	result := DartAssignmentOperatorNode new.
	result compoundAssignmentOperator: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForawaitExpression1: nodes [

	| result |
	result := DartAwaitExpressionNode new.
	result unaryExpression: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForbitwiseAndExpression2: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 1) to: result shiftExpressions.
	result addNodes: (nodes at: 2) to: result shiftExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForbitwiseAndExpression3: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 3) to: result shiftExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForbitwiseOrExpression2: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 1) to: result bitwiseXorExpressions.
	result addNodes: (nodes at: 2) to: result bitwiseXorExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForbitwiseOrExpression3: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 3) to: result bitwiseXorExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForbitwiseXorExpression2: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 1) to: result bitwiseAndExpressions.
	result addNodes: (nodes at: 2) to: result bitwiseAndExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForbitwiseXorExpression3: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 3) to: result bitwiseAndExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForblock1: nodes [

	| result |
	result := DartBlockNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForblock2: nodes [

	| result |
	result := DartBlockNode new.
	result statements: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForbooleanLiteral1: nodes [

	| result |
	result := DartBooleanLiteralNode new.
	result _true: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForbooleanLiteral2: nodes [

	| result |
	result := DartBooleanLiteralNode new.
	result _false: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForbreakStatement1: nodes [

	| result |
	result := DartBreakStatementNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForcascade1: nodes [

	| result |
	result := DartCascadeNode new.
	result cascade: (nodes at: 1).
	result cascadeSection: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForcascade3: nodes [

	| result |
	result := DartCascadeNode new.
	result conditionalExpression: (nodes at: 1).
	result cascadeSection: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForcatchPart1: nodes [

	| result |
	result := DartCatchPartNode new.
	result addNode: (nodes at: 3) to: result identifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForcatchPart2: nodes [

	| result |
	result := DartCatchPartNode new.
	result addNode: (nodes at: 3) to: result identifiers.
	result addNode: (nodes at: 5) to: result identifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration10: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 3).
	result interfaces: (nodes at: 4).
	result addObjects: ((nodes at: 6) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 6) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration11: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 3).
	result mixins: (nodes at: 4).
	result addObjects: ((nodes at: 6) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 6) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration12: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 3).
	result mixins: (nodes at: 4).
	result interfaces: (nodes at: 5).
	result addObjects: ((nodes at: 7) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 7) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration13: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 3).
	result superclass: (nodes at: 4).
	result addObjects: ((nodes at: 6) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 6) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration14: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 3).
	result superclass: (nodes at: 4).
	result interfaces: (nodes at: 5).
	result addObjects: ((nodes at: 7) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 7) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration15: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 3).
	result superclass: (nodes at: 4).
	result mixins: (nodes at: 5).
	result addObjects: ((nodes at: 7) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 7) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration16: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 3).
	result superclass: (nodes at: 4).
	result mixins: (nodes at: 5).
	result interfaces: (nodes at: 6).
	result addObjects: ((nodes at: 8) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 8) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration17: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result mixinApplicationClass: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration18: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result mixinApplicationClass: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration1: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 2).
	result addObjects: ((nodes at: 4) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 4) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration2: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 2).
	result interfaces: (nodes at: 3).
	result addObjects: ((nodes at: 5) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 5) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration3: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 2).
	result mixins: (nodes at: 3).
	result addObjects: ((nodes at: 5) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 5) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration4: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 2).
	result mixins: (nodes at: 3).
	result interfaces: (nodes at: 4).
	result addObjects: ((nodes at: 6) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 6) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration5: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 2).
	result superclass: (nodes at: 3).
	result addObjects: ((nodes at: 5) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 5) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration6: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 2).
	result superclass: (nodes at: 3).
	result interfaces: (nodes at: 4).
	result addObjects: ((nodes at: 6) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 6) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration7: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 2).
	result superclass: (nodes at: 3).
	result mixins: (nodes at: 4).
	result addObjects: ((nodes at: 6) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 6) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration8: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 2).
	result superclass: (nodes at: 3).
	result mixins: (nodes at: 4).
	result interfaces: (nodes at: 5).
	result addObjects: ((nodes at: 7) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 7) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassDeclaration9: nodes [

	| result |
	result := DartClassDeclarationNode new.
	result typeWithParameters: (nodes at: 3).
	result addObjects: ((nodes at: 5) at: 1) to: result metadatas.
	result
		addNodes: ((nodes at: 5) at: 2)
		to: result classMemberDefinitions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassMemberDefinition1: nodes [

	| result |
	result := DartClassMemberDefinitionNode new.
	result methodSignature: (nodes at: 1).
	result functionBody: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForclassMemberDefinition2: nodes [

	| result |
	result := DartClassMemberDefinitionNode new.
	result declaration: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconditionalExpression2: nodes [

	| result |
	result := DartConditionalExpressionNode new.
	result testExpression: (nodes at: 1).
	result trueExpression: (nodes at: 3).
	result falseExpression: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconfigurableUri1: nodes [

	| result |
	result := DartConfigurableUriNode new.
	result uri: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result configurationUris.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconfigurationUri1: nodes [

	| result |
	result := DartConfigurationUriNode new.
	result uriTest: (nodes at: 3).
	result uriConfigured: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconstObjectExpression1: nodes [

	| result |
	result := DartConstObjectExpressionNode new.
	result constructorDesignation: (nodes at: 2).
	result arguments: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconstantConstructorSignature1: nodes [

	| result |
	result := DartConstantConstructorSignatureNode new.
	result constructorName: (nodes at: 2).
	result formalParameterList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconstructorDesignation3: nodes [

	| result |
	result := DartConstructorDesignationNode new.
	result typeName: (nodes at: 1).
	result typeArguments: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconstructorDesignation4: nodes [

	| result |
	result := DartConstructorDesignationNode new.
	result typeName: (nodes at: 1).
	result typeArguments: (nodes at: 2).
	result identifier: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconstructorInvocation1: nodes [

	| result |
	result := DartConstructorInvocationNode new.
	result typeName: (nodes at: 1).
	result typeArguments: (nodes at: 2).
	result arguments: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconstructorInvocation2: nodes [

	| result |
	result := DartConstructorInvocationNode new.
	result typeName: (nodes at: 1).
	result arguments: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconstructorName1: nodes [

	| result |
	result := DartConstructorNameNode new.
	result addObject: (nodes at: 1) to: result typeIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconstructorName2: nodes [

	| result |
	result := DartConstructorNameNode new.
	result addObject: (nodes at: 1) to: result typeIdentifiers.
	result addObject: (nodes at: 3) to: result typeIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForconstructorSignature1: nodes [

	| result |
	result := DartConstructorSignatureNode new.
	result constructorName: (nodes at: 1).
	result formalParameterList: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForcontinueStatement1: nodes [

	| result |
	result := DartContinueStatementNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration13: nodes [

	| result |
	result := DartDeclarationNode new.
	result finalVarOrType: (nodes at: 2).
	result identifierList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration14: nodes [

	| result |
	result := DartDeclarationNode new.
	result finalVarOrType: (nodes at: 3).
	result identifierList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration15: nodes [

	| result |
	result := DartDeclarationNode new.
	result varOrType: (nodes at: 3).
	result identifierList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration16: nodes [

	| result |
	result := DartDeclarationNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration22: nodes [

	| result |
	result := DartDeclarationNode new.
	result staticFinalDeclarationList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration23: nodes [

	| result |
	result := DartDeclarationNode new.
	result staticFinalDeclarationList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration24: nodes [

	| result |
	result := DartDeclarationNode new.
	result initializedIdentifierList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration25: nodes [

	| result |
	result := DartDeclarationNode new.
	result initializedIdentifierList: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration28: nodes [

	| result |
	result := DartDeclarationNode new.
	result identifierList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration29: nodes [

	| result |
	result := DartDeclarationNode new.
	result type: (nodes at: 4).
	result identifierList: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration30: nodes [

	| result |
	result := DartDeclarationNode new.
	result varOrType: (nodes at: 2).
	result initializedIdentifierList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration31: nodes [

	| result |
	result := DartDeclarationNode new.
	result varOrType: (nodes at: 3).
	result initializedIdentifierList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration32: nodes [

	| result |
	result := DartDeclarationNode new.
	result finalToken: (nodes at: 1).
	result initializedIdentifierList: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration33: nodes [

	| result |
	result := DartDeclarationNode new.
	result finalToken: (nodes at: 1).
	result type: (nodes at: 2).
	result initializedIdentifierList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration34: nodes [

	| result |
	result := DartDeclarationNode new.
	result varOrType: (nodes at: 1).
	result initializedIdentifierList: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration35: nodes [

	| result |
	result := DartDeclarationNode new.
	result finalToken: (nodes at: 2).
	result initializedIdentifierList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration36: nodes [

	| result |
	result := DartDeclarationNode new.
	result finalToken: (nodes at: 2).
	result type: (nodes at: 3).
	result initializedIdentifierList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration39: nodes [

	| result |
	result := DartDeclarationNode new.
	result constantConstructorSignature: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration40: nodes [

	| result |
	result := DartDeclarationNode new.
	result constantConstructorSignature: (nodes at: 1).
	result redirection: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration41: nodes [

	| result |
	result := DartDeclarationNode new.
	result constantConstructorSignature: (nodes at: 1).
	result initializers: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration42: nodes [

	| result |
	result := DartDeclarationNode new.
	result constructorSignature: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration43: nodes [

	| result |
	result := DartDeclarationNode new.
	result constructorSignature: (nodes at: 1).
	result redirection: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaration44: nodes [

	| result |
	result := DartDeclarationNode new.
	result constructorSignature: (nodes at: 1).
	result initializers: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaredIdentifier1: nodes [

	| result |
	result := DartDeclaredIdentifierNode new.
	result finalConstVarOrType: (nodes at: 1).
	result declaredIdentifier: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordeclaredIdentifier2: nodes [

	| result |
	result := DartDeclaredIdentifierNode new.
	result finalConstVarOrType: (nodes at: 2).
	result declaredIdentifier: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordefaultCase1: nodes [

	| result |
	result := DartDefaultCaseNode new.
	result addNodes: (nodes at: 1) to: result labels.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordefaultCase2: nodes [

	| result |
	result := DartDefaultCaseNode new.
	result addNodes: (nodes at: 1) to: result labels.
	result statements: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordoStatement1: nodes [

	| result |
	result := DartDoStatementNode new.
	result doStatement: (nodes at: 2).
	result doConditionExpression: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFordottedIdentifierList1: nodes [

	| result |
	result := DartDottedIdentifierListNode new.
	result addNode: (nodes at: 1) to: result identifiers.
	result addNodes: (nodes at: 2) to: result identifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForelement1: nodes [

	| result |
	result := DartElementNode new.
	result expressionElement: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForelement2: nodes [

	| result |
	result := DartElementNode new.
	result mapElement: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForelement3: nodes [

	| result |
	result := DartElementNode new.
	result spreadElement: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForelement4: nodes [

	| result |
	result := DartElementNode new.
	result ifElement: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForelement5: nodes [

	| result |
	result := DartElementNode new.
	result forElement: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForelements1: nodes [

	| result |
	result := DartElementsNode new.
	result element: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result nextElementses.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForenumEntry1: nodes [

	| result |
	result := DartEnumEntryNode new.
	result metadata: (nodes at: 1).
	result addNode: (nodes at: 2) to: result identifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForenumEntry2: nodes [

	| result |
	result := DartEnumEntryNode new.
	result metadata: (nodes at: 1).
	result addNode: (nodes at: 2) to: result identifiers.
	result argumentPart: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForenumEntry3: nodes [

	| result |
	result := DartEnumEntryNode new.
	result metadata: (nodes at: 1).
	result addNode: (nodes at: 2) to: result identifiers.
	result addNode: (nodes at: 4) to: result identifiers.
	result arguments: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForenumEntry4: nodes [

	| result |
	result := DartEnumEntryNode new.
	result metadata: (nodes at: 1).
	result addNode: (nodes at: 2) to: result identifiers.
	result typeArguments: (nodes at: 3).
	result addNode: (nodes at: 5) to: result identifiers.
	result arguments: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForequalityExpression2: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 1) to: result relationalExpressions.
	result addTokens: ((nodes at: 2) at: 1) to: result equalityOperators.
	result
		addNodes: ((nodes at: 2) at: 2)
		to: result relationalExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForequalityExpression3: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addToken: (nodes at: 2) to: result equalityOperators.
	result addNode: (nodes at: 3) to: result relationalExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForexpression1: nodes [

	| result |
	result := nodes at: 3.
	result at: 1 put: (nodes at: 1).
	result at: 2 put: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForexpression2: nodes [

	| result |
	result := Array new: 6.
	result at: 4 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForexpression3: nodes [

	| result |
	result := Array new: 6.
	result at: 5 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForexpression4: nodes [

	| result |
	result := Array new: 6.
	result at: 6 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForexpressionElement1: nodes [

	| result |
	result := DartExpressionElementNode new.
	result expression: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForexpressionList1: nodes [

	| result |
	result := DartExpressionListNode new.
	result firstExpression: (nodes at: 1).
	result addObjects: (nodes at: 2) to: result nextExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfactoryConstructorSignature1: nodes [

	| result |
	result := DartFactoryConstructorSignatureNode new.
	result constructorName: (nodes at: 2).
	result formalParameterList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfactoryConstructorSignature2: nodes [

	| result |
	result := DartFactoryConstructorSignatureNode new.
	result constructorName: (nodes at: 3).
	result formalParameterList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfieldFormalParameter1: nodes [

	| result |
	result := DartFieldFormalParameterNode new.
	result identifier: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfieldFormalParameter2: nodes [

	| result |
	result := DartFieldFormalParameterNode new.
	result identifier: (nodes at: 3).
	result formalParameterPart: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfieldFormalParameter4: nodes [

	| result |
	result := DartFieldFormalParameterNode new.
	result finalConstVarOrType: (nodes at: 1).
	result identifier: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfieldFormalParameter5: nodes [

	| result |
	result := DartFieldFormalParameterNode new.
	result finalConstVarOrType: (nodes at: 1).
	result identifier: (nodes at: 4).
	result formalParameterPart: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfieldInitializer1: nodes [

	| result |
	result := DartFieldInitializerNode new.
	result identifier: (nodes at: 1).
	result initializerExpression: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfieldInitializer2: nodes [

	| result |
	result := DartFieldInitializerNode new.
	result identifier: (nodes at: 3).
	result initializerExpression: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfinallyPart1: nodes [

	| result |
	result := DartFinallyPartNode new.
	result block: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForforElement2: nodes [

	^ nodes at: 4
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForforInitializerStatement2: nodes [

	| result |
	result := Array new: 8.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForforInitializerStatement3: nodes [

	| result |
	result := Array new: 8.
	result at: 3 put: ((nodes at: 1) at: 1).
	result at: 4 put: ((nodes at: 1) at: 2).
	result at: 5 put: ((nodes at: 1) at: 3).
	result at: 6 put: ((nodes at: 1) at: 4).
	result at: 7 put: ((nodes at: 1) at: 5).
	result at: 8 put: ((nodes at: 1) at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForforLoopParts1: nodes [

	| result |
	result := Array new: 14.
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	self add: ((nodes at: 4) at: 1) to: (result at: 3).
	self add: ((nodes at: 4) at: 2) to: (result at: 4).
	self add: ((nodes at: 4) at: 3) to: (result at: 5).
	self add: ((nodes at: 4) at: 4) to: (result at: 6).
	self add: ((nodes at: 4) at: 5) to: (result at: 7).
	self add: ((nodes at: 4) at: 6) to: (result at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForforLoopParts3: nodes [

	| result |
	result := Array new: 14.
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 11 put: ((nodes at: 1) at: 1).
	result at: 12 put: ((nodes at: 1) at: 2).
	self add: ((nodes at: 1) at: 3) to: (result at: 3).
	self add: ((nodes at: 1) at: 4) to: (result at: 4).
	self add: ((nodes at: 1) at: 5) to: (result at: 5).
	self add: ((nodes at: 1) at: 6) to: (result at: 6).
	self add: ((nodes at: 1) at: 7) to: (result at: 7).
	self add: ((nodes at: 1) at: 8) to: (result at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForforLoopParts5: nodes [

	| result |
	result := Array new: 14.
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 7 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 11 put: ((nodes at: 1) at: 1).
	result at: 12 put: ((nodes at: 1) at: 2).
	self add: ((nodes at: 1) at: 3) to: (result at: 3).
	self add: ((nodes at: 1) at: 4) to: (result at: 4).
	self add: ((nodes at: 1) at: 5) to: (result at: 5).
	self add: ((nodes at: 1) at: 6) to: (result at: 6).
	self add: ((nodes at: 1) at: 7) to: (result at: 7).
	self add: ((nodes at: 1) at: 8) to: (result at: 8).
	self add: ((nodes at: 2) at: 1) to: (result at: 3).
	self add: ((nodes at: 2) at: 2) to: (result at: 4).
	self add: ((nodes at: 2) at: 3) to: (result at: 5).
	self add: ((nodes at: 2) at: 4) to: (result at: 6).
	self add: ((nodes at: 2) at: 5) to: (result at: 7).
	self add: ((nodes at: 2) at: 6) to: (result at: 8).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForforStatement1: nodes [

	| result |
	result := DartForStatementNode new.
	result finalConstVarOrType: ((nodes at: 3) at: 1).
	result declaredIdentifier: ((nodes at: 3) at: 2).
	result
		addNodes: ((nodes at: 3) at: 3)
		to: result assignableExpressions.
	result addNodes: ((nodes at: 3) at: 4) to: result assignmentOperators.
	result
		addObjects: ((nodes at: 3) at: 5)
		to: result assignedExpressions.
	result
		addNodes: ((nodes at: 3) at: 6)
		to: result conditionalExpressions.
	result addNodes: ((nodes at: 3) at: 7) to: result cascades.
	result addNodes: ((nodes at: 3) at: 8) to: result throwExpressions.
	result idNotFunction: ((nodes at: 3) at: 9).
	result function: ((nodes at: 3) at: 10).
	result metadata: ((nodes at: 3) at: 11).
	result initializedVariableDeclaration: ((nodes at: 3) at: 12).
	result firstExpression: ((nodes at: 3) at: 13).
	result addObjects: ((nodes at: 3) at: 14) to: result nextExpressions.
	result statement: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForforStatement2: nodes [

	| result |
	result := DartForStatementNode new.
	result finalConstVarOrType: ((nodes at: 4) at: 1).
	result declaredIdentifier: ((nodes at: 4) at: 2).
	result
		addNodes: ((nodes at: 4) at: 3)
		to: result assignableExpressions.
	result addNodes: ((nodes at: 4) at: 4) to: result assignmentOperators.
	result
		addObjects: ((nodes at: 4) at: 5)
		to: result assignedExpressions.
	result
		addNodes: ((nodes at: 4) at: 6)
		to: result conditionalExpressions.
	result addNodes: ((nodes at: 4) at: 7) to: result cascades.
	result addNodes: ((nodes at: 4) at: 8) to: result throwExpressions.
	result idNotFunction: ((nodes at: 4) at: 9).
	result function: ((nodes at: 4) at: 10).
	result metadata: ((nodes at: 4) at: 11).
	result initializedVariableDeclaration: ((nodes at: 4) at: 12).
	result firstExpression: ((nodes at: 4) at: 13).
	result addObjects: ((nodes at: 4) at: 14) to: result nextExpressions.
	result statement: (nodes at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForformalParameterPart1: nodes [

	| result |
	result := DartFormalParameterPartNode new.
	result formalParameterList: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForformalParameterPart2: nodes [

	| result |
	result := DartFormalParameterPartNode new.
	result typeParameters: (nodes at: 1).
	result formalParameterList: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionBody1: nodes [

	| result |
	result := DartFunctionBodyNode new.
	result expression: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionBody2: nodes [

	| result |
	result := DartFunctionBodyNode new.
	result block: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionBody3: nodes [

	| result |
	result := DartAsyncFunctionBodyNode new.
	result expression: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionBody4: nodes [

	| result |
	result := DartAsyncFunctionBodyNode new.
	result block: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionBody5: nodes [

	| result |
	result := DartAsyncFunctionBodyNode new.
	result block: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionExpression1: nodes [

	| result |
	result := DartFunctionExpressionNode new.
	result formalParameterPart: (nodes at: 1).
	result functionExpressionBody: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionFormalParameter1: nodes [

	| result |
	result := DartFunctionFormalParameterNode new.
	result identifierNotFUNCTION: (nodes at: 1).
	result formalParameterPart: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionFormalParameter3: nodes [

	| result |
	result := DartFunctionFormalParameterNode new.
	result Type: (nodes at: 1).
	result identifierNotFUNCTION: (nodes at: 2).
	result formalParameterPart: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionFormalParameter5: nodes [

	| result |
	result := DartFunctionFormalParameterNode new.
	result identifierNotFUNCTION: (nodes at: 2).
	result formalParameterPart: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionFormalParameter7: nodes [

	| result |
	result := DartFunctionFormalParameterNode new.
	result Type: (nodes at: 2).
	result identifierNotFUNCTION: (nodes at: 3).
	result formalParameterPart: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionPrefix1: nodes [

	| result |
	result := DartFunctionPrefixNode new.
	result type: (nodes at: 1).
	result identifier: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionPrimaryBody3: nodes [

	^ nodes at: 3
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionSignature1: nodes [

	| result |
	result := DartFunctionSignatureNode new.
	result identifierNotFUNCTION: (nodes at: 1).
	result formalParameterPart: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionSignature2: nodes [

	| result |
	result := DartFunctionSignatureNode new.
	result type: (nodes at: 1).
	result identifierNotFUNCTION: (nodes at: 2).
	result formalParameterPart: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionType2: nodes [

	| result |
	result := DartFunctionTypeNode new.
	result typeNotFunction: (nodes at: 1).
	result functionTypeTails: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionTypeAlias1: nodes [

	| result |
	result := DartFunctionTypeAliasNode new.
	result functionPrefix: (nodes at: 1).
	result formalParameterPart: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionTypeTail1: nodes [

	| result |
	result := DartFunctionTypeTailNode new.
	result parameterTypeList: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionTypeTail2: nodes [

	| result |
	result := DartFunctionTypeTailNode new.
	result typeParameters: (nodes at: 2).
	result parameterTypeList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionTypeTails1: nodes [

	| result |
	result := DartFunctionTypeTailsNode new.
	result functionTypeTail: (nodes at: 1).
	result functionTypeTails: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForfunctionTypeTails2: nodes [

	| result |
	result := DartFunctionTypeTailsNode new.
	result functionTypeTail: (nodes at: 1).
	result functionTypeTails: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForgetterSignature1: nodes [

	| result |
	result := DartGetterSignatureNode new.
	result identifier: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForgetterSignature2: nodes [

	| result |
	result := DartGetterSignatureNode new.
	result type: (nodes at: 1).
	result identifier: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForidentifier1: nodes [

	| result |
	result := DartIdentifierNode new.
	result idNotFunction: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForidentifier2: nodes [

	| result |
	result := DartIdentifierNode new.
	result function: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForidentifierList1: nodes [

	| result |
	result := DartIdentifierListNode new.
	result identifier: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result nextIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForifNullExpression2: nodes [

	| result |
	result := DartIfNullExpressionNode new.
	result testNullExpression: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result logicalOrExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForifStatement1: nodes [

	| result |
	result := DartIfStatementNode new.
	result ifConditionalExpression: (nodes at: 3).
	result ifThenStatement: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForifStatement2: nodes [

	| result |
	result := DartIfStatementNode new.
	result ifConditionalExpression: (nodes at: 3).
	result ifThenStatement: (nodes at: 5).
	result elseStatement: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForimportOrExport1: nodes [

	| result |
	result := Array new: 2.
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForimportOrExport2: nodes [

	| result |
	result := Array new: 2.
	result at: 2 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForimportOrExport_1: nodes [

	| result |
	result := Array new: 2.
	result at: 1 put: (OrderedCollection new: 2).
	result at: 2 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForimportOrExport_2: nodes [

	| result |
	result := nodes at: 1.
	self add: ((nodes at: 2) at: 1) to: (result at: 1).
	self add: ((nodes at: 2) at: 2) to: (result at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForimportSpecification1: nodes [

	| result |
	result := DartImportSpecificationNode new.
	result configurableUri: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForimportSpecification2: nodes [

	| result |
	result := DartImportSpecificationNode new.
	result configurableUri: (nodes at: 2).
	result addNode: (nodes at: 4) to: result identifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForimportSpecification3: nodes [

	| result |
	result := DartImportSpecificationNode new.
	result configurableUri: (nodes at: 2).
	result addNode: (nodes at: 5) to: result identifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForinitializedIdentifier1: nodes [

	| result |
	result := DartInitializedIdentifierNode new.
	result identifier: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForinitializedIdentifier2: nodes [

	| result |
	result := DartInitializedIdentifierNode new.
	result identifier: (nodes at: 1).
	result expression: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForinitializedIdentifierList1: nodes [

	| result |
	result := DartInitializedIdentifierListNode new.
	result initializedIdentifier: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result nextInitializedIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForinitializedVariableDeclaration1: nodes [

	| result |
	result := DartInitializedVariableDeclarationNode new.
	result declaredIdentifier: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result initializedIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForinitializedVariableDeclaration2: nodes [

	| result |
	result := DartInitializedVariableDeclarationNode new.
	result declaredIdentifier: (nodes at: 1).
	result initializeExpression: (nodes at: 3).
	result addNodes: (nodes at: 4) to: result initializedIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForinitializerExpression1: nodes [

	| result |
	result := DartInitializerExpressionNode new.
	result conditionalExpression: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForinitializerExpression2: nodes [

	| result |
	result := DartInitializerExpressionNode new.
	result cascade: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForinitializers1: nodes [

	| result |
	result := DartInitializersNode new.
	result initializerListEntry: (nodes at: 2).
	result addObjects: (nodes at: 3) to: result InitializerListEntries.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlabel1: nodes [

	| result |
	result := DartLabelNode new.
	result LabelIdentifier: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlibraryDefinition1: nodes [

	| result |
	result := DartLibraryDefinitionNode new.
	result addNodes: ((nodes at: 1) at: 1) to: result libraryImports.
	result addNodes: ((nodes at: 1) at: 2) to: result libraryExports.
	result addNodes: ((nodes at: 3) at: 1) to: result classDeclarations.
	result addTokens: ((nodes at: 3) at: 2) to: result typeIdentifiers.
	result addNodes: ((nodes at: 3) at: 3) to: result types.
	result addNodes: ((nodes at: 3) at: 4) to: result typeParameterses.
	result
		addTokens: ((nodes at: 3) at: 5)
		to: result identifierNotFUNCTIONs.
	result
		addNodes: ((nodes at: 3) at: 6)
		to: result formalParameterParts.
	result addNodes: ((nodes at: 3) at: 7) to: result identifiers.
	result
		addObjects: ((nodes at: 3) at: 8)
		to: result formalParameterLists.
	result addObjects: ((nodes at: 3) at: 9) to: result expressions.
	result addNodes: ((nodes at: 3) at: 10) to: result blocks.
	result
		addNodes: ((nodes at: 3) at: 11)
		to: result staticFinalDeclarations.
	result addNodes: ((nodes at: 3) at: 12) to: result functionTypes.
	result addObjects: ((nodes at: 3) at: 13) to: result typeNotFunctions.
	result
		addNodes: ((nodes at: 3) at: 14)
		to: result initializedIdentifiers.
	result addTokens: ((nodes at: 3) at: 15) to: result idNotFunctions.
	result addTokens: ((nodes at: 3) at: 16) to: result functions.
	result
		addNodes: ((nodes at: 3) at: 17)
		to: result assignableExpressions.
	result
		addNodes: ((nodes at: 3) at: 18)
		to: result assignmentOperators.
	result
		addObjects: ((nodes at: 3) at: 19)
		to: result assignedExpressions.
	result
		addNodes: ((nodes at: 3) at: 20)
		to: result conditionalExpressions.
	result addNodes: ((nodes at: 3) at: 21) to: result cascades.
	result addNodes: ((nodes at: 3) at: 22) to: result throwExpressions.
	result
		addObjects: ((nodes at: 3) at: 23)
		to: result typeNotVoidNotFunctions.
	result addNodes: ((nodes at: 3) at: 24) to: result typeParameters.
	result addObjects: ((nodes at: 3) at: 25) to: result metadatas.
	result addObjects: ((nodes at: 3) at: 26) to: result argumentParts.
	result addObjects: ((nodes at: 3) at: 27) to: result argumentses.
	result addNodes: ((nodes at: 3) at: 28) to: result typeArgumentses.
	result addNodes: ((nodes at: 3) at: 29) to: result functionPrefixes.
	result addNodes: ((nodes at: 3) at: 30) to: result nextIdentifiers.
	result
		addNodes: ((nodes at: 3) at: 31)
		to: result nextStaticFinalDeclarations.
	result
		addNodes: ((nodes at: 3) at: 32)
		to: result nextInitializedIdentifiers.
	result addNodes: ((nodes at: 3) at: 33) to: result methodSignatures.
	result addNodes: ((nodes at: 3) at: 34) to: result functionBodies.
	result addNodes: ((nodes at: 3) at: 35) to: result declarations.
	result
		addObjects: ((nodes at: 3) at: 36)
		to: result nextTypeNotVoidNotFunctions.
	result addNodes: ((nodes at: 3) at: 37) to: result nextTypeParameters.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlibraryDefinition3: nodes [

	| result |
	result := DartLibraryDefinitionNode new.
	result addNodes: ((nodes at: 2) at: 1) to: result libraryImports.
	result addNodes: ((nodes at: 2) at: 2) to: result libraryExports.
	result addNodes: ((nodes at: 4) at: 1) to: result classDeclarations.
	result addTokens: ((nodes at: 4) at: 2) to: result typeIdentifiers.
	result addNodes: ((nodes at: 4) at: 3) to: result types.
	result addNodes: ((nodes at: 4) at: 4) to: result typeParameterses.
	result
		addTokens: ((nodes at: 4) at: 5)
		to: result identifierNotFUNCTIONs.
	result
		addNodes: ((nodes at: 4) at: 6)
		to: result formalParameterParts.
	result addNodes: ((nodes at: 4) at: 7) to: result identifiers.
	result
		addObjects: ((nodes at: 4) at: 8)
		to: result formalParameterLists.
	result addObjects: ((nodes at: 4) at: 9) to: result expressions.
	result addNodes: ((nodes at: 4) at: 10) to: result blocks.
	result
		addNodes: ((nodes at: 4) at: 11)
		to: result staticFinalDeclarations.
	result addNodes: ((nodes at: 4) at: 12) to: result functionTypes.
	result addObjects: ((nodes at: 4) at: 13) to: result typeNotFunctions.
	result
		addNodes: ((nodes at: 4) at: 14)
		to: result initializedIdentifiers.
	result addTokens: ((nodes at: 4) at: 15) to: result idNotFunctions.
	result addTokens: ((nodes at: 4) at: 16) to: result functions.
	result
		addNodes: ((nodes at: 4) at: 17)
		to: result assignableExpressions.
	result
		addNodes: ((nodes at: 4) at: 18)
		to: result assignmentOperators.
	result
		addObjects: ((nodes at: 4) at: 19)
		to: result assignedExpressions.
	result
		addNodes: ((nodes at: 4) at: 20)
		to: result conditionalExpressions.
	result addNodes: ((nodes at: 4) at: 21) to: result cascades.
	result addNodes: ((nodes at: 4) at: 22) to: result throwExpressions.
	result
		addObjects: ((nodes at: 4) at: 23)
		to: result typeNotVoidNotFunctions.
	result addNodes: ((nodes at: 4) at: 24) to: result typeParameters.
	result addObjects: ((nodes at: 4) at: 25) to: result metadatas.
	result addObjects: ((nodes at: 4) at: 26) to: result argumentParts.
	result addObjects: ((nodes at: 4) at: 27) to: result argumentses.
	result addNodes: ((nodes at: 4) at: 28) to: result typeArgumentses.
	result addNodes: ((nodes at: 4) at: 29) to: result functionPrefixes.
	result addNodes: ((nodes at: 4) at: 30) to: result nextIdentifiers.
	result
		addNodes: ((nodes at: 4) at: 31)
		to: result nextStaticFinalDeclarations.
	result
		addNodes: ((nodes at: 4) at: 32)
		to: result nextInitializedIdentifiers.
	result addNodes: ((nodes at: 4) at: 33) to: result methodSignatures.
	result addNodes: ((nodes at: 4) at: 34) to: result functionBodies.
	result addNodes: ((nodes at: 4) at: 35) to: result declarations.
	result
		addObjects: ((nodes at: 4) at: 36)
		to: result nextTypeNotVoidNotFunctions.
	result addNodes: ((nodes at: 4) at: 37) to: result nextTypeParameters.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlibraryDefinition4: nodes [

	| result |
	result := DartLibraryDefinitionNode new.
	result addNodes: ((nodes at: 3) at: 1) to: result libraryImports.
	result addNodes: ((nodes at: 3) at: 2) to: result libraryExports.
	result addNodes: ((nodes at: 5) at: 1) to: result classDeclarations.
	result addTokens: ((nodes at: 5) at: 2) to: result typeIdentifiers.
	result addNodes: ((nodes at: 5) at: 3) to: result types.
	result addNodes: ((nodes at: 5) at: 4) to: result typeParameterses.
	result
		addTokens: ((nodes at: 5) at: 5)
		to: result identifierNotFUNCTIONs.
	result
		addNodes: ((nodes at: 5) at: 6)
		to: result formalParameterParts.
	result addNodes: ((nodes at: 5) at: 7) to: result identifiers.
	result
		addObjects: ((nodes at: 5) at: 8)
		to: result formalParameterLists.
	result addObjects: ((nodes at: 5) at: 9) to: result expressions.
	result addNodes: ((nodes at: 5) at: 10) to: result blocks.
	result
		addNodes: ((nodes at: 5) at: 11)
		to: result staticFinalDeclarations.
	result addNodes: ((nodes at: 5) at: 12) to: result functionTypes.
	result addObjects: ((nodes at: 5) at: 13) to: result typeNotFunctions.
	result
		addNodes: ((nodes at: 5) at: 14)
		to: result initializedIdentifiers.
	result addTokens: ((nodes at: 5) at: 15) to: result idNotFunctions.
	result addTokens: ((nodes at: 5) at: 16) to: result functions.
	result
		addNodes: ((nodes at: 5) at: 17)
		to: result assignableExpressions.
	result
		addNodes: ((nodes at: 5) at: 18)
		to: result assignmentOperators.
	result
		addObjects: ((nodes at: 5) at: 19)
		to: result assignedExpressions.
	result
		addNodes: ((nodes at: 5) at: 20)
		to: result conditionalExpressions.
	result addNodes: ((nodes at: 5) at: 21) to: result cascades.
	result addNodes: ((nodes at: 5) at: 22) to: result throwExpressions.
	result
		addObjects: ((nodes at: 5) at: 23)
		to: result typeNotVoidNotFunctions.
	result addNodes: ((nodes at: 5) at: 24) to: result typeParameters.
	result addObjects: ((nodes at: 5) at: 25) to: result metadatas.
	result addObjects: ((nodes at: 5) at: 26) to: result argumentParts.
	result addObjects: ((nodes at: 5) at: 27) to: result argumentses.
	result addNodes: ((nodes at: 5) at: 28) to: result typeArgumentses.
	result addNodes: ((nodes at: 5) at: 29) to: result functionPrefixes.
	result addNodes: ((nodes at: 5) at: 30) to: result nextIdentifiers.
	result
		addNodes: ((nodes at: 5) at: 31)
		to: result nextStaticFinalDeclarations.
	result
		addNodes: ((nodes at: 5) at: 32)
		to: result nextInitializedIdentifiers.
	result addNodes: ((nodes at: 5) at: 33) to: result methodSignatures.
	result addNodes: ((nodes at: 5) at: 34) to: result functionBodies.
	result addNodes: ((nodes at: 5) at: 35) to: result declarations.
	result
		addObjects: ((nodes at: 5) at: 36)
		to: result nextTypeNotVoidNotFunctions.
	result addNodes: ((nodes at: 5) at: 37) to: result nextTypeParameters.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlibraryDefinition8: nodes [

	| result |
	result := DartLibraryDefinitionNode new.
	result addNodes: ((nodes at: 4) at: 1) to: result libraryImports.
	result addNodes: ((nodes at: 4) at: 2) to: result libraryExports.
	result addNodes: ((nodes at: 6) at: 1) to: result classDeclarations.
	result addTokens: ((nodes at: 6) at: 2) to: result typeIdentifiers.
	result addNodes: ((nodes at: 6) at: 3) to: result types.
	result addNodes: ((nodes at: 6) at: 4) to: result typeParameterses.
	result
		addTokens: ((nodes at: 6) at: 5)
		to: result identifierNotFUNCTIONs.
	result
		addNodes: ((nodes at: 6) at: 6)
		to: result formalParameterParts.
	result addNodes: ((nodes at: 6) at: 7) to: result identifiers.
	result
		addObjects: ((nodes at: 6) at: 8)
		to: result formalParameterLists.
	result addObjects: ((nodes at: 6) at: 9) to: result expressions.
	result addNodes: ((nodes at: 6) at: 10) to: result blocks.
	result
		addNodes: ((nodes at: 6) at: 11)
		to: result staticFinalDeclarations.
	result addNodes: ((nodes at: 6) at: 12) to: result functionTypes.
	result addObjects: ((nodes at: 6) at: 13) to: result typeNotFunctions.
	result
		addNodes: ((nodes at: 6) at: 14)
		to: result initializedIdentifiers.
	result addTokens: ((nodes at: 6) at: 15) to: result idNotFunctions.
	result addTokens: ((nodes at: 6) at: 16) to: result functions.
	result
		addNodes: ((nodes at: 6) at: 17)
		to: result assignableExpressions.
	result
		addNodes: ((nodes at: 6) at: 18)
		to: result assignmentOperators.
	result
		addObjects: ((nodes at: 6) at: 19)
		to: result assignedExpressions.
	result
		addNodes: ((nodes at: 6) at: 20)
		to: result conditionalExpressions.
	result addNodes: ((nodes at: 6) at: 21) to: result cascades.
	result addNodes: ((nodes at: 6) at: 22) to: result throwExpressions.
	result
		addObjects: ((nodes at: 6) at: 23)
		to: result typeNotVoidNotFunctions.
	result addNodes: ((nodes at: 6) at: 24) to: result typeParameters.
	result addObjects: ((nodes at: 6) at: 25) to: result metadatas.
	result addObjects: ((nodes at: 6) at: 26) to: result argumentParts.
	result addObjects: ((nodes at: 6) at: 27) to: result argumentses.
	result addNodes: ((nodes at: 6) at: 28) to: result typeArgumentses.
	result addNodes: ((nodes at: 6) at: 29) to: result functionPrefixes.
	result addNodes: ((nodes at: 6) at: 30) to: result nextIdentifiers.
	result
		addNodes: ((nodes at: 6) at: 31)
		to: result nextStaticFinalDeclarations.
	result
		addNodes: ((nodes at: 6) at: 32)
		to: result nextInitializedIdentifiers.
	result addNodes: ((nodes at: 6) at: 33) to: result methodSignatures.
	result addNodes: ((nodes at: 6) at: 34) to: result functionBodies.
	result addNodes: ((nodes at: 6) at: 35) to: result declarations.
	result
		addObjects: ((nodes at: 6) at: 36)
		to: result nextTypeNotVoidNotFunctions.
	result addNodes: ((nodes at: 6) at: 37) to: result nextTypeParameters.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlibraryExport1: nodes [

	| result |
	result := DartExportDeclarationNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlibraryImport1: nodes [

	| result |
	result := DartLibraryImportNode new.
	result metadata: (nodes at: 1).
	result importSpecification: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlibraryName1: nodes [

	| result |
	result := DartLibraryNameNode new.
	result metadata: (nodes at: 1).
	result dottedIdentifierList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlistLiteral1: nodes [

	| result |
	result := DartListLiteralNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlistLiteral2: nodes [

	| result |
	result := DartListLiteralNode new.
	result elements: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlistLiteral3: nodes [

	| result |
	result := DartListLiteralNode new.
	result typeArguments: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlistLiteral4: nodes [

	| result |
	result := DartListLiteralNode new.
	result typeArguments: (nodes at: 1).
	result elements: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlistLiteral6: nodes [

	| result |
	result := DartListLiteralNode new.
	result elements: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlistLiteral7: nodes [

	| result |
	result := DartListLiteralNode new.
	result typeArguments: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlistLiteral8: nodes [

	| result |
	result := DartListLiteralNode new.
	result typeArguments: (nodes at: 2).
	result elements: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlocalFunctionDeclaration1: nodes [

	| result |
	result := DartLocalFunctionDeclarationNode new.
	result metadata: (nodes at: 1).
	result functionSignature: (nodes at: 2).
	result functionBody: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlocalVariableDeclaration1: nodes [

	| result |
	result := DartLocalVariableDeclarationNode new.
	result metadata: (nodes at: 1).
	result initializedVariableDeclaration: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlogicalAndExpression2: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 1) to: result equalityExpressions.
	result addNodes: (nodes at: 2) to: result equalityExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForlogicalOrExpression2: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 1) to: result logicalAndExpressions.
	result addNodes: (nodes at: 2) to: result logicalAndExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormetadatum1: nodes [

	| result |
	result := DartMetadatumNode new.
	result constructorDesignation: (nodes at: 1).
	result arguments: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormethodSignature1: nodes [

	| result |
	result := DartMethodSignatureNode new.
	result constructorSignature: (nodes at: 1).
	result initializers: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormethodSignature3: nodes [

	| result |
	result := DartMethodSignatureNode new.
	result functionSignature: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormethodSignature4: nodes [

	| result |
	result := DartMethodSignatureNode new.
	result functionSignature: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormethodSignature5: nodes [

	| result |
	result := DartMethodSignatureNode new.
	result getterSignature: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormethodSignature6: nodes [

	| result |
	result := DartMethodSignatureNode new.
	result getterSignature: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormethodSignature7: nodes [

	| result |
	result := DartMethodSignatureNode new.
	result setterSignature: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormethodSignature8: nodes [

	| result |
	result := DartMethodSignatureNode new.
	result setterSignature: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormixinApplication1: nodes [

	| result |
	result := DartMixinApplicationNode new.
	result typeNotVoidNotFunction: (nodes at: 1).
	result mixins: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormixinApplication2: nodes [

	| result |
	result := DartMixinApplicationNode new.
	result typeNotVoidNotFunction: (nodes at: 1).
	result mixins: (nodes at: 2).
	result interfaces: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormixinApplicationClass1: nodes [

	| result |
	result := DartMixinApplicationClassNode new.
	result typeWithParameters: (nodes at: 1).
	result mixinApplication: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormultiLineString1: nodes [

	| result |
	result := DartMultiLineStringNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormultiLineString3: nodes [

	| result |
	result := DartMultiLineStringNode new.
	result firstExpression: (nodes at: 2).
	result addObjects: (nodes at: 3) to: result nextExpressionses.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormultiplicativeExpression2: nodes [

	| result |
	result := DartMultiplicativeExpressionNode new.
	result addNode: (nodes at: 1) to: result unaryExpressions.
	result
		addTokens: ((nodes at: 2) at: 1)
		to: result multiplicativeOperators.
	result addNodes: ((nodes at: 2) at: 2) to: result unaryExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFormultiplicativeExpression3: nodes [

	| result |
	result := DartMultiplicativeExpressionNode new.
	result addToken: (nodes at: 2) to: result multiplicativeOperators.
	result addNode: (nodes at: 3) to: result unaryExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornamedArgument1: nodes [

	| result |
	result := DartNamedArgumentNode new.
	result label: (nodes at: 1).
	result expression: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornamedFormalParameters1: nodes [

	| result |
	result := DartNamedFormalParametersNode new.
	result defaultNamedParameter: (nodes at: 2).
	result addNodes: (nodes at: 3) to: result nextDefaultNamedParameters.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornamedParameterType1: nodes [

	| result |
	result := DartNamedParameterTypeNode new.
	result metadata: (nodes at: 1).
	result typedIdentifier: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornamedParameterType2: nodes [

	| result |
	result := DartNamedParameterTypeNode new.
	result metadata: (nodes at: 1).
	result typedIdentifier: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornamedParameterTypes1: nodes [

	| result |
	result := DartNamedParameterTypesNode new.
	result namedParameterType: (nodes at: 2).
	result addNodes: (nodes at: 3) to: result nextNamedParameterTypes.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornewExpression1: nodes [

	| result |
	result := DartNewExpressionNode new.
	result constructorDesignation: (nodes at: 1).
	result constructorArguments: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornewExpression2: nodes [

	| result |
	result := DartNewExpressionNode new.
	result constructorDesignation: (nodes at: 2).
	result constructorArguments: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornormalFormalParameter1: nodes [

	| result |
	result := DartNormalFormalParameterNode new.
	result metadata: (nodes at: 1).
	result normalFormalParameterNoMetadata: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornormalFormalParameters1: nodes [

	| result |
	result := DartNormalFormalParametersNode new.
	result normalFormalParameter: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result nextNormalFormalParameters.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornormalParameterType1: nodes [

	| result |
	result := DartNormalParameterTypeNode new.
	result metadata: (nodes at: 1).
	result typedIdentifier: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornormalParameterType2: nodes [

	| result |
	result := DartNormalParameterTypeNode new.
	result metadata: (nodes at: 1).
	result type: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornormalParameterTypes1: nodes [

	| result |
	result := DartNormalParameterTypesNode new.
	result normalParameterType: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result nextNormalParameterTypes.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornullLiteral1: nodes [

	| result |
	result := DartNullLiteralNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornumericLiteral1: nodes [

	| result |
	result := DartNumericLiteralNode new.
	result number: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFornumericLiteral2: nodes [

	| result |
	result := DartNumericLiteralNode new.
	result hexNumber: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForonPart1: nodes [

	| result |
	result := DartOnPartNode new.
	result catchPart: (nodes at: 1).
	result block: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForonPart2: nodes [

	| result |
	result := DartOnPartNode new.
	result typeNotVoid: (nodes at: 2).
	result block: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForonPart3: nodes [

	| result |
	result := DartOnPartNode new.
	result typeNotVoid: (nodes at: 2).
	result catchPart: (nodes at: 3).
	result block: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForoperatorSignature1: nodes [

	| result |
	result := DartOperatorSignatureNode new.
	result operator: (nodes at: 2).
	result formalParameterList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForoperatorSignature2: nodes [

	| result |
	result := DartOperatorSignatureNode new.
	result type: (nodes at: 1).
	result operator: (nodes at: 3).
	result formalParameterList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForoptionalPositionalFormalParameters1: nodes [

	| result |
	result := DartOptionalPositionalFormalParametersNode new.
	result addNode: (nodes at: 2) to: result defaultFormalParameters.
	result addNodes: (nodes at: 3) to: result defaultFormalParameters.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForpartDirective1: nodes [

	| result |
	result := DartPartDirectiveNode new.
	result metadata: (nodes at: 1).
	result uri: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForpostfixExpression1: nodes [

	| result |
	result := DartPostfixExpressionNode new.
	result assignableExpression: (nodes at: 1).
	result postfixOperator: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForpostfixExpression2: nodes [

	| result |
	result := DartPostfixExpressionNode new.
	result primary: (nodes at: 1).
	result addObjects: (nodes at: 2) to: result selectors.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForprimary11: nodes [

	| result |
	result := DartPrimaryNode new.
	result parenthesisExpression: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForprimary2: nodes [

	| result |
	result := DartPrimaryNode new.
	result unconditionalAssignableSelector: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForprimary3: nodes [

	| result |
	result := DartPrimaryNode new.
	result argumentPart: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForqualifiedName1: nodes [

	| result |
	result := DartQualifiedNameNode new.
	result addToken: (nodes at: 1) to: result typeIdentifiers.
	result identifier: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForqualifiedName2: nodes [

	| result |
	result := DartQualifiedNameNode new.
	result addToken: (nodes at: 1) to: result typeIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForqualifiedName3: nodes [

	| result |
	result := DartQualifiedNameNode new.
	result addToken: (nodes at: 1) to: result typeIdentifiers.
	result addToken: (nodes at: 3) to: result typeIdentifiers.
	result identifier: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForqualifiedName4: nodes [

	| result |
	result := DartQualifiedNameNode new.
	result addToken: (nodes at: 1) to: result typeIdentifiers.
	result addToken: (nodes at: 3) to: result typeIdentifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForredirectingFactoryConstructorSignature1: nodes [

	| result |
	result := DartRedirectingFactoryConstructorSignatureNode new.
	result constructorName: (nodes at: 2).
	result formalParameterList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForredirectingFactoryConstructorSignature2: nodes [

	| result |
	result := DartRedirectingFactoryConstructorSignatureNode new.
	result constructorName: (nodes at: 3).
	result formalParameterList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForredirection1: nodes [

	| result |
	result := DartRedirectionNode new.
	result arguments: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForredirection2: nodes [

	| result |
	result := DartRedirectionNode new.
	result identifier: (nodes at: 4).
	result arguments: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForredirection3: nodes [

	| result |
	result := DartRedirectionNode new.
	result arguments: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForrelationalExpression2: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 1) to: result bitwiseOrExpressions.
	result addTokens: ((nodes at: 2) at: 1) to: result typeTests.
	result addTokens: ((nodes at: 2) at: 2) to: result typeCasts.
	result
		addTokens: ((nodes at: 2) at: 3)
		to: result relationalOperators.
	result
		addNodes: ((nodes at: 2) at: 4)
		to: result bitwiseOrExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForrelationalExpression3: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addToken: (nodes at: 2) to: result relationalOperators.
	result addNode: (nodes at: 3) to: result bitwiseOrExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForrethrowStatement1: nodes [

	| result |
	result := DartRethrowStatementNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForreturnStatement1: nodes [

	| result |
	result := DartReturnStatementNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForreturnStatement2: nodes [

	| result |
	result := DartReturnStatementNode new.
	result returnExpression: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsetOrMapLiteral1: nodes [

	| result |
	result := DartSetOrMapLiteralNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsetOrMapLiteral2: nodes [

	| result |
	result := DartSetOrMapLiteralNode new.
	result elements: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsetOrMapLiteral3: nodes [

	| result |
	result := DartSetOrMapLiteralNode new.
	result typeArguments: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsetOrMapLiteral4: nodes [

	| result |
	result := DartSetOrMapLiteralNode new.
	result typeArguments: (nodes at: 1).
	result elements: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsetOrMapLiteral6: nodes [

	| result |
	result := DartSetOrMapLiteralNode new.
	result elements: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsetOrMapLiteral7: nodes [

	| result |
	result := DartSetOrMapLiteralNode new.
	result typeArguments: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsetOrMapLiteral8: nodes [

	| result |
	result := DartSetOrMapLiteralNode new.
	result typeArguments: (nodes at: 2).
	result elements: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsetterSignature1: nodes [

	| result |
	result := DartSetterSignatureNode new.
	result identifier: (nodes at: 2).
	result formalParameterList: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsetterSignature2: nodes [

	| result |
	result := DartSetterSignatureNode new.
	result type: (nodes at: 1).
	result identifier: (nodes at: 3).
	result formalParameterList: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForshiftExpression2: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addNode: (nodes at: 1) to: result additiveExpressions.
	result addTokens: ((nodes at: 2) at: 1) to: result shiftOperators.
	result addNodes: ((nodes at: 2) at: 2) to: result additiveExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForshiftExpression3: nodes [

	| result |
	result := DartBinaryExpressionNode new.
	result addToken: (nodes at: 2) to: result shiftOperators.
	result addNode: (nodes at: 3) to: result additiveExpressions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsingleLineString1: nodes [

	| result |
	result := DartSingleLineStringNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsingleLineString3: nodes [

	| result |
	result := DartSingleLineStringNode new.
	result firstExpression: (nodes at: 2).
	result addObjects: (nodes at: 3) to: result nextExpressionses.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForstatement1: nodes [

	| result |
	result := DartSingleStatementNode new.
	result addNodes: (nodes at: 1) to: result labels.
	result nonLabelledStatement: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForstatements1: nodes [

	| result |
	result := DartStatementsNode new.
	result addNode: (nodes at: 1) to: result statements.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForstatements2: nodes [

	| result |
	result := nodes at: 1.
	result addNode: (nodes at: 2) to: result statements.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForstaticFinalDeclaration1: nodes [

	| result |
	result := DartStaticFinalDeclarationNode new.
	result identifier: (nodes at: 1).
	result expression: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForstaticFinalDeclarationList1: nodes [

	| result |
	result := DartStaticFinalDeclarationListNode new.
	result staticFinalDeclaration: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result nextStaticFinalDeclarations.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForstringLiteral1: nodes [

	| result |
	result := DartStringLiteralNode new.
	result addNodes: ((nodes at: 1) at: 1) to: result multiLineStrings.
	result addNodes: ((nodes at: 1) at: 2) to: result singleLineStrings.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForswitchCase1: nodes [

	| result |
	result := DartSwitchCaseNode new.
	result addNodes: (nodes at: 1) to: result labels.
	result expression: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForswitchCase2: nodes [

	| result |
	result := DartSwitchCaseNode new.
	result addNodes: (nodes at: 1) to: result labels.
	result expression: (nodes at: 3).
	result statements: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForswitchStatement1: nodes [

	| result |
	result := DartSwitchStatementNode new.
	result switchCaseExpression: (nodes at: 3).
	result addNodes: (nodes at: 6) to: result caseses.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForswitchStatement2: nodes [

	| result |
	result := DartSwitchStatementNode new.
	result switchCaseExpression: (nodes at: 3).
	result addNodes: (nodes at: 6) to: result caseses.
	result defaultCase: (nodes at: 7).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsymbolLiteral1: nodes [

	| result |
	result := DartSymbolLiteralNode new.
	result operator: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsymbolLiteral2: nodes [

	| result |
	result := DartSymbolLiteralNode new.
	result addNode: (nodes at: 2) to: result identifiers.
	result addNodes: (nodes at: 3) to: result identifiers.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForsymbolLiteral3: nodes [

	| result |
	result := DartSymbolLiteralNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForthisExpression1: nodes [

	| result |
	result := DartThisExpressionNode new.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForthrowExpression1: nodes [

	| result |
	result := DartThrowExpressionNode new.
	result throwExpression: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelDefinition1: nodes [

	| result |
	result := Array new: 37.
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 1 put: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelDefinition20: nodes [

	| result |
	result := Array new: 37.
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: ((nodes at: 4) at: 1).
	result at: 33 put: ((nodes at: 4) at: 2).
	result at: 34 put: ((nodes at: 4) at: 3).
	result at: 35 put: ((nodes at: 4) at: 4).
	result at: 36 put: ((nodes at: 4) at: 5).
	result at: 37 put: ((nodes at: 4) at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelDefinition22: nodes [

	| result |
	result := Array new: 37.
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	result at: 32 put: ((nodes at: 5) at: 1).
	result at: 33 put: ((nodes at: 5) at: 2).
	result at: 34 put: ((nodes at: 5) at: 3).
	result at: 35 put: ((nodes at: 5) at: 4).
	result at: 36 put: ((nodes at: 5) at: 5).
	result at: 37 put: ((nodes at: 5) at: 6).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortopLevelDefinition2: nodes [

	| result |
	result := Array new: 37.
	result at: 2 put: (OrderedCollection new: 2).
	result at: 3 put: (OrderedCollection new: 2).
	result at: 4 put: (OrderedCollection new: 2).
	result at: 5 put: (OrderedCollection new: 2).
	result at: 6 put: (OrderedCollection new: 2).
	result at: 8 put: (OrderedCollection new: 2).
	result at: 13 put: (OrderedCollection new: 2).
	result at: 14 put: (OrderedCollection new: 2).
	result at: 15 put: (OrderedCollection new: 2).
	result at: 16 put: (OrderedCollection new: 2).
	result at: 17 put: (OrderedCollection new: 2).
	result at: 25 put: (OrderedCollection new: 2).
	result at: 26 put: (OrderedCollection new: 2).
	result at: 29 put: (OrderedCollection new: 2).
	result at: 31 put: (OrderedCollection new: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortryStatement1: nodes [

	| result |
	result := DartTryStatementNode new.
	result block: (nodes at: 2).
	result onParts: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortryStatement2: nodes [

	| result |
	result := DartTryStatementNode new.
	result block: (nodes at: 2).
	result onParts: (nodes at: 3).
	result finallyPart: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortryStatement3: nodes [

	| result |
	result := DartTryStatementNode new.
	result block: (nodes at: 2).
	result finallyPart: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortype1: nodes [

	| result |
	result := DartTypeNode new.
	result functionType: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortype3: nodes [

	| result |
	result := DartTypeNode new.
	result typeNotFunction: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeAlias1: nodes [

	| result |
	result := DartTypeAliasNode new.
	result typeIdentifier: (nodes at: 2).
	result type: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeAlias2: nodes [

	| result |
	result := DartTypeAliasNode new.
	result typeIdentifier: (nodes at: 2).
	result typeParameters: (nodes at: 3).
	result type: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeList1: nodes [

	| result |
	result := DartTypeListNode new.
	result type: (nodes at: 1).
	result addNodes: (nodes at: 2) to: result nextTypes.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeName1: nodes [

	| result |
	result := DartTypeNameNode new.
	result typeIdentifier: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeName2: nodes [

	| result |
	result := DartTypeNameNode new.
	result typeIdentifier: (nodes at: 1).
	result followingTypeIdentifier: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeNotVoidNotFunctionList1: nodes [

	| result |
	result := DartTypeNotVoidNotFunctionListNode new.
	result typeNotVoidNotFunction: (nodes at: 1).
	result
		addObjects: (nodes at: 2)
		to: result nextTypeNotVoidNotFunctions.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeParameter1: nodes [

	| result |
	result := DartTypeParameterNode new.
	result metadata: (nodes at: 1).
	result typeIdentifier: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeParameter2: nodes [

	| result |
	result := DartTypeParameterNode new.
	result metadata: (nodes at: 1).
	result typeIdentifier: (nodes at: 2).
	result typeNotVoid: (nodes at: 4).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeParameters1: nodes [

	| result |
	result := DartTypeParametersNode new.
	result typeParameter: (nodes at: 2).
	result addNodes: (nodes at: 3) to: result nextTypeParameters.
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypeWithParameters1: nodes [

	| result |
	result := DartTypeNode new.
	result typeIdentifier: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionFortypedIdentifier1: nodes [

	| result |
	result := DartTypedIdentifierNode new.
	result type: (nodes at: 1).
	result identifier: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForunaryExpression1: nodes [

	| result |
	result := DartUnaryExpressionNode new.
	result prefixOperator: (nodes at: 1).
	result unaryExpression: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForunaryExpression4: nodes [

	| result |
	result := DartUnaryExpressionNode new.
	result minusOperator: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForunaryExpression5: nodes [

	| result |
	result := DartUnaryExpressionNode new.
	result tildeOperator: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForunaryExpression6: nodes [

	| result |
	result := DartUnaryExpressionNode new.
	result incrementOperator: (nodes at: 1).
	result assignableExpression: (nodes at: 2).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForuri1: nodes [

	| result |
	result := DartUriNode new.
	result stringLiteralWithoutInterpolation: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForuriTest1: nodes [

	| result |
	result := DartUriTestNode new.
	result dottedIdentifierList: (nodes at: 1).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForuriTest2: nodes [

	| result |
	result := DartUriTestNode new.
	result dottedIdentifierList: (nodes at: 1).
	result stringLiteral: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForwhileStatement1: nodes [

	| result |
	result := DartWhileStatementNode new.
	result whileConditionExpression: (nodes at: 3).
	result whileStatement: (nodes at: 5).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForyieldEachStatement1: nodes [

	| result |
	result := DartYieldEachStatementNode new.
	result yieldEachExpression: (nodes at: 3).
	^ result
]

{ #category : #'generated-reduction actions' }
DartParser >> reduceActionForyieldStatement1: nodes [

	| result |
	result := DartYieldStatementNode new.
	result yieldExpression: (nodes at: 2).
	^ result
]
