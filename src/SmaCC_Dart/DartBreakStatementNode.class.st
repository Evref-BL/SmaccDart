Class {
	#name : #DartBreakStatementNode,
	#superclass : #DartStatementNode,
	#instVars : [
		'breakToken',
		'semicolonToken',
		'identifierToken',
		'abstractToken',
		'asToken',
		'covariantToken',
		'deferredToken',
		'dynamicToken',
		'exportToken',
		'extensionToken',
		'externalToken',
		'factoryToken',
		'functionToken',
		'getToken',
		'implementsToken',
		'importToken',
		'interfaceToken',
		'lateToken',
		'libraryToken',
		'operatorToken',
		'mixinToken',
		'partToken',
		'requiredToken',
		'setToken',
		'staticToken',
		'typedefToken',
		'asyncToken',
		'hideToken',
		'ofToken',
		'onToken',
		'showToken',
		'syncToken',
		'awaitToken',
		'yieldToken'
	],
	#category : #'SmaCC_Dart'
}

{ #category : #generated }
DartBreakStatementNode >> abstractToken [

	^ abstractToken
]

{ #category : #generated }
DartBreakStatementNode >> abstractToken: aSmaCCToken [

	abstractToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> acceptVisitor: aProgramVisitor [

	^ aProgramVisitor visitBreakStatement: self
]

{ #category : #generated }
DartBreakStatementNode >> asToken [

	^ asToken
]

{ #category : #generated }
DartBreakStatementNode >> asToken: aSmaCCToken [

	asToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> asyncToken [

	^ asyncToken
]

{ #category : #generated }
DartBreakStatementNode >> asyncToken: aSmaCCToken [

	asyncToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> awaitToken [

	^ awaitToken
]

{ #category : #generated }
DartBreakStatementNode >> awaitToken: aSmaCCToken [

	awaitToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> breakToken [

	^ breakToken
]

{ #category : #generated }
DartBreakStatementNode >> breakToken: aSmaCCToken [

	breakToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> covariantToken [

	^ covariantToken
]

{ #category : #generated }
DartBreakStatementNode >> covariantToken: aSmaCCToken [

	covariantToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> deferredToken [

	^ deferredToken
]

{ #category : #generated }
DartBreakStatementNode >> deferredToken: aSmaCCToken [

	deferredToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> dynamicToken [

	^ dynamicToken
]

{ #category : #generated }
DartBreakStatementNode >> dynamicToken: aSmaCCToken [

	dynamicToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> exportToken [

	^ exportToken
]

{ #category : #generated }
DartBreakStatementNode >> exportToken: aSmaCCToken [

	exportToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> extensionToken [

	^ extensionToken
]

{ #category : #generated }
DartBreakStatementNode >> extensionToken: aSmaCCToken [

	extensionToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> externalToken [

	^ externalToken
]

{ #category : #generated }
DartBreakStatementNode >> externalToken: aSmaCCToken [

	externalToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> factoryToken [

	^ factoryToken
]

{ #category : #generated }
DartBreakStatementNode >> factoryToken: aSmaCCToken [

	factoryToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> functionToken [

	^ functionToken
]

{ #category : #generated }
DartBreakStatementNode >> functionToken: aSmaCCToken [

	functionToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> getToken [

	^ getToken
]

{ #category : #generated }
DartBreakStatementNode >> getToken: aSmaCCToken [

	getToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> hideToken [

	^ hideToken
]

{ #category : #generated }
DartBreakStatementNode >> hideToken: aSmaCCToken [

	hideToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> identifierToken [

	^ identifierToken
]

{ #category : #generated }
DartBreakStatementNode >> identifierToken: aSmaCCToken [

	identifierToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> implementsToken [

	^ implementsToken
]

{ #category : #generated }
DartBreakStatementNode >> implementsToken: aSmaCCToken [

	implementsToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> importToken [

	^ importToken
]

{ #category : #generated }
DartBreakStatementNode >> importToken: aSmaCCToken [

	importToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> interfaceToken [

	^ interfaceToken
]

{ #category : #generated }
DartBreakStatementNode >> interfaceToken: aSmaCCToken [

	interfaceToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> lateToken [

	^ lateToken
]

{ #category : #generated }
DartBreakStatementNode >> lateToken: aSmaCCToken [

	lateToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> libraryToken [

	^ libraryToken
]

{ #category : #generated }
DartBreakStatementNode >> libraryToken: aSmaCCToken [

	libraryToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> mixinToken [

	^ mixinToken
]

{ #category : #generated }
DartBreakStatementNode >> mixinToken: aSmaCCToken [

	mixinToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> ofToken [

	^ ofToken
]

{ #category : #generated }
DartBreakStatementNode >> ofToken: aSmaCCToken [

	ofToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> onToken [

	^ onToken
]

{ #category : #generated }
DartBreakStatementNode >> onToken: aSmaCCToken [

	onToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> operatorToken [

	^ operatorToken
]

{ #category : #generated }
DartBreakStatementNode >> operatorToken: aSmaCCToken [

	operatorToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> partToken [

	^ partToken
]

{ #category : #generated }
DartBreakStatementNode >> partToken: aSmaCCToken [

	partToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> requiredToken [

	^ requiredToken
]

{ #category : #generated }
DartBreakStatementNode >> requiredToken: aSmaCCToken [

	requiredToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> semicolonToken [

	^ semicolonToken
]

{ #category : #generated }
DartBreakStatementNode >> semicolonToken: aSmaCCToken [

	semicolonToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> setToken [

	^ setToken
]

{ #category : #generated }
DartBreakStatementNode >> setToken: aSmaCCToken [

	setToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> showToken [

	^ showToken
]

{ #category : #generated }
DartBreakStatementNode >> showToken: aSmaCCToken [

	showToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> staticToken [

	^ staticToken
]

{ #category : #generated }
DartBreakStatementNode >> staticToken: aSmaCCToken [

	staticToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> syncToken [

	^ syncToken
]

{ #category : #generated }
DartBreakStatementNode >> syncToken: aSmaCCToken [

	syncToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> tokenVariables [

	^ #( #breakToken #semicolonToken #identifierToken #abstractToken
	     #asToken #covariantToken #deferredToken #dynamicToken
	     #exportToken #extensionToken #externalToken #factoryToken
	     #functionToken #getToken #implementsToken #importToken
	     #interfaceToken #lateToken #libraryToken #operatorToken
	     #mixinToken #partToken #requiredToken #setToken #staticToken
	     #typedefToken #asyncToken #hideToken #ofToken #onToken #showToken
	     #syncToken #awaitToken #yieldToken )
]

{ #category : #generated }
DartBreakStatementNode >> typedefToken [

	^ typedefToken
]

{ #category : #generated }
DartBreakStatementNode >> typedefToken: aSmaCCToken [

	typedefToken := aSmaCCToken
]

{ #category : #generated }
DartBreakStatementNode >> yieldToken [

	^ yieldToken
]

{ #category : #generated }
DartBreakStatementNode >> yieldToken: aSmaCCToken [

	yieldToken := aSmaCCToken
]
